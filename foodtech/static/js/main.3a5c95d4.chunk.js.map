{"version":3,"sources":["assets/images/background-tv-sber.jpg","assets/icons/plus.svg","assets/icons/done.svg","components/Pin/shadow.svg","pages/Cart/bg.jpg","pages/Status/figure-1.svg","pages/Status/figure-2.svg","pages/Status/figure-3.svg","pages/Status/figure-4.svg","pages/Status/figure-5.svg","pages/Status/figure-6.svg","pages/Status/figure-7.svg","pages/Status/figure-8.svg","pages/Status/figure-9.svg","pages/Promo/popcorn-bites.png","pages/Promo/popcorn-1.png","pages/Promo/popcorn-2.png","pages/Promo/popcorn-3.png","pages/Promo/popcorn-4.png","pages/NoArea/face.svg","pages/NoArea/bg.jpg","pages/Error/Error.assets/circles.svg","pages/Error/Error.assets/warning.svg","components/Spinner/spinner.svg","tools/new-spatial-navigation.js","tools/browser.ts","tools/create-action.ts","store/actions/app.ts","store/selectors/index.ts","store/reducers/helpers/catalogPage.ts","store/actions/native.tsx","store/constants/router.tsx","store/thunks/addressFullPage.ts","store/thunks/native.ts","store/constants/index.tsx","store/reducers/data/products.ts","store/reducers/data/productsDiff.ts","store/reducers/data/user.ts","store/reducers/data/delivery.ts","store/reducers/model/cart.ts","store/reducers/model/user.ts","store/reducers/view/catalogPage.ts","store/reducers/view/catalogPage@touch.ts","tools/split-by-thousands.ts","tools/format-phone-number.ts","store/reducers/view/cartPage.ts","hooks/useSelector.tsx","hooks/useDispatch.tsx","store/actions/addressSimplePage.tsx","style/const/font.ts","style/const/transition.ts","pages/AddressSimple/SuggestItem/AddressSimpleSuggestItem.tsx","store/reducers/view/addressSimplePage.tsx","store/reducers/view/addressFullPage.tsx","store/reducers/view/header.ts","store/reducers/view/errorPage.tsx","store/reducers/view/waitPage.ts","store/actions/server.tsx","store/index.tsx","store/reducers/index.tsx","store/reducers/model/router.ts","style/const/icon.ts","style/const/color.ts","style/const/layout.ts","components/Text/Headline.ts","hooks/useThrottledFn.tsx","style/const/focus.ts","style/mixin/focus.ts","components/Text/Button.ts","components/HeaderButton/HeaderButton.tsx","components/HeaderAddress/HeaderAddress.tsx","components/HeaderCart/HeaderCart.tsx","components/Header/Header.tsx","components/AppLayout/AppLayout.tsx","hooks/useFocusOnMount.tsx","store/actions/catalogPage.tsx","components/Text/Caption.ts","components/Badge/Badge.tsx","components/Text/Footnote.ts","components/IndexBadge/IndexBadge.tsx","components/Text/Body.ts","pages/Catalog/ListItem/CatalogListItem.tsx","pages/Catalog/List/CatalogList.tsx","components/Skeleton/Skeleton.tsx","pages/Catalog/Skeleton/CatalogSkeleton.tsx","pages/Catalog/Catalog.tsx","components/Button/Button.tsx","components/Pin/Pin.tsx","components/Text/Paragraph.ts","pages/Cart/Info/CartInfo.tsx","components/Label/Label.tsx","pages/Cart/ListItem/CartListItem.tsx","store/actions/cartPage.tsx","pages/Cart/List/CartList.tsx","pages/Cart/Cart.tsx","pages/Status/Status.tsx","pages/Promo/Promo.tsx","pages/NoArea/NoArea.tsx","hooks/useFocusOnChange.ts","tools/2gis.tsx","tools/request.tsx","components/Input/Input.tsx","pages/AddressSimple/AddressSimple.tsx","tools/noop.ts","pages/AddressFull/AddressFullAll.tsx","pages/AddressFull/AddressFullPhone.tsx","store/actions/addressFullPage.ts","pages/AddressFull/AddressFullApartment.tsx","pages/AddressFull/AddressFullEntrance.tsx","pages/AddressFull/AddressFullFloor.tsx","pages/AddressFull/AddressFull.tsx","pages/Error/Error.tsx","components/Spinner/Spinner.tsx","pages/Wait/Wait.tsx","components/Root/Root@desktop.tsx","style/const/layout@touch.ts","components/Text/Body@touch.ts","components/Text/Button@touch.ts","components/HeaderButton/HeaderButton@touch.tsx","components/HeaderAddress/HeaderAddress@touch.tsx","components/HeaderCart/HeaderCart@touch.tsx","components/Header/Header@touch.tsx","components/AppLayout/AppLayout@touch.tsx","pages/Catalog/ListItem/CatalogListItem@touch.tsx","pages/Catalog/List/CatalogList@touch.tsx","pages/Catalog/Catalog@touch.tsx","components/Root/Root@touch.tsx","components/Root/Root.tsx","index.tsx","assets/icons/add.svg","components/HeaderAddress/address.svg","components/HeaderCart/cart.svg","components/Header/Header.assets/chevron-left.svg","components/Header/Header.assets/logo.svg","assets/icons/remove.svg"],"names":["module","exports","window","ARROW_KEY_CODE","37","38","39","40","mapOfBoundRect","startingPoint","savedSearchOrigin","element","rect","navigate","dir","searchOrigin","document","activeElement","body","querySelector","elementStyle","getComputedStyle","invisibleStyle","disabled","includes","getPropertyValue","documentElement","getBoundingClientRect","height","width","left","right","top","bottom","isVisibleInScroller","scroller","getScrollContainer","findSearchOrigin","console","log","eventTarget","elementFromPosition","elementFromPoint","x","y","isFocusable","isContainer","getSpatialNavigationContainer","container","nodeName","contentDocument","bestInsideCandidate","spatialNavigationSearch","candidates","getSpatialNavigationCandidates","mode","focusingController","parentContainer","parentElement","location","parent","navigateChain","bestCandidate","createSpatNavEvents","focus","preventScroll","scrollingController","isScrollable","isScrollBoundary","moveScroll","isHTMLScrollBoundary","ownerDocument","option","childElementCount","getElementsByTagName","children","elem","isDelegableContainer","push","concat","filter","isVisible","getFilteredSpatialNavigationCandidates","targetElement","filteredCandidates","length","args","this","bestTarget","internalCandidates","externalCandidates","insideOverlappedCandidates","focusableAreas","overlappedCandidates","forEach","isEntirelyVisible","getOverlappedCandidates","defaultContainer","defaultCandidates","contains","candidate","fullyOverlapped","overlappedByParent","map","elm","flat","currentElm","getClosestElement","getDistanceFromPoint","getInnerDistance","selectBestCandidateFromEdge","selectBestCandidate","innerTarget","descendantsBest","splice","indexOf","originalContainer","eventTargetRect","undefined","candidateRect","candidateBody","isOutside","isInside","spatialNavigationFunction","currentTargetRect","distanceFunction","alignedCandidates","isAligned","getAbsoluteDistance","getDistance","frameElement","minDistance","Number","POSITIVE_INFINITY","minDistanceElements","i","distance","getEuclideanDistance","scrollContainer","isScrollContainer","focusables","Array","prototype","call","eventType","containerElement","currentElement","direction","triggeredEvent","CustomEvent","bubbles","cancelable","detail","causedTarget","dispatchEvent","readCssVar","varName","trim","currentOption","nextContainer","offset","scrollLeft","scrollTop","isCSSSpatNavContain","overflowX","overflowY","isOverflow","scrollWidth","clientWidth","scrollHeight","clientHeight","result","winScrollY","winScrollX","Math","abs","elementRect","nearestScroller","scrollerRect","DOMRect","innerWidth","innerHeight","tabIndex","tagName","getAttribute","isAtagWithoutHref","isActuallyDisabled","inert","isExpresslyInert","isVisibleStyleProperty","style","opacity","isBeingRendered","offsetX","parseInt","offsetWidth","offsetY","offsetHeight","isNaN","hitTestPoint","middle","leftTop","rightBottom","point","elemFromPoint","hitTest","containerRect","thisVisibility","childRect","rightEdgeCheck","leftEdgeCheck","topEdgeCheck","bottomEdgeCheck","rect1","rect2","isRightSide","isBelow","points","getEntryAndExitPoints","P1","entryPoint","exitPoint","P2","sqrt","pow","baseEdge","up","down","orthogonalBias","alignBias","A","B","C","intersectionRect","intersection_rect","area","new_location","max","new_max_point","min","getIntersectionRect","D","get","boundingClientRect","toFixed","set","enableExperimentalAPIs","currentKeyMode","__spatialNavigation__","keyMode","getInitialAPIs","Object","assign","canScroll","findTarget","findCandidate","bestNextTarget","isArray","findCandidates","bind","findNextTarget","getDistanceFromTarget","candidateElement","getExperimentalAPI","seal","_keymode","setStartingPoint","__getSpatNavState","searchOriginRect","Element","CSS","registerProperty","name","syntax","inherits","initialValue","addEventListener","e","keyCode","shiftKey","ctrlKey","metaKey","altKey","defaultPrevented","focusNavigableArrowKey","startPosition","selectionStart","endPosition","selectionEnd","value","handlingEditableElement","preventDefault","Map","clientX","clientY","target","HTMLElement","requestAnimationFrame","async","scrollIntoView","behavior","block","inline","Promise","resolve","IntersectionObserver","entry","isIntersecting","threshold","observe","event","HTMLButtonElement","click","mobileDetect","navigator","userAgent","vendor","test","substr","createAction","type","payload","createEmptyAction","closeAppAction","selectProductById","state","itemId","productsData","itemsMap","selectProductDiffById","productsDiffData","selectCartItemById","cart","selectPathname","router","pathname","selectHeader","layout","header","formatPrice","price","ceil","prepareCount","cartItem","count","calculateButtonDisabled","productItem","quantityLeft","getQuantityLeftById","productItemDiff","getDisabled","getPriceById","preparePriceById","getOldPriceById","formatSale","oldValue","newValue","String","getCountById","countInCart","wantMoreThanHave","canAddMore","addItemAction","removeItemAction","ROUTES","addressFullValidationOkThunk","dispatch","getState","addressFullPage","nextFocus","currentRoute","ADDRESS_FULL_ALL","goBack","replace","addressFullSuccessThunk","goToCatalogThunk","currentPathname","goToCatalogAction","ROOT","CATALOG","CART","ADDRESS_SIMPLE","go","history","validationOkThunk","validationOkAction","STATUS","initialState","delivery","minimalPrice","deliveryTime","order","totalCount","totalPrice","orderId","userData","customerName","phoneNumber","latitude","longitude","address","city","street","house","building","floor","entrance","apartment","doorCode","userModel","catalogPage","selectedItemId","screenIndexMap","wrapperXShift","listIndexOffset","catalogPageTouch","cartPage","wrapperYShift","selectedItemIndex","topGradientVisible","bottomGradientVisible","toMinimumPrice","hasRequiredData","makePurchaseButtonView","isMakePurchaseButtonDisabled","personalAddress","errorPage","title","subtitle","text","isBackButtonVisible","addressSimplePage","inputValue","suggestsRaw","suggests","selectedSuggestItemIndex","suggestListContainerYShift","isSubmitButtonDisabled","submitButtonFocusHash","inputFocusHash","addressInputValue","phoneNumberInputValue","apartmentInputValue","entranceInputValue","floorInputValue","waitPage","normalizeProducts","productsMaps","keys","reduce","acc","id","guid","quantity_left","imageUrl","images_urls","action","stock","computeProductItemsMapBasedOnChanges","productsDiffMap","changes","entries","quantityLeftString","priceString","data","customer_name","phone_num","address_string","door_code","device_location","deliveryData","time","minimal_amount","cartModel","countString","item","shouldRemoveMention","actualCount","cartItemId","clear","order_id","values","getTotalCount","getTotalPrice","normalizePhone","from","symbol","index","firstSymbol","otherSymbols","slice","join","suggestItem","full_name","addressComponent","components","number","split","lat","lon","updateUserAddressBasedOnBuilding","input","ADDRESS_FULL_PHONE","ADDRESS_FULL_APARTMENT","ADDRESS_FULL_ENTRANCE","ADDRESS_FULL_FLOOR","inputType","screenItemCount","prepareBadge","content","prepareIndex","catalogPageView","firstItemId","getSelectedItemId","getListIndexOffset","cardWidth","cardGap","getWrapperXShift","fill","_","getScreenIndexMap","shouldFocusOnMount","oldPrice","isWantMoreThanHave","badge","isButtonDisabled","prepareCatalogItemsMap","catalogPageTouchView","buttonDisabled","splitByThousands","n","toString","formatPhoneNumber","digit","renderSpace","prepareLabel","cartPageView","label","isMoreButtonDisabled","prepareItemsMap","prepareTotalPrice","prepareToMinimumPrice","relatedIndex","getWrapperYShift","calculateMakePurchaseDisabled","calculateMakePurchaseButtonView","prepareTopGradientVisible","prepareBottomGradientVisible","Boolean","prepareHasRequiredData","getFormattedPhoneNumber","getFormattedPersonalAddress","useSelector","mapStateToProps","useReduxSelector","useDispatch","useReduxDispatch","addressSetSuggestsAction","font","light","normal","regular","medium","semibold","bold","extrabold","duration","defaultMs","timingFn","easeInOut","default","transition","StyledRoot","styled","div","AddressSimpleSuggestListItem","memoizedOnClick","React","useCallback","memoizedOnFocus","onClick","onFocus","addressSimplePageView","random","prepareSuggestItems","prepareSuggestListContainerYShift","prepareIsSubmitButtonDisabled","addressFullPageView","options","find","computeNextFocus","routeToTitleMap","ERROR","NO_AREA","routeToVisibilityMap","headerView","getTitle","getAddress","getCart","mapOrderErrorTypeToProps","partner","retryButtonText","closeButtonText","payment","timing","errorPageView","waitPageView","askForItemsChangesAction","askForOrderStatusAction","createHashHistory","middlewares","thunk","routerMiddleware","next","AssistantClient","close","sendData","action_id","LOCATION_CHANGE","nextPathname","setTimeout","process","store","createReduxStore","routerModel","changeRouter","connectRouter","getRouterModel","isMobile","produce","draft","applyReducer","reducer","getRootReducer","compose","applyMiddleware","dispatchToReduxStore","smart_app_data","command","itemsChangesAction","PROMO","orderErrorAction","addressInputAction","addressInputAddAction","addressFullInputAction","addressFullInputAddAction","WAIT","castItemSelectorFromStore","ignored_words","items","visible","castCatalogItemSelectorFromStore","serializeAddress","storeUser","confirmed","prepareAddress","source","appInitialData","onStart","onData","message","AssistantHost","JSON","stringify","onRequestState","item_selector","foodtech","currentScreen","substring","products","quantity","discountValue","castFromStore","stateString","updateState","ready","icon","sizePx","color","white","primary","secondary","active","warning","secondary1","secondary2","critical","inactive","surface","widthPx","heightPx","headerHeightPx","footerHeightPx","contentHeightPx","HeadlineText1","HeadlineText2","HeadlineText3","HeadlineText4","defaultOptions","leading","trailing","useThrottledFn","fn","timeout","dependencies","_useThrottledFn","paddingPx","borderSizePx","positionPx","focusBorderMixin","isFocused","borderRadius","css","ruleset","syntheticFocus","ButtonText1","StyledHeaderButton","textHeightPx","StyledText","HeaderButton","handleClick","addressIconSizePx","StyledIcon","addressIcon","HeaderAddress","cartIconSizePx","cartIcon","badgeOffsetPx","StyledBadge","span","HeaderCart","StyledHeader","backButtonIconSizePx","StyledBackButton","backButtonIcon","StyledSection","StyledLogo","logoIcon","StyledTitle","StyledContainer","gradientBackground","AppContent","props","currentTarget","AppLayout","onScroll","useFocusOnMount","forwardRef","ref","useRef","onMountRef","useEffect","current","CaptionText","size","lineHeight","contentMap","sale","backgroundColorMap","badgeHeightPx","FootnoteText1","FootnoteText2","mapSizeToPx","mapSizeToParams","xs","s","m","StyledIndexBadge","IndexBadge","BodyText1","BodyText2","StyledThumb","StyledDescription","cardHeightPx","StyledName","StyledPriceContainer","StyledPrice","StyledOldPrice","StyledCount","isWarning","buttonIconSizePx","buttonSizePx","buttonOffsetXPx","buttonOffsetYPx","StyledButton","isDisabled","isActive","doneIcon","plusIcon","CatalogListItemBadge","className","contentProvider","AddAnimation","keyframes","addActiveDurationMs","ShakeAnimation","StyledCatalogListItem","isShaking","CatalogListItem","isCardActive","isButtonActive","displayCount","setCardActive","useState","setButtonActive","setDisplayCount","prevCountRef","nextCount","useActive","doShake","setShaking","useShake","handleFocus","StyledCatalogList","StyledWrapper","CatalogList","wrapperStyle","useMemo","transform","key","Skeleton","itemWidth","itemHeight","rowCount","columnCount","paddingBetweenColumns","paddingBetweenRows","list","columnIndex","rowIndex","rx","ry","getWidthByCount","skeletonWidthPx","skeletonPaddingXPx","skeletonPaddingYPx","backgroundColor","foregroundColor","CatalogSkeleton","speed","Catalog","buttonViewBackgroundMap","view","Button","mountFocusRef","as","StyledPin","StyledBody","StyledKernel","kernelWidthPx","StyledShadow","shadowImage","Pin","ParagraphText1","ParagraphText2","StyledCartInfo","StyledTime","StyledUnit","StyledAddress","StyledPersonal","StyledPersonalLocation","StyledPersonalPhoneNumber","StyledPersonalName","StyledAskPersonal","CartInfoButton","CartInfo","handlePurchaseClick","handleSetAddressClick","textColorMap","StyledLabel","StyledInfo","isOneLine","StyledSelector","StyledSelectorValue","iconTypeIconMap","less","removeIcon","more","addIcon","remove","selectorIconSizePx","StyledSelectorButton","button","selectorButtonSizePx","iconType","StyledCartListItem","CartListItem","handleLessClick","handleMoreClick","handleRemoveClick","Infinity","aria-label","StyledCartList","StyledTotalPrice","StyledMinimalPrice","CartList","StyledBackground","bgImage","Cart","StatusButton","StatusContainer","StatusOrderNumber","StatusOrderTime","StatusFigure","params","bgUrl","topPx","leftPx","figureList","figureIcon1","figureIcon2","figureIcon3","figureIcon4","figureIcon5","figureIcon6","figureIcon7","figureIcon8","figureIcon9","Status","handleButtonClick","TextContainer","Title","Subtitle","ButtonContainer","PopcornContainer","popcornBites","popcornList","popcorn1","popcorn2","popcorn3","popcorn4","Popcorn","popcornStyle","Promo","handleClickSubmitButton","handleCloseButtonClick","StyledFaceIcon","faceIcon","StyledSubtitle","StyledButtonContainer","NoArea","handleChangeButtonClick","useFocusOnChange","hash","onChangeFocusRef","getSuggests","q","then","url","fetch","response","ok","statusText","json","makeRequest","local","fields","viewpoint1","viewpoint2","is_viewport_change","meta","code","error","isMinified","StyledInput","Input","onSubmit","onChange","onRootKeyPress","shouldFocusInputOnMount","setFocus","isUsing","setUsing","inputRef","onMountRootRef","rootRef","handleRootFocus","handleRootBlur","handleRootKeyPress","handleInputKeyPress","stopPropagation","isTitleMinified","onBlur","onKeyPress","StyledInputContainer","StyledSuggestList","hidden","StyledSuggestListContainer","yShift","AddressSimple","isKeyboardExpanded","useMediaQuery","submitButtonRef","inputRootRef","memoizedOnInputChange","memoizedOnClickButton","catch","noop","StyledFirstRow","StyledSecondRow","StyledThirdRow","SubmitButton","AddressFullAll","handleSubmitClick","AddressFullPhone","handleInputChange","nativeEvent","InputEvent","handleInputSubmit","AddressFullApartment","AddressFullEntrance","AddressFullFloor","AddressFull","path","ErrorPage","circlesPositionYPx","Circles","circlesImage","WarningIcon","warningIcon","Error","handleRetryButtonClick","Spinner","spinnerImage","Text","Wait","ButtonText2","HeaderButtonTouch","HeaderAddressTouch","HeaderCartTouch","HeaderTouch","Container","AppLayoutTouch","StyledListItem","StyledButtonsContainer","StyledTouchButton","StyledCountTouchButton","CatalogListItemTouch","isPossibleChangeCountActive","handleClickAdd","handleClickRemove","RemoveIcon","AddIcon","StyledScrollableCatalogContainer","CatalogListTouch","itemIds","itemsList","CatalogTouch","Root","ADDRESS_FULL","Sentry","dsn","renderApp","App","ReactDOM","render","getElementById","REACT_APP_REV"],"mappings":"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","file":"static/js/main.3a5c95d4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background-tv-sber.c2fb7871.jpg\";","module.exports = __webpack_public_path__ + \"static/media/plus.9af213dd.svg\";","module.exports = __webpack_public_path__ + \"static/media/done.f4143229.svg\";","module.exports = __webpack_public_path__ + \"static/media/shadow.bb1d84f8.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg.9b1bf414.jpg\";","module.exports = __webpack_public_path__ + \"static/media/figure-1.cad64c9b.svg\";","module.exports = __webpack_public_path__ + \"static/media/figure-2.a3044c99.svg\";","module.exports = __webpack_public_path__ + \"static/media/figure-3.7084a68e.svg\";","module.exports = __webpack_public_path__ + \"static/media/figure-4.74f25c1b.svg\";","module.exports = __webpack_public_path__ + \"static/media/figure-5.f121fdae.svg\";","module.exports = __webpack_public_path__ + \"static/media/figure-6.1cf5f7c7.svg\";","module.exports = __webpack_public_path__ + \"static/media/figure-7.ef978761.svg\";","module.exports = __webpack_public_path__ + \"static/media/figure-8.dcc5e538.svg\";","module.exports = __webpack_public_path__ + \"static/media/figure-9.fb8b47f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/popcorn-bites.fe1b0e1a.png\";","module.exports = __webpack_public_path__ + \"static/media/popcorn-1.518d9c78.png\";","module.exports = __webpack_public_path__ + \"static/media/popcorn-2.24d90011.png\";","module.exports = __webpack_public_path__ + \"static/media/popcorn-3.d7453441.png\";","module.exports = __webpack_public_path__ + \"static/media/popcorn-4.482bbaa4.png\";","module.exports = __webpack_public_path__ + \"static/media/face.1bb45b13.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg.7bd6b36b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/circles.b00db56e.svg\";","module.exports = __webpack_public_path__ + \"static/media/warning.4908c73c.svg\";","module.exports = __webpack_public_path__ + \"static/media/spinner.ee0e70c4.svg\";","/* eslint-disable */\n\n/* Spatial Navigation Polyfill\n *\n * It follows W3C official specification\n * https://drafts.csswg.org/css-nav-1/\n *\n * Copyright (c) 2018-2019 LG Electronics Inc.\n * https://github.com/WICG/spatial-navigation/polyfill\n *\n * Licensed under the MIT license (MIT)\n */\n\n(function () {\n    // The polyfill must not be executed, if it's already enabled via browser engine or browser extensions.\n    if ('navigate' in window) {\n        return;\n    }\n\n    const ARROW_KEY_CODE = { 37: 'left', 38: 'up', 39: 'right', 40: 'down' };\n    const TAB_KEY_CODE = 9;\n    let mapOfBoundRect = null;\n    let startingPoint = null; // Saves spatial navigation starting point\n    let savedSearchOrigin = { element: null, rect: null }; // Saves previous search origin\n    let searchOriginRect = null; // Rect of current search origin\n\n    window.__getSpatNavState = () => {\n        return {\n            mapOfBoundRect,\n            startingPoint,\n            savedSearchOrigin,\n            searchOriginRect,\n        };\n    };\n\n    /**\n     * Initiate the spatial navigation features of the polyfill.\n     * @function initiateSpatialNavigation\n     */\n    function initiateSpatialNavigation() {\n        /*\n         * Bind the standards APIs to be exposed to the window object for authors\n         */\n        window.navigate = navigate;\n        window.Element.prototype.spatialNavigationSearch = spatialNavigationSearch;\n        window.Element.prototype.focusableAreas = focusableAreas;\n        window.Element.prototype.getSpatialNavigationContainer = getSpatialNavigationContainer;\n\n        /*\n         * CSS.registerProperty() from the Properties and Values API\n         * Reference: https://drafts.css-houdini.org/css-properties-values-api/#the-registerproperty-function\n         */\n        if (window.CSS && CSS.registerProperty) {\n            if (\n                window.getComputedStyle(document.documentElement).getPropertyValue('--spatial-navigation-contain') ===\n                ''\n            ) {\n                CSS.registerProperty({\n                    name: '--spatial-navigation-contain',\n                    syntax: 'auto | contain',\n                    inherits: false,\n                    initialValue: 'auto',\n                });\n            }\n\n            if (\n                window.getComputedStyle(document.documentElement).getPropertyValue('--spatial-navigation-action') === ''\n            ) {\n                CSS.registerProperty({\n                    name: '--spatial-navigation-action',\n                    syntax: 'auto | focus | scroll',\n                    inherits: false,\n                    initialValue: 'auto',\n                });\n            }\n\n            if (\n                window.getComputedStyle(document.documentElement).getPropertyValue('--spatial-navigation-function') ===\n                ''\n            ) {\n                CSS.registerProperty({\n                    name: '--spatial-navigation-function',\n                    syntax: 'normal | grid',\n                    inherits: false,\n                    initialValue: 'normal',\n                });\n            }\n        }\n    }\n\n    /**\n     * Add event handlers for the spatial navigation behavior.\n     * This function defines which input methods trigger the spatial navigation behavior.\n     * @function spatialNavigationHandler\n     */\n    function spatialNavigationHandler() {\n        /*\n         * keydown EventListener :\n         * If arrow key pressed, get the next focusing element and send it to focusing controller\n         */\n        window.addEventListener('keydown', (e) => {\n            const currentKeyMode =\n                (parent && parent.__spatialNavigation__.keyMode) || window.__spatialNavigation__.keyMode;\n            const eventTarget = document.activeElement;\n            const dir = ARROW_KEY_CODE[e.keyCode];\n\n            if (e.keyCode === TAB_KEY_CODE) {\n                startingPoint = null;\n            }\n\n            if (\n                !currentKeyMode ||\n                currentKeyMode === 'NONE' ||\n                (currentKeyMode === 'SHIFTARROW' && !e.shiftKey) ||\n                (currentKeyMode === 'ARROW' && e.shiftKey) ||\n                e.ctrlKey ||\n                e.metaKey ||\n                e.altKey\n            )\n                return;\n\n            if (!e.defaultPrevented) {\n                let focusNavigableArrowKey = {\n                    left: true,\n                    up: true,\n                    right: true,\n                    down: true,\n                };\n\n                // Edge case (text input, area) : Don't move focus, just navigate cursor in text area\n                if (eventTarget.nodeName === 'INPUT' || eventTarget.nodeName === 'TEXTAREA') {\n                    focusNavigableArrowKey = handlingEditableElement(e);\n                }\n\n                if (focusNavigableArrowKey[dir]) {\n                    e.preventDefault();\n                    mapOfBoundRect = new Map();\n\n                    navigate(dir);\n\n                    mapOfBoundRect = null;\n                    startingPoint = null;\n                }\n            }\n        });\n\n        /*\n         * mouseup EventListener :\n         * If the mouse click a point in the page, the point will be the starting point.\n         * NOTE: Let UA set the spatial navigation starting point based on click\n         */\n        document.addEventListener('mouseup', (e) => {\n            startingPoint = { x: e.clientX, y: e.clientY };\n        });\n\n        /*\n         * focusin EventListener :\n         * When the element get the focus, save it and its DOMRect for resetting the search origin\n         * if it disappears.\n         */\n        window.addEventListener('focusin', (e) => {\n            if (e.target !== window) {\n                savedSearchOrigin.element = e.target;\n                savedSearchOrigin.rect = e.target.getBoundingClientRect();\n            }\n        });\n    }\n\n    /**\n     * Enable the author to trigger spatial navigation programmatically, as if the user had done so manually.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#dom-window-navigate}\n     * @function navigate\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     */\n    function navigate(dir) {\n        // spatial navigation steps\n\n        // 1\n        const searchOrigin = findSearchOrigin();\n        console.log(searchOrigin);\n        let eventTarget = searchOrigin;\n        let elementFromPosition = null;\n\n        // 2 Optional step, UA defined starting point\n        if (startingPoint) {\n            // if there is a starting point, set eventTarget as the element from position for getting the spatnav container\n            elementFromPosition = document.elementFromPoint(startingPoint.x, startingPoint.y);\n\n            // Use starting point if the starting point isn't inside the focusable element (but not container)\n            // * Starting point is meaningfull when:\n            // 1) starting point is inside the spatnav container\n            // 2) starting point is inside the non-focusable element\n            if (elementFromPosition === null) {\n                elementFromPosition = document.body;\n            }\n            if (isFocusable(elementFromPosition) && !isContainer(elementFromPosition)) {\n                startingPoint = null;\n            } else if (isContainer(elementFromPosition)) {\n                eventTarget = elementFromPosition;\n            } else {\n                eventTarget = elementFromPosition.getSpatialNavigationContainer();\n            }\n        }\n\n        // 4\n        if (eventTarget === window || eventTarget === document || eventTarget === document.documentElement) {\n            eventTarget = document.body || document.documentElement;\n        }\n\n        // 5\n        // At this point, spatialNavigationSearch can be applied.\n        // If startingPoint is either a scroll container or the document,\n        // find the best candidate within startingPoint\n        let container = null;\n        if ((isContainer(eventTarget) || eventTarget.nodeName === 'BODY') && !(eventTarget.nodeName === 'INPUT')) {\n            if (eventTarget.nodeName === 'IFRAME') {\n                eventTarget = eventTarget.contentDocument.documentElement;\n            }\n\n            container = container === window ? document.body : eventTarget;\n            let bestInsideCandidate = null;\n\n            // 5-2\n            if (\n                document.activeElement === searchOrigin ||\n                (document.activeElement === document.body && searchOrigin === document.documentElement)\n            ) {\n                if (getCSSSpatNavAction(eventTarget) === 'scroll') {\n                    if (scrollingController(eventTarget, dir)) return;\n                } else if (getCSSSpatNavAction(eventTarget) === 'focus') {\n                    bestInsideCandidate = eventTarget.spatialNavigationSearch(dir, {\n                        container: eventTarget,\n                        candidates: getSpatialNavigationCandidates(eventTarget, {\n                            mode: 'all',\n                        }),\n                    });\n                    if (focusingController(bestInsideCandidate, dir)) return;\n                } else if (getCSSSpatNavAction(eventTarget) === 'auto') {\n                    bestInsideCandidate = eventTarget.spatialNavigationSearch(dir, {\n                        container: eventTarget,\n                    });\n                    if (focusingController(bestInsideCandidate, dir) || scrollingController(eventTarget, dir)) return;\n                }\n            } else {\n                // when the previous search origin became offscreen\n                container = container.getSpatialNavigationContainer();\n            }\n        }\n\n        // 6\n        // Let container be the nearest ancestor of eventTarget\n        container = eventTarget.getSpatialNavigationContainer();\n        let parentContainer = container.parentElement ? container.getSpatialNavigationContainer() : null;\n\n        // When the container is the viewport of a browsing context\n        if (!parentContainer && window.location !== window.parent.location) {\n            parentContainer = window.parent.document.documentElement;\n        }\n\n        if (getCSSSpatNavAction(container) === 'scroll') {\n            if (scrollingController(container, dir)) return;\n        } else if (getCSSSpatNavAction(container) === 'focus') {\n            navigateChain(eventTarget, container, parentContainer, dir, 'all');\n        } else if (getCSSSpatNavAction(container) === 'auto') {\n            navigateChain(eventTarget, container, parentContainer, dir, 'visible');\n        }\n    }\n\n    /**\n     * Move the focus to the best candidate or do nothing.\n     * @function focusingController\n     * @param bestCandidate {Node} - The best candidate of the spatial navigation\n     * @param dir {SpatialNavigationDirection}- The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {boolean}\n     */\n    function focusingController(bestCandidate, dir) {\n        // 10 & 11\n        // When bestCandidate is found\n        if (bestCandidate) {\n            // When bestCandidate is a focusable element and not a container : move focus\n            /*\n             * [event] navbeforefocus : Fired before spatial or sequential navigation changes the focus.\n             */\n            if (!createSpatNavEvents('beforefocus', bestCandidate, null, dir)) return true;\n\n            const container = bestCandidate.getSpatialNavigationContainer();\n\n            if (container !== window && getCSSSpatNavAction(container) === 'focus') {\n                bestCandidate.focus();\n            } else {\n                bestCandidate.focus({ preventScroll: true });\n            }\n\n            startingPoint = null;\n            return true;\n        }\n\n        // When bestCandidate is not found within the scrollport of a container: Nothing\n        return false;\n    }\n\n    /**\n     * Directionally scroll the scrollable spatial navigation container if it can be manually scrolled more.\n     * @function scrollingController\n     * @param container {Node} - The spatial navigation container which can scroll\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {boolean}\n     */\n    function scrollingController(container, dir) {\n        // If there is any scrollable area among parent elements and it can be manually scrolled, scroll the document\n        if (isScrollable(container, dir) && !isScrollBoundary(container, dir)) {\n            moveScroll(container, dir);\n            return true;\n        }\n\n        // If the spatnav container is document and it can be scrolled, scroll the document\n        if (!container.parentElement && !isHTMLScrollBoundary(container, dir)) {\n            moveScroll(container.ownerDocument.documentElement, dir);\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Find the candidates within a spatial navigation container include delegable container.\n     * This function does not search inside delegable container or focusable container.\n     * In other words, this return candidates set is not included focusable elements inside delegable container or focusable container.\n     *\n     * @function getSpatialNavigationCandidates\n     * @param container {Node} - The spatial navigation container\n     * @param option {FocusableAreasOptions} - 'mode' attribute takes 'visible' or 'all' for searching the boundary of focusable elements.\n     *                                          Default value is 'visible'.\n     * @returns {sequence<Node>} candidate elements within the container\n     */\n    function getSpatialNavigationCandidates(container, option = { mode: 'visible' }) {\n        let candidates = [];\n\n        if (container.childElementCount > 0) {\n            if (!container.parentElement) {\n                container = container.getElementsByTagName('body')[0] || document.body;\n            }\n            const children = container.children;\n            for (const elem of children) {\n                if (isDelegableContainer(elem)) {\n                    candidates.push(elem);\n                } else if (isFocusable(elem)) {\n                    candidates.push(elem);\n\n                    if (!isContainer(elem) && elem.childElementCount) {\n                        candidates = candidates.concat(getSpatialNavigationCandidates(elem, { mode: 'all' }));\n                    }\n                } else if (elem.childElementCount) {\n                    candidates = candidates.concat(getSpatialNavigationCandidates(elem, { mode: 'all' }));\n                }\n            }\n        }\n\n        //   console.log(candidates)\n        return option.mode === 'all' ? candidates : candidates.filter(isVisible);\n    }\n\n    /**\n     * Find the candidates among focusable elements within a spatial navigation container from the search origin (currently focused element)\n     * depending on the directional information.\n     * @function getFilteredSpatialNavigationCandidates\n     * @param element {Node} - The currently focused element which is defined as 'search origin' in the spec\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @param candidates {sequence<Node>} - The candidates for spatial navigation without the directional information\n     * @param container {Node} - The spatial navigation container\n     * @returns {Node} The candidates for spatial navigation considering the directional information\n     */\n    function getFilteredSpatialNavigationCandidates(element, dir, candidates, container) {\n        const targetElement = element;\n        // Removed below line due to a bug. (iframe body rect is sometime weird.)\n        // const targetElement = (element.nodeName === 'IFRAME') ? element.contentDocument.body : element;\n        // If the container is unknown, get the closest container from the element\n        container = container || targetElement.getSpatialNavigationContainer();\n\n        // If the candidates is unknown, find candidates\n        // 5-1\n        candidates = !candidates || candidates.length <= 0 ? getSpatialNavigationCandidates(container) : candidates;\n        return filteredCandidates(targetElement, candidates, dir, container);\n    }\n\n    /**\n     * Find the best candidate among the candidates within the container from the search origin (currently focused element)\n     * @see {@link https://drafts.csswg.org/css-nav-1/#dom-element-spatialnavigationsearch}\n     * @function spatialNavigationSearch\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @param candidates {sequence<Node>} - The candidates for spatial navigation\n     * @param container {Node} - The spatial navigation container\n     * @returns {Node} The best candidate which will gain the focus\n     */\n    function spatialNavigationSearch(dir, args) {\n        const targetElement = this;\n        let internalCandidates = [];\n        let externalCandidates = [];\n        let insideOverlappedCandidates = getOverlappedCandidates(targetElement);\n        let bestTarget;\n\n        // Set default parameter value\n        if (!args) args = {};\n\n        const defaultContainer = targetElement.getSpatialNavigationContainer();\n        let defaultCandidates = getSpatialNavigationCandidates(defaultContainer);\n        const container = args.container || defaultContainer;\n        if (args.container && defaultContainer.contains(args.container)) {\n            defaultCandidates = defaultCandidates.concat(getSpatialNavigationCandidates(container));\n        }\n        const candidates =\n            args.candidates && args.candidates.length > 0\n                ? args.candidates.filter((candidate) => container.contains(candidate))\n                : defaultCandidates.filter((candidate) => container.contains(candidate) && container !== candidate);\n\n        // Find the best candidate\n        // 5\n        // If startingPoint is either a scroll container or the document,\n        // find the best candidate within startingPoint\n        if (candidates && candidates.length > 0) {\n            // Divide internal or external candidates\n            candidates.forEach((candidate) => {\n                if (candidate !== targetElement) {\n                    (targetElement.contains(candidate) && targetElement !== candidate\n                        ? internalCandidates\n                        : externalCandidates\n                    ).push(candidate);\n                }\n            });\n\n            // include overlapped element to the internalCandidates\n            let fullyOverlapped = insideOverlappedCandidates.filter(\n                (candidate) => !internalCandidates.includes(candidate),\n            );\n            let overlappedContainer = candidates.filter(\n                (candidate) => isContainer(candidate) && isEntirelyVisible(targetElement, candidate),\n            );\n            let overlappedByParent = overlappedContainer\n                .map((elm) => elm.focusableAreas())\n                .flat()\n                .filter((candidate) => candidate !== targetElement);\n\n            internalCandidates = internalCandidates\n                .concat(fullyOverlapped)\n                .filter((candidate) => container.contains(candidate));\n            externalCandidates = externalCandidates\n                .concat(overlappedByParent)\n                .filter((candidate) => container.contains(candidate));\n\n            // Filter external Candidates\n            if (externalCandidates.length > 0) {\n                externalCandidates = getFilteredSpatialNavigationCandidates(\n                    targetElement,\n                    dir,\n                    externalCandidates,\n                    container,\n                );\n            }\n\n            // If there isn't search origin element but search orgin rect exist  (search origin isn't in the layout case)\n            if (searchOriginRect) {\n                bestTarget = selectBestCandidate(\n                    targetElement,\n                    getFilteredSpatialNavigationCandidates(targetElement, dir, internalCandidates, container),\n                    dir,\n                );\n            }\n\n            if (internalCandidates && internalCandidates.length > 0 && !(targetElement.nodeName === 'INPUT')) {\n                bestTarget = selectBestCandidateFromEdge(targetElement, internalCandidates, dir);\n            }\n\n            bestTarget = bestTarget || selectBestCandidate(targetElement, externalCandidates, dir);\n\n            if (bestTarget && isDelegableContainer(bestTarget)) {\n                // if best target is delegable container, then find descendants candidate inside delegable container.\n                const innerTarget = getSpatialNavigationCandidates(bestTarget, {\n                    mode: 'all',\n                });\n                const descendantsBest =\n                    innerTarget.length > 0\n                        ? targetElement.spatialNavigationSearch(dir, {\n                              candidates: innerTarget,\n                              container: bestTarget,\n                          })\n                        : null;\n                if (descendantsBest) {\n                    bestTarget = descendantsBest;\n                } else if (!isFocusable(bestTarget)) {\n                    // if there is no target inside bestTarget and delegable container is not focusable,\n                    // then try to find another best target without curren best target.\n                    candidates.splice(candidates.indexOf(bestTarget), 1);\n                    bestTarget = candidates.length\n                        ? targetElement.spatialNavigationSearch(dir, {\n                              candidates: candidates,\n                              container: container,\n                          })\n                        : null;\n                }\n            }\n            return bestTarget;\n        }\n\n        return null;\n    }\n\n    /**\n     * Get the filtered candidate among candidates.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#select-the-best-candidate}\n     * @function filteredCandidates\n     * @param currentElm {Node} - The currently focused element which is defined as 'search origin' in the spec\n     * @param candidates {sequence<Node>} - The candidates for spatial navigation\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @param container {Node} - The spatial navigation container\n     * @returns {sequence<Node>} The filtered candidates which are not the search origin and not in the given spatial navigation direction from the search origin\n     */\n    // TODO: Need to fix filtering the candidates with more clean code\n    function filteredCandidates(currentElm, candidates, dir, container) {\n        const originalContainer = currentElm.getSpatialNavigationContainer();\n        let eventTargetRect;\n\n        // If D(dir) is null, let candidates be the same as visibles\n        if (dir === undefined) return candidates;\n\n        // Offscreen handling when originalContainer is not <HTML>\n        if (originalContainer.parentElement && container !== originalContainer && !isVisible(currentElm)) {\n            eventTargetRect = getBoundingClientRect(originalContainer);\n        } else {\n            eventTargetRect = searchOriginRect || getBoundingClientRect(currentElm);\n        }\n\n        /*\n         * Else, let candidates be the subset of the elements in visibles\n         * whose principal box’s geometric center is within the closed half plane\n         * whose boundary goes through the geometric center of starting point and is perpendicular to D.\n         */\n        if ((isContainer(currentElm) || currentElm.nodeName === 'BODY') && !(currentElm.nodeName === 'INPUT')) {\n            return candidates.filter((candidate) => {\n                const candidateRect = getBoundingClientRect(candidate);\n                return (\n                    container.contains(candidate) &&\n                    ((currentElm.contains(candidate) &&\n                        isInside(eventTargetRect, candidateRect) &&\n                        candidate !== currentElm) ||\n                        isOutside(candidateRect, eventTargetRect, dir))\n                );\n            });\n        } else {\n            return candidates.filter((candidate) => {\n                const candidateRect = getBoundingClientRect(candidate);\n                const candidateBody = candidate.nodeName === 'IFRAME' ? candidate.contentDocument.body : null;\n                return (\n                    container.contains(candidate) &&\n                    candidate !== currentElm &&\n                    candidateBody !== currentElm &&\n                    isOutside(candidateRect, eventTargetRect, dir) &&\n                    !isInside(eventTargetRect, candidateRect)\n                );\n            });\n        }\n    }\n\n    /**\n     * Select the best candidate among given candidates.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#select-the-best-candidate}\n     * @function selectBestCandidate\n     * @param currentElm {Node} - The currently focused element which is defined as 'search origin' in the spec\n     * @param candidates {sequence<Node>} - The candidates for spatial navigation\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {Node} The best candidate which will gain the focus\n     */\n    function selectBestCandidate(currentElm, candidates, dir) {\n        const container = currentElm.getSpatialNavigationContainer();\n        const spatialNavigationFunction = getComputedStyle(container).getPropertyValue('--spatial-navigation-function');\n        const currentTargetRect = searchOriginRect || getBoundingClientRect(currentElm);\n        let distanceFunction;\n        let alignedCandidates;\n\n        switch (spatialNavigationFunction) {\n            case 'grid':\n                alignedCandidates = candidates.filter((elm) =>\n                    isAligned(currentTargetRect, getBoundingClientRect(elm), dir),\n                );\n                if (alignedCandidates.length > 0) {\n                    candidates = alignedCandidates;\n                }\n                distanceFunction = getAbsoluteDistance;\n                break;\n            default:\n                distanceFunction = getDistance;\n                break;\n        }\n        return getClosestElement(currentElm, candidates, dir, distanceFunction);\n    }\n\n    /**\n     * Select the best candidate among candidates by finding the closet candidate from the edge of the currently focused element (search origin).\n     * @see {@link https://drafts.csswg.org/css-nav-1/#select-the-best-candidate (Step 5)}\n     * @function selectBestCandidateFromEdge\n     * @param currentElm {Node} - The currently focused element which is defined as 'search origin' in the spec\n     * @param candidates {sequence<Node>} - The candidates for spatial navigation\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {Node} The best candidate which will gain the focus\n     */\n    function selectBestCandidateFromEdge(currentElm, candidates, dir) {\n        if (startingPoint) return getClosestElement(currentElm, candidates, dir, getDistanceFromPoint);\n        else return getClosestElement(currentElm, candidates, dir, getInnerDistance);\n    }\n\n    /**\n     * Select the closest candidate from the currently focused element (search origin) among candidates by using the distance function.\n     * @function getClosestElement\n     * @param currentElm {Node} - The currently focused element which is defined as 'search origin' in the spec\n     * @param candidates {sequence<Node>} - The candidates for spatial navigation\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @param distanceFunction {function} - The distance function which measures the distance from the search origin to each candidate\n     * @returns {Node} The candidate which is the closest one from the search origin\n     */\n    function getClosestElement(currentElm, candidates, dir, distanceFunction) {\n        let eventTargetRect = null;\n        if (\n            window.location !== window.parent.location &&\n            (currentElm.nodeName === 'BODY' || currentElm.nodeName === 'HTML')\n        ) {\n            // If the eventTarget is iframe, then get rect of it based on its containing document\n            // Set the iframe's position as (0,0) because the rects of elements inside the iframe don't know the real iframe's position.\n            eventTargetRect = window.frameElement.getBoundingClientRect();\n            eventTargetRect.x = 0;\n            eventTargetRect.y = 0;\n        } else {\n            eventTargetRect = searchOriginRect || currentElm.getBoundingClientRect();\n        }\n\n        let minDistance = Number.POSITIVE_INFINITY;\n        let minDistanceElements = [];\n\n        if (candidates) {\n            for (let i = 0; i < candidates.length; i++) {\n                const distance = distanceFunction(eventTargetRect, getBoundingClientRect(candidates[i]), dir);\n\n                // If the same distance, the candidate will be selected in the DOM order\n                if (distance < minDistance) {\n                    minDistance = distance;\n                    minDistanceElements = [candidates[i]];\n                } else if (distance === minDistance) {\n                    minDistanceElements.push(candidates[i]);\n                }\n            }\n        }\n        if (minDistanceElements.length === 0) return null;\n\n        return minDistanceElements.length > 1 && distanceFunction === getAbsoluteDistance\n            ? getClosestElement(currentElm, minDistanceElements, dir, getEuclideanDistance)\n            : minDistanceElements[0];\n    }\n\n    /**\n     * Get container of an element.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#dom-element-getspatialnavigationcontainer}\n     * @module Element\n     * @function getSpatialNavigationContainer\n     * @returns {Node} The spatial navigation container\n     */\n    function getSpatialNavigationContainer() {\n        let container = this;\n\n        do {\n            if (!container.parentElement) {\n                if (window.location !== window.parent.location) {\n                    container = window.parent.document.documentElement;\n                } else {\n                    container = window.document.documentElement;\n                }\n                break;\n            } else {\n                container = container.parentElement;\n            }\n\n            // console.log(container, isContainer(container));\n        } while (!isContainer(container));\n        return container;\n    }\n\n    /**\n     * Get nearest scroll container of an element.\n     * @function getScrollContainer\n     * @param Element\n     * @returns {Node} The spatial navigation container\n     */\n    function getScrollContainer(element) {\n        let scrollContainer = element;\n\n        do {\n            if (!scrollContainer.parentElement) {\n                if (window.location !== window.parent.location) {\n                    scrollContainer = window.parent.document.documentElement;\n                } else {\n                    scrollContainer = window.document.documentElement;\n                }\n                break;\n            } else {\n                scrollContainer = scrollContainer.parentElement;\n            }\n        } while (!isScrollContainer(scrollContainer) || !isVisible(scrollContainer));\n\n        if (scrollContainer === document || scrollContainer === document.documentElement) {\n            scrollContainer = window;\n        }\n\n        return scrollContainer;\n    }\n\n    /**\n     * Find focusable elements within the spatial navigation container.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#dom-element-focusableareas}\n     * @function focusableAreas\n     * @param option {FocusableAreasOptions} - 'mode' attribute takes 'visible' or 'all' for searching the boundary of focusable elements.\n     *                                          Default value is 'visible'.\n     * @returns {sequence<Node>} All focusable elements or only visible focusable elements within the container\n     */\n    function focusableAreas(option = { mode: 'visible' }) {\n        const container = this.parentElement ? this : document.body;\n        const focusables = Array.prototype.filter.call(container.getElementsByTagName('*'), isFocusable);\n        return option.mode === 'all' ? focusables : focusables.filter(isVisible);\n    }\n\n    /**\n     * Create the NavigationEvent: navbeforefocus, navnotarget\n     * @see {@link https://drafts.csswg.org/css-nav-1/#events-navigationevent}\n     * @function createSpatNavEvents\n     * @param option {string} - Type of the navigation event (beforefocus, notarget)\n     * @param element {Node} - The target element of the event\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     */\n    function createSpatNavEvents(eventType, containerElement, currentElement, direction) {\n        if (['beforefocus', 'notarget'].includes(eventType)) {\n            const data = {\n                causedTarget: currentElement,\n                dir: direction,\n            };\n            const triggeredEvent = new CustomEvent('nav' + eventType, {\n                bubbles: true,\n                cancelable: true,\n                detail: data,\n            });\n            return containerElement.dispatchEvent(triggeredEvent);\n        }\n    }\n\n    /**\n     * Get the value of the CSS custom property of the element\n     * @function readCssVar\n     * @param element {Node}\n     * @param varName {string} - The name of the css custom property without '--'\n     * @returns {string} The value of the css custom property\n     */\n    function readCssVar(element, varName) {\n        return getComputedStyle(element).getPropertyValue(`--${varName}`).trim();\n    }\n\n    /**\n     * Decide whether or not the 'contain' value is given to 'spatial-navigation-contain' css property of an element\n     * @function isCSSSpatNavContain\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isCSSSpatNavContain(element) {\n        return readCssVar(element, 'spatial-navigation-contain') === 'contain';\n    }\n\n    /**\n     * Return the value of 'spatial-navigation-action' css property of an element\n     * @function getCSSSpatNavAction\n     * @param element {Node} - would be the spatial navigation container\n     * @returns {string} auto | focus | scroll\n     */\n    function getCSSSpatNavAction(element) {\n        return 'focus';\n        //   return readCssVar(element, 'spatial-navigation-action') || 'auto';\n    }\n\n    /**\n     * Only move the focus with spatial navigation. Manually scrolling isn't available.\n     * @function navigateChain\n     * @param eventTarget {Node} - currently focused element\n     * @param container {SpatialNavigationContainer} - container\n     * @param parentContainer {SpatialNavigationContainer} - parent container\n     * @param option - visible || all\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     */\n    function navigateChain(eventTarget, container, parentContainer, dir, option) {\n        let currentOption = {\n            candidates: getSpatialNavigationCandidates(container, { mode: option }),\n            container,\n        };\n        //   console.log(currentOption)\n\n        while (parentContainer) {\n            if (focusingController(eventTarget.spatialNavigationSearch(dir, currentOption), dir)) {\n                return;\n            } else {\n                if (option === 'visible' && scrollingController(container, dir)) return;\n                else {\n                    if (!createSpatNavEvents('notarget', container, eventTarget, dir)) return;\n\n                    // find the container\n                    if (container === document || container === document.documentElement) {\n                        if (window.location !== window.parent.location) {\n                            // The page is in an iframe. eventTarget needs to be reset because the position of the element in the iframe\n                            eventTarget = window.frameElement;\n                            container = eventTarget.ownerDocument.documentElement;\n                        }\n                    } else {\n                        container = parentContainer;\n                    }\n                    currentOption = {\n                        candidates: getSpatialNavigationCandidates(container, {\n                            mode: option,\n                        }),\n                        container,\n                    };\n                    let nextContainer = container.getSpatialNavigationContainer();\n\n                    if (nextContainer !== container) {\n                        parentContainer = nextContainer;\n                    } else {\n                        parentContainer = null;\n                    }\n                }\n            }\n        }\n\n        currentOption = {\n            candidates: getSpatialNavigationCandidates(container, { mode: option }),\n            container,\n        };\n\n        // Behavior after 'navnotarget' - Getting out from the current spatnav container\n        if (\n            !parentContainer &&\n            container &&\n            focusingController(eventTarget.spatialNavigationSearch(dir, currentOption), dir)\n        )\n            return;\n\n        if (!createSpatNavEvents('notarget', currentOption.container, eventTarget, dir)) return;\n\n        if (getCSSSpatNavAction(container) === 'auto' && option === 'visible') {\n            if (scrollingController(container, dir)) return;\n        }\n    }\n\n    /**\n     * Find search origin\n     * @see {@link https://drafts.csswg.org/css-nav-1/#nav}\n     * @function findSearchOrigin\n     * @returns {Node} The search origin for the spatial navigation\n     */\n    function findSearchOrigin() {\n        let searchOrigin = document.activeElement;\n\n        if (!searchOrigin || (searchOrigin === document.body && !document.querySelector(':focus'))) {\n            // When the previous search origin lost its focus by blur: (1) disable attribute (2) visibility: hidden\n            if (savedSearchOrigin.element && searchOrigin !== savedSearchOrigin.element) {\n                const elementStyle = window.getComputedStyle(savedSearchOrigin.element, null);\n                const invisibleStyle = ['hidden', 'collapse'];\n\n                if (\n                    savedSearchOrigin.element.disabled ||\n                    invisibleStyle.includes(elementStyle.getPropertyValue('visibility'))\n                ) {\n                    searchOrigin = savedSearchOrigin.element;\n                    return searchOrigin;\n                }\n            }\n            searchOrigin = document.documentElement;\n        }\n        // When the previous search origin lost its focus by blur: (1) display:none () element size turned into zero\n        if (\n            savedSearchOrigin.element &&\n            (getBoundingClientRect(savedSearchOrigin.element).height === 0 ||\n                getBoundingClientRect(savedSearchOrigin.element).width === 0)\n        ) {\n            (startingPoint = (savedSearchOrigin.left + savedSearchOrigin.right) / 2),\n                (savedSearchOrigin.top + savedSearchOrigin.bottom) / 2;\n            // searchOriginRect = savedSearchOrigin.rect;\n        }\n\n        if (!isVisibleInScroller(searchOrigin)) {\n            const scroller = getScrollContainer(searchOrigin);\n            if (scroller && (scroller === window || getCSSSpatNavAction(scroller) === 'auto')) return scroller;\n        }\n        return searchOrigin;\n    }\n\n    /**\n     * Move the scroll of an element depending on the given spatial navigation directrion\n     * (Assume that User Agent defined distance is '40px')\n     * @see {@link https://drafts.csswg.org/css-nav-1/#directionally-scroll-an-element}\n     * @function moveScroll\n     * @param element {Node} - The scrollable element\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @param offset {Number} - The explicit amount of offset for scrolling. Default value is 0.\n     */\n    function moveScroll(element, dir, offset = 0) {\n        if (element) {\n            switch (dir) {\n                case 'left':\n                    element.scrollLeft -= 40 + offset;\n                    break;\n                case 'right':\n                    element.scrollLeft += 40 + offset;\n                    break;\n                case 'up':\n                    element.scrollTop -= 40 + offset;\n                    break;\n                case 'down':\n                    element.scrollTop += 40 + offset;\n                    break;\n            }\n        }\n    }\n\n    /**\n     * Decide whether an element is container or not.\n     * @function isContainer\n     * @param element {Node} element\n     * @returns {boolean}\n     */\n    function isContainer(element) {\n        return (\n            !element.parentElement ||\n            element.nodeName === 'IFRAME' ||\n            isScrollContainer(element) ||\n            isCSSSpatNavContain(element)\n        );\n    }\n\n    /**\n     * Decide whether an element is delegable container or not.\n     * NOTE: THIS IS NON-NORMATIVE API.\n     * @function isDelegableContainer\n     * @param element {Node} element\n     * @returns {boolean}\n     */\n    function isDelegableContainer(element) {\n        return readCssVar(element, 'spatial-navigation-contain') === 'delegable';\n    }\n\n    /**\n     * Decide whether an element is a scrollable container or not.\n     * @see {@link https://drafts.csswg.org/css-overflow-3/#scroll-container}\n     * @function isScrollContainer\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isScrollContainer(element) {\n        const elementStyle = window.getComputedStyle(element, null);\n        const overflowX = elementStyle.getPropertyValue('overflow-x');\n        const overflowY = elementStyle.getPropertyValue('overflow-y');\n\n        return (overflowX !== 'visible' && overflowX !== 'clip' && isOverflow(element, 'left')) ||\n            (overflowY !== 'visible' && overflowY !== 'clip' && isOverflow(element, 'down'))\n            ? true\n            : false;\n    }\n\n    /**\n     * Decide whether this element is scrollable or not.\n     * NOTE: If the value of 'overflow' is given to either 'visible', 'clip', or 'hidden', the element isn't scrollable.\n     *       If the value is 'hidden', the element can be only programmically scrollable. (https://drafts.csswg.org/css-overflow-3/#valdef-overflow-hidden)\n     * @function isScrollable\n     * @param element {Node}\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {boolean}\n     */\n    function isScrollable(element, dir) {\n        // element, dir\n        if (element && typeof element === 'object') {\n            if (dir && typeof dir === 'string') {\n                // parameter: dir, element\n                if (isOverflow(element, dir)) {\n                    // style property\n                    const elementStyle = window.getComputedStyle(element, null);\n                    const overflowX = elementStyle.getPropertyValue('overflow-x');\n                    const overflowY = elementStyle.getPropertyValue('overflow-y');\n\n                    switch (dir) {\n                        case 'left':\n                        /* falls through */\n                        case 'right':\n                            return overflowX !== 'visible' && overflowX !== 'clip' && overflowX !== 'hidden';\n                        case 'up':\n                        /* falls through */\n                        case 'down':\n                            return overflowY !== 'visible' && overflowY !== 'clip' && overflowY !== 'hidden';\n                    }\n                }\n                return false;\n            } else {\n                // parameter: element\n                return (\n                    element.nodeName === 'HTML' ||\n                    element.nodeName === 'BODY' ||\n                    (isScrollContainer(element) && isOverflow(element))\n                );\n            }\n        }\n    }\n\n    /**\n     * Decide whether an element is overflow or not.\n     * @function isOverflow\n     * @param element {Node}\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {boolean}\n     */\n    function isOverflow(element, dir) {\n        if (element && typeof element === 'object') {\n            if (dir && typeof dir === 'string') {\n                // parameter: element, dir\n                switch (dir) {\n                    case 'left':\n                    /* falls through */\n                    case 'right':\n                        return element.scrollWidth > element.clientWidth;\n                    case 'up':\n                    /* falls through */\n                    case 'down':\n                        return element.scrollHeight > element.clientHeight;\n                }\n            } else {\n                // parameter: element\n                return element.scrollWidth > element.clientWidth || element.scrollHeight > element.clientHeight;\n            }\n            return false;\n        }\n    }\n\n    /**\n     * Decide whether the scrollbar of the browsing context reaches to the end or not.\n     * @function isHTMLScrollBoundary\n     * @param element {Node} - The top browsing context\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {boolean}\n     */\n    function isHTMLScrollBoundary(element, dir) {\n        let result = false;\n        switch (dir) {\n            case 'left':\n                result = element.scrollLeft === 0;\n                break;\n            case 'right':\n                result = element.scrollWidth - element.scrollLeft - element.clientWidth === 0;\n                break;\n            case 'up':\n                result = element.scrollTop === 0;\n                break;\n            case 'down':\n                result = element.scrollHeight - element.scrollTop - element.clientHeight === 0;\n                break;\n        }\n        return result;\n    }\n\n    /**\n     * Decide whether the scrollbar of an element reaches to the end or not.\n     * @function isScrollBoundary\n     * @param element {Node}\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {boolean}\n     */\n    function isScrollBoundary(element, dir) {\n        if (isScrollable(element, dir)) {\n            const winScrollY = element.scrollTop;\n            const winScrollX = element.scrollLeft;\n\n            const height = element.scrollHeight - element.clientHeight;\n            const width = element.scrollWidth - element.clientWidth;\n\n            switch (dir) {\n                case 'left':\n                    return winScrollX === 0;\n                case 'right':\n                    return Math.abs(winScrollX - width) <= 1;\n                case 'up':\n                    return winScrollY === 0;\n                case 'down':\n                    return Math.abs(winScrollY - height) <= 1;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Decide whether an element is inside the scorller viewport or not\n     *\n     * @function isVisibleInScroller\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isVisibleInScroller(element) {\n        const elementRect = element.getBoundingClientRect();\n        let nearestScroller = getScrollContainer(element);\n\n        let scrollerRect = null;\n        if (nearestScroller !== window) {\n            scrollerRect = getBoundingClientRect(nearestScroller);\n        } else {\n            scrollerRect = new DOMRect(0, 0, window.innerWidth, window.innerHeight);\n        }\n\n        if (isInside(scrollerRect, elementRect, 'left') && isInside(scrollerRect, elementRect, 'down')) return true;\n        else return false;\n    }\n\n    /**\n     * Decide whether an element is focusable for spatial navigation.\n     * 1. If element is the browsing context (document, iframe), then it's focusable,\n     * 2. If the element is scrollable container (regardless of scrollable axis), then it's focusable,\n     * 3. The value of tabIndex >= 0, then it's focusable,\n     * 4. If the element is disabled, it isn't focusable,\n     * 5. If the element is expressly inert, it isn't focusable,\n     * 6. Whether the element is being rendered or not.\n     *\n     * @function isFocusable\n     * @param element {Node}\n     * @returns {boolean}\n     *\n     * @see {@link https://html.spec.whatwg.org/multipage/interaction.html#focusable-area}\n     */\n    function isFocusable(element) {\n        if (\n            element.tabIndex < 0 ||\n            isAtagWithoutHref(element) ||\n            isActuallyDisabled(element) ||\n            isExpresslyInert(element) ||\n            !isBeingRendered(element)\n        )\n            return false;\n        else if (!element.parentElement || (isScrollable(element) && isOverflow(element)) || element.tabIndex >= 0)\n            return true;\n    }\n\n    /**\n     * Decide whether an element is a tag without href attribute or not.\n     *\n     * @function isAtagWithoutHref\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isAtagWithoutHref(element) {\n        return (\n            element.tagName === 'A' &&\n            element.getAttribute('href') === null &&\n            element.getAttribute('tabIndex') === null\n        );\n    }\n\n    /**\n     * Decide whether an element is actually disabled or not.\n     *\n     * @function isActuallyDisabled\n     * @param element {Node}\n     * @returns {boolean}\n     *\n     * @see {@link https://html.spec.whatwg.org/multipage/semantics-other.html#concept-element-disabled}\n     */\n    function isActuallyDisabled(element) {\n        if (['BUTTON', 'INPUT', 'SELECT', 'TEXTAREA', 'OPTGROUP', 'OPTION', 'FIELDSET'].includes(element.tagName))\n            return element.disabled;\n        else return false;\n    }\n\n    /**\n     * Decide whether the element is expressly inert or not.\n     * @see {@link https://html.spec.whatwg.org/multipage/interaction.html#expressly-inert}\n     * @function isExpresslyInert\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isExpresslyInert(element) {\n        return element.inert && !element.ownerDocument.documentElement.inert;\n    }\n\n    /**\n     * Decide whether the element is being rendered or not.\n     * 1. If an element has the style as \"visibility: hidden | collapse\" or \"display: none\", it is not being rendered.\n     * 2. If an element has the style as \"opacity: 0\", it is not being rendered.(that is, invisible).\n     * 3. If width and height of an element are explicitly set to 0, it is not being rendered.\n     * 4. If a parent element is hidden, an element itself is not being rendered.\n     * (CSS visibility property and display property are inherited.)\n     * @see {@link https://html.spec.whatwg.org/multipage/rendering.html#being-rendered}\n     * @function isBeingRendered\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isBeingRendered(element) {\n        if (!isVisibleStyleProperty(element.parentElement)) return false;\n        if (\n            !isVisibleStyleProperty(element) ||\n            element.style.opacity === '0' ||\n            window.getComputedStyle(element).height === '0px' ||\n            window.getComputedStyle(element).width === '0px'\n        )\n            return false;\n        return true;\n    }\n\n    /**\n     * Decide whether this element is partially or completely visible to user agent.\n     * @function isVisible\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isVisible(element) {\n        return !element.parentElement || (isVisibleStyleProperty(element) && hitTest(element));\n    }\n\n    /**\n     * Decide whether this element is completely visible in this viewport for the arrow direction.\n     * @function isEntirelyVisible\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isEntirelyVisible(element, container) {\n        const rect = getBoundingClientRect(element);\n        const containerElm = container || element.getSpatialNavigationContainer();\n        const containerRect = getBoundingClientRect(containerElm);\n\n        // FIXME: when element is bigger than container?\n        const entirelyVisible = !(\n            rect.left < containerRect.left ||\n            rect.right > containerRect.right ||\n            rect.top < containerRect.top ||\n            rect.bottom > containerRect.bottom\n        );\n\n        return entirelyVisible;\n    }\n\n    /**\n     * Decide the style property of this element is specified whether it's visible or not.\n     * @function isVisibleStyleProperty\n     * @param element {CSSStyleDeclaration}\n     * @returns {boolean}\n     */\n    function isVisibleStyleProperty(element) {\n        const elementStyle = window.getComputedStyle(element, null);\n        const thisVisibility = elementStyle.getPropertyValue('visibility');\n        const thisDisplay = elementStyle.getPropertyValue('display');\n        const invisibleStyle = ['hidden', 'collapse'];\n\n        return thisDisplay !== 'none' && !invisibleStyle.includes(thisVisibility);\n    }\n\n    /**\n     * Decide whether this element is entirely or partially visible within the viewport.\n     * @function hitTest\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function hitTest(element) {\n        const elementRect = getBoundingClientRect(element);\n        if (\n            element.nodeName !== 'IFRAME' &&\n            (elementRect.top < 0 ||\n                elementRect.left < 0 ||\n                elementRect.top > element.ownerDocument.documentElement.clientHeight ||\n                elementRect.left > element.ownerDocument.documentElement.clientWidth)\n        )\n            return false;\n\n        let offsetX = parseInt(element.offsetWidth) / 10;\n        let offsetY = parseInt(element.offsetHeight) / 10;\n\n        offsetX = isNaN(offsetX) ? 1 : offsetX;\n        offsetY = isNaN(offsetY) ? 1 : offsetY;\n\n        const hitTestPoint = {\n            // For performance, just using the three point(middle, leftTop, rightBottom) of the element for hit testing\n            middle: [(elementRect.left + elementRect.right) / 2, (elementRect.top + elementRect.bottom) / 2],\n            leftTop: [elementRect.left + offsetX, elementRect.top + offsetY],\n            rightBottom: [elementRect.right - offsetX, elementRect.bottom - offsetY],\n        };\n\n        for (const point in hitTestPoint) {\n            const elemFromPoint = element.ownerDocument.elementFromPoint(...hitTestPoint[point]);\n            if (element === elemFromPoint || element.contains(elemFromPoint)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Decide whether a child element is entirely or partially Included within container visually.\n     * @function isInside\n     * @param containerRect {DOMRect}\n     * @param childRect {DOMRect}\n     * @returns {boolean}\n     */\n    function isInside(containerRect, childRect) {\n        const rightEdgeCheck = containerRect.left < childRect.right && containerRect.right >= childRect.right;\n        const leftEdgeCheck = containerRect.left <= childRect.left && containerRect.right > childRect.left;\n        const topEdgeCheck = containerRect.top <= childRect.top && containerRect.bottom > childRect.top;\n        const bottomEdgeCheck = containerRect.top < childRect.bottom && containerRect.bottom >= childRect.bottom;\n        return (rightEdgeCheck || leftEdgeCheck) && (topEdgeCheck || bottomEdgeCheck);\n    }\n\n    /**\n     * Decide whether this element is entirely or partially visible within the viewport.\n     * Note: rect1 is outside of rect2 for the dir\n     * @function isOutside\n     * @param rect1 {DOMRect}\n     * @param rect2 {DOMRect}\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {boolean}\n     */\n    function isOutside(rect1, rect2, dir) {\n        switch (dir) {\n            case 'left':\n                return isRightSide(rect2, rect1);\n            case 'right':\n                return isRightSide(rect1, rect2);\n            case 'up':\n                return isBelow(rect2, rect1);\n            case 'down':\n                return isBelow(rect1, rect2);\n            default:\n                return false;\n        }\n    }\n\n    /* rect1 is right of rect2 */\n    function isRightSide(rect1, rect2) {\n        return (\n            rect1.left >= rect2.right ||\n            (rect1.left >= rect2.left &&\n                rect1.right > rect2.right &&\n                rect1.bottom > rect2.top &&\n                rect1.top < rect2.bottom)\n        );\n    }\n\n    /* rect1 is below of rect2 */\n    function isBelow(rect1, rect2) {\n        return (\n            rect1.top >= rect2.bottom ||\n            (rect1.top >= rect2.top &&\n                rect1.bottom > rect2.bottom &&\n                rect1.left < rect2.right &&\n                rect1.right > rect2.left)\n        );\n    }\n\n    /* rect1 is completely aligned or partially aligned for the direction */\n    function isAligned(rect1, rect2, dir) {\n        switch (dir) {\n            case 'left':\n            /* falls through */\n            case 'right':\n                return rect1.bottom > rect2.top && rect1.top < rect2.bottom;\n            case 'up':\n            /* falls through */\n            case 'down':\n                return rect1.right > rect2.left && rect1.left < rect2.right;\n            default:\n                return false;\n        }\n    }\n\n    /**\n     * Get distance between the search origin and a candidate element along the direction when candidate element is inside the search origin.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#find-the-shortest-distance}\n     * @function getDistanceFromPoint\n     * @param point {Point} - The search origin\n     * @param element {DOMRect} - A candidate element\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {Number} The euclidian distance between the spatial navigation container and an element inside it\n     */\n    function getDistanceFromPoint(point, element, dir) {\n        point = startingPoint;\n        // Get exit point, entry point -> {x: '', y: ''};\n        const points = getEntryAndExitPoints(dir, point, element);\n\n        // Find the points P1 inside the border box of starting point and P2 inside the border box of candidate\n        // that minimize the distance between these two points\n        const P1 = Math.abs(points.entryPoint.x - points.exitPoint.x);\n        const P2 = Math.abs(points.entryPoint.y - points.exitPoint.y);\n\n        // The result is euclidian distance between P1 and P2.\n        return Math.sqrt(Math.pow(P1, 2) + Math.pow(P2, 2));\n    }\n\n    /**\n     * Get distance between the search origin and a candidate element along the direction when candidate element is inside the search origin.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#find-the-shortest-distance}\n     * @function getInnerDistance\n     * @param rect1 {DOMRect} - The search origin\n     * @param rect2 {DOMRect} - A candidate element\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {Number} The euclidean distance between the spatial navigation container and an element inside it\n     */\n    function getInnerDistance(rect1, rect2, dir) {\n        const baseEdgeForEachDirection = {\n            left: 'right',\n            right: 'left',\n            up: 'bottom',\n            down: 'top',\n        };\n        const baseEdge = baseEdgeForEachDirection[dir];\n\n        return Math.abs(rect1[baseEdge] - rect2[baseEdge]);\n    }\n\n    /**\n     * Get the distance between the search origin and a candidate element considering the direction.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#calculating-the-distance}\n     * @function getDistance\n     * @param searchOrigin {DOMRect | Point} - The search origin\n     * @param candidateRect {DOMRect} - A candidate element\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {Number} The distance scoring between two elements\n     */\n    function getDistance(searchOrigin, candidateRect, dir) {\n        const kOrthogonalWeightForLeftRight = 30;\n        const kOrthogonalWeightForUpDown = 2;\n\n        let orthogonalBias = 0;\n        let alignBias = 0;\n        const alignWeight = 5.0;\n\n        // Get exit point, entry point -> {x: '', y: ''};\n        const points = getEntryAndExitPoints(dir, searchOrigin, candidateRect);\n\n        // Find the points P1 inside the border box of starting point and P2 inside the border box of candidate\n        // that minimize the distance between these two points\n        const P1 = Math.abs(points.entryPoint.x - points.exitPoint.x);\n        const P2 = Math.abs(points.entryPoint.y - points.exitPoint.y);\n\n        // A: The euclidean distance between P1 and P2.\n        const A = Math.sqrt(Math.pow(P1, 2) + Math.pow(P2, 2));\n        let B, C;\n\n        // B: The absolute distance in the direction which is orthogonal to dir between P1 and P2, or 0 if dir is null.\n        // C: The intersection edges between a candidate and the starting point.\n\n        // D: The square root of the area of intersection between the border boxes of candidate and starting point\n        const intersectionRect = getIntersectionRect(searchOrigin, candidateRect);\n        const D = intersectionRect.area;\n\n        switch (dir) {\n            case 'left':\n            /* falls through */\n            case 'right':\n                // If two elements are aligned, add align bias\n                // else, add orthogonal bias\n                if (isAligned(searchOrigin, candidateRect, dir))\n                    alignBias = Math.min(intersectionRect.height / searchOrigin.height, 1);\n                else orthogonalBias = searchOrigin.height / 2;\n\n                B = (P2 + orthogonalBias) * kOrthogonalWeightForLeftRight;\n                C = alignWeight * alignBias;\n                break;\n\n            case 'up':\n            /* falls through */\n            case 'down':\n                // If two elements are aligned, add align bias\n                // else, add orthogonal bias\n                if (isAligned(searchOrigin, candidateRect, dir))\n                    alignBias = Math.min(intersectionRect.width / searchOrigin.width, 1);\n                else orthogonalBias = searchOrigin.width / 2;\n\n                B = (P1 + orthogonalBias) * kOrthogonalWeightForUpDown;\n                C = alignWeight * alignBias;\n                break;\n\n            default:\n                B = 0;\n                C = 0;\n                break;\n        }\n\n        return A + B - C - D;\n    }\n\n    /**\n     * Get the euclidean distance between the search origin and a candidate element considering the direction.\n     * @function getEuclideanDistance\n     * @param rect1 {DOMRect} - The search origin\n     * @param rect2 {DOMRect} - A candidate element\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {Number} The distance scoring between two elements\n     */\n    function getEuclideanDistance(rect1, rect2, dir) {\n        // Get exit point, entry point\n        const points = getEntryAndExitPoints(dir, rect1, rect2);\n\n        // Find the points P1 inside the border box of starting point and P2 inside the border box of candidate\n        // that minimize the distance between these two points\n        const P1 = Math.abs(points.entryPoint.x - points.exitPoint.x);\n        const P2 = Math.abs(points.entryPoint.y - points.exitPoint.y);\n\n        // Return the euclidean distance between P1 and P2.\n        return Math.sqrt(Math.pow(P1, 2) + Math.pow(P2, 2));\n    }\n\n    /**\n     * Get the absolute distance between the search origin and a candidate element considering the direction.\n     * @function getAbsoluteDistance\n     * @param rect1 {DOMRect} - The search origin\n     * @param rect2 {DOMRect} - A candidate element\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {Number} The distance scoring between two elements\n     */\n    function getAbsoluteDistance(rect1, rect2, dir) {\n        // Get exit point, entry point\n        const points = getEntryAndExitPoints(dir, rect1, rect2);\n\n        // Return the absolute distance in the dir direction between P1 and P.\n        return dir === 'left' || dir === 'right'\n            ? Math.abs(points.entryPoint.x - points.exitPoint.x)\n            : Math.abs(points.entryPoint.y - points.exitPoint.y);\n    }\n\n    /**\n     * Get entry point and exit point of two elements considering the direction.\n     * @function getEntryAndExitPoints\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD). Default value for dir is 'down'.\n     * @param searchOrigin {DOMRect | Point} - The search origin which contains the exit point\n     * @param candidateRect {DOMRect} - One of candidates which contains the entry point\n     * @returns {Points} The exit point from the search origin and the entry point from a candidate\n     */\n    function getEntryAndExitPoints(dir = 'down', searchOrigin, candidateRect) {\n        /**\n         * User type definition for Point\n         * @typeof {Object} Points\n         * @property {Point} Points.entryPoint\n         * @property {Point} Points.exitPoint\n         */\n        const points = { entryPoint: { x: 0, y: 0 }, exitPoint: { x: 0, y: 0 } };\n\n        if (startingPoint) {\n            points.exitPoint = searchOrigin;\n\n            switch (dir) {\n                case 'left':\n                    points.entryPoint.x = candidateRect.right;\n                    break;\n                case 'up':\n                    points.entryPoint.y = candidateRect.bottom;\n                    break;\n                case 'right':\n                    points.entryPoint.x = candidateRect.left;\n                    break;\n                case 'down':\n                    points.entryPoint.y = candidateRect.top;\n                    break;\n            }\n\n            // Set orthogonal direction\n            switch (dir) {\n                case 'left':\n                case 'right':\n                    if (startingPoint.y <= candidateRect.top) {\n                        points.entryPoint.y = candidateRect.top;\n                    } else if (startingPoint.y < candidateRect.bottom) {\n                        points.entryPoint.y = startingPoint.y;\n                    } else {\n                        points.entryPoint.y = candidateRect.bottom;\n                    }\n                    break;\n\n                case 'up':\n                case 'down':\n                    if (startingPoint.x <= candidateRect.left) {\n                        points.entryPoint.x = candidateRect.left;\n                    } else if (startingPoint.x < candidateRect.right) {\n                        points.entryPoint.x = startingPoint.x;\n                    } else {\n                        points.entryPoint.x = candidateRect.right;\n                    }\n                    break;\n            }\n        } else {\n            // Set direction\n            switch (dir) {\n                case 'left':\n                    points.exitPoint.x = searchOrigin.left;\n                    points.entryPoint.x =\n                        candidateRect.right < searchOrigin.left ? candidateRect.right : searchOrigin.left;\n                    break;\n                case 'up':\n                    points.exitPoint.y = searchOrigin.top;\n                    points.entryPoint.y =\n                        candidateRect.bottom < searchOrigin.top ? candidateRect.bottom : searchOrigin.top;\n                    break;\n                case 'right':\n                    points.exitPoint.x = searchOrigin.right;\n                    points.entryPoint.x =\n                        candidateRect.left > searchOrigin.right ? candidateRect.left : searchOrigin.right;\n                    break;\n                case 'down':\n                    points.exitPoint.y = searchOrigin.bottom;\n                    points.entryPoint.y =\n                        candidateRect.top > searchOrigin.bottom ? candidateRect.top : searchOrigin.bottom;\n                    break;\n            }\n\n            // Set orthogonal direction\n            switch (dir) {\n                case 'left':\n                case 'right':\n                    if (isBelow(searchOrigin, candidateRect)) {\n                        points.exitPoint.y = searchOrigin.top;\n                        points.entryPoint.y =\n                            candidateRect.bottom < searchOrigin.top ? candidateRect.bottom : searchOrigin.top;\n                    } else if (isBelow(candidateRect, searchOrigin)) {\n                        points.exitPoint.y = searchOrigin.bottom;\n                        points.entryPoint.y =\n                            candidateRect.top > searchOrigin.bottom ? candidateRect.top : searchOrigin.bottom;\n                    } else {\n                        points.exitPoint.y = Math.max(searchOrigin.top, candidateRect.top);\n                        points.entryPoint.y = points.exitPoint.y;\n                    }\n                    break;\n\n                case 'up':\n                case 'down':\n                    if (isRightSide(searchOrigin, candidateRect)) {\n                        points.exitPoint.x = searchOrigin.left;\n                        points.entryPoint.x =\n                            candidateRect.right < searchOrigin.left ? candidateRect.right : searchOrigin.left;\n                    } else if (isRightSide(candidateRect, searchOrigin)) {\n                        points.exitPoint.x = searchOrigin.right;\n                        points.entryPoint.x =\n                            candidateRect.left > searchOrigin.right ? candidateRect.left : searchOrigin.right;\n                    } else {\n                        points.exitPoint.x = Math.max(searchOrigin.left, candidateRect.left);\n                        points.entryPoint.x = points.exitPoint.x;\n                    }\n                    break;\n            }\n        }\n\n        return points;\n    }\n\n    /**\n     * Find focusable elements within the container\n     * @see {@link https://drafts.csswg.org/css-nav-1/#find-the-shortest-distance}\n     * @function getIntersectionRect\n     * @param rect1 {DOMRect} - The search origin which contains the exit point\n     * @param rect2 {DOMRect} - One of candidates which contains the entry point\n     * @returns {IntersectionArea} The intersection area between two elements.\n     *\n     * @typeof {Object} IntersectionArea\n     * @property {Number} IntersectionArea.width\n     * @property {Number} IntersectionArea.height\n     */\n    function getIntersectionRect(rect1, rect2) {\n        const intersection_rect = { width: 0, height: 0, area: 0 };\n\n        const new_location = [Math.max(rect1.left, rect2.left), Math.max(rect1.top, rect2.top)];\n        const new_max_point = [Math.min(rect1.right, rect2.right), Math.min(rect1.bottom, rect2.bottom)];\n\n        intersection_rect.width = Math.abs(new_location[0] - new_max_point[0]);\n        intersection_rect.height = Math.abs(new_location[1] - new_max_point[1]);\n\n        if (!(new_location[0] >= new_max_point[0] || new_location[1] >= new_max_point[1])) {\n            // intersecting-cases\n            intersection_rect.area = Math.sqrt(intersection_rect.width * intersection_rect.height);\n        }\n\n        return intersection_rect;\n    }\n\n    /**\n     * Handle the spatial navigation behavior for HTMLInputElement, HTMLTextAreaElement\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input|HTMLInputElement (MDN)}\n     * @function handlingEditableElement\n     * @param e {Event} - keydownEvent\n     * @returns {boolean}\n     */\n    function handlingEditableElement(e) {\n        const SPINNABLE_INPUT_TYPES = ['email', 'date', 'month', 'number', 'time', 'week'],\n            TEXT_INPUT_TYPES = ['password', 'text', 'search', 'tel', 'url', null];\n        const eventTarget = document.activeElement;\n        const startPosition = eventTarget.selectionStart;\n        const endPosition = eventTarget.selectionEnd;\n        const focusNavigableArrowKey = {\n            left: false,\n            up: false,\n            right: false,\n            down: false,\n        };\n\n        const dir = ARROW_KEY_CODE[e.keyCode];\n        if (dir === undefined) {\n            return focusNavigableArrowKey;\n        }\n\n        if (SPINNABLE_INPUT_TYPES.includes(eventTarget.getAttribute('type')) && (dir === 'up' || dir === 'down')) {\n            focusNavigableArrowKey[dir] = true;\n        } else if (TEXT_INPUT_TYPES.includes(eventTarget.getAttribute('type')) || eventTarget.nodeName === 'TEXTAREA') {\n            if (startPosition === endPosition) {\n                // if there isn't any selected text\n                if (startPosition === 0) {\n                    focusNavigableArrowKey.left = true;\n                    focusNavigableArrowKey.up = true;\n                }\n                if (endPosition === eventTarget.value.length) {\n                    focusNavigableArrowKey.right = true;\n                    focusNavigableArrowKey.down = true;\n                }\n            }\n        } else {\n            // HTMLDataListElement, HTMLSelectElement, HTMLOptGroup\n            focusNavigableArrowKey[dir] = true;\n        }\n\n        return focusNavigableArrowKey;\n    }\n\n    /**\n     * Get the DOMRect of an element\n     * @function getBoundingClientRect\n     * @param {Node} element\n     * @returns {DOMRect}\n     */\n    function getBoundingClientRect(element) {\n        // memoization\n        let rect = mapOfBoundRect && mapOfBoundRect.get(element);\n        if (!rect) {\n            const boundingClientRect = element.getBoundingClientRect();\n            rect = {\n                top: Number(boundingClientRect.top.toFixed(2)),\n                right: Number(boundingClientRect.right.toFixed(2)),\n                bottom: Number(boundingClientRect.bottom.toFixed(2)),\n                left: Number(boundingClientRect.left.toFixed(2)),\n                width: Number(boundingClientRect.width.toFixed(2)),\n                height: Number(boundingClientRect.height.toFixed(2)),\n            };\n            mapOfBoundRect && mapOfBoundRect.set(element, rect);\n        }\n        return rect;\n    }\n\n    /**\n     * Get the candidates which is fully inside the target element in visual\n     * @param {Node} targetElement\n     * @returns {sequence<Node>}  overlappedCandidates\n     */\n    function getOverlappedCandidates(targetElement) {\n        const container = targetElement.getSpatialNavigationContainer();\n        const candidates = container.focusableAreas();\n        const overlappedCandidates = [];\n\n        candidates.forEach((element) => {\n            if (targetElement !== element && isEntirelyVisible(element, targetElement)) {\n                overlappedCandidates.push(element);\n            }\n        });\n\n        return overlappedCandidates;\n    }\n\n    /**\n     * Get the list of the experimental APIs\n     * @function getExperimentalAPI\n     */\n    function getExperimentalAPI() {\n        function canScroll(container, dir) {\n            return (\n                (isScrollable(container, dir) && !isScrollBoundary(container, dir)) ||\n                (!container.parentElement && !isHTMLScrollBoundary(container, dir))\n            );\n        }\n\n        function findTarget(findCandidate, element, dir, option) {\n            let eventTarget = element;\n            let bestNextTarget = null;\n\n            // 4\n            if (eventTarget === document || eventTarget === document.documentElement) {\n                eventTarget = document.body || document.documentElement;\n            }\n\n            // 5\n            // At this point, spatialNavigationSearch can be applied.\n            // If startingPoint is either a scroll container or the document,\n            // find the best candidate within startingPoint\n            if ((isContainer(eventTarget) || eventTarget.nodeName === 'BODY') && !(eventTarget.nodeName === 'INPUT')) {\n                if (eventTarget.nodeName === 'IFRAME') eventTarget = eventTarget.contentDocument.body;\n\n                const candidates = getSpatialNavigationCandidates(eventTarget, option);\n\n                // 5-2\n                if (Array.isArray(candidates) && candidates.length > 0) {\n                    return findCandidate\n                        ? getFilteredSpatialNavigationCandidates(eventTarget, dir, candidates)\n                        : eventTarget.spatialNavigationSearch(dir, { candidates });\n                }\n                if (canScroll(eventTarget, dir)) {\n                    return findCandidate ? [] : eventTarget;\n                }\n            }\n\n            // 6\n            // Let container be the nearest ancestor of eventTarget\n            let container = eventTarget.getSpatialNavigationContainer();\n            let parentContainer = container.parentElement ? container.getSpatialNavigationContainer() : null;\n\n            // When the container is the viewport of a browsing context\n            if (!parentContainer && window.location !== window.parent.location) {\n                parentContainer = window.parent.document.documentElement;\n            }\n\n            // 7\n            while (parentContainer) {\n                const candidates = filteredCandidates(\n                    eventTarget,\n                    getSpatialNavigationCandidates(container, option),\n                    dir,\n                    container,\n                );\n\n                if (Array.isArray(candidates) && candidates.length > 0) {\n                    bestNextTarget = eventTarget.spatialNavigationSearch(dir, {\n                        candidates,\n                        container,\n                    });\n                    if (bestNextTarget) {\n                        return findCandidate ? candidates : bestNextTarget;\n                    }\n                }\n\n                // If there isn't any candidate and the best candidate among candidate:\n                // 1) Scroll or 2) Find candidates of the ancestor container\n                // 8 - if\n                else if (canScroll(container, dir)) {\n                    return findCandidate ? [] : eventTarget;\n                } else if (container === document || container === document.documentElement) {\n                    container = window.document.documentElement;\n\n                    // The page is in an iframe\n                    if (window.location !== window.parent.location) {\n                        // eventTarget needs to be reset because the position of the element in the IFRAME\n                        // is unuseful when the focus moves out of the iframe\n                        eventTarget = window.frameElement;\n                        container = window.parent.document.documentElement;\n                        if (container.parentElement) parentContainer = container.getSpatialNavigationContainer();\n                        else {\n                            parentContainer = null;\n                            break;\n                        }\n                    }\n                } else {\n                    // avoiding when spatnav container with tabindex=-1\n                    if (isFocusable(container)) {\n                        eventTarget = container;\n                    }\n\n                    container = parentContainer;\n                    if (container.parentElement) parentContainer = container.getSpatialNavigationContainer();\n                    else {\n                        parentContainer = null;\n                        break;\n                    }\n                }\n            }\n\n            if (!parentContainer && container) {\n                // Getting out from the current spatnav container\n                const candidates = filteredCandidates(\n                    eventTarget,\n                    getSpatialNavigationCandidates(container, option),\n                    dir,\n                    container,\n                );\n\n                // 9\n                if (Array.isArray(candidates) && candidates.length > 0) {\n                    bestNextTarget = eventTarget.spatialNavigationSearch(dir, {\n                        candidates,\n                        container,\n                    });\n                    if (bestNextTarget) {\n                        return findCandidate ? candidates : bestNextTarget;\n                    }\n                }\n            }\n\n            if (canScroll(container, dir)) {\n                bestNextTarget = eventTarget;\n                return bestNextTarget;\n            }\n        }\n\n        return {\n            isContainer,\n            isScrollContainer,\n            isVisibleInScroller,\n            findCandidates: findTarget.bind(null, true),\n            findNextTarget: findTarget.bind(null, false),\n            getDistanceFromTarget: (element, candidateElement, dir) => {\n                if ((isContainer(element) || element.nodeName === 'BODY') && !(element.nodeName === 'INPUT')) {\n                    if (getSpatialNavigationCandidates(element).includes(candidateElement)) {\n                        return getInnerDistance(\n                            getBoundingClientRect(element),\n                            getBoundingClientRect(candidateElement),\n                            dir,\n                        );\n                    }\n                }\n                return getDistance(getBoundingClientRect(element), getBoundingClientRect(candidateElement), dir);\n            },\n        };\n    }\n\n    /**\n     * Makes to use the experimental APIs.\n     * @function enableExperimentalAPIs\n     * @param option {boolean} - If it is true, the experimental APIs can be used or it cannot.\n     */\n    function enableExperimentalAPIs(option) {\n        const currentKeyMode = window.__spatialNavigation__ && window.__spatialNavigation__.keyMode;\n        window.__spatialNavigation__ =\n            option === false ? getInitialAPIs() : Object.assign(getInitialAPIs(), getExperimentalAPI());\n        window.__spatialNavigation__.keyMode = currentKeyMode;\n        Object.seal(window.__spatialNavigation__);\n    }\n\n    /**\n     * Set the environment for using the spatial navigation polyfill.\n     * @function getInitialAPIs\n     */\n    function getInitialAPIs() {\n        return {\n            enableExperimentalAPIs,\n            get keyMode() {\n                return this._keymode ? this._keymode : 'ARROW';\n            },\n            set keyMode(mode) {\n                this._keymode = ['SHIFTARROW', 'ARROW', 'NONE'].includes(mode) ? mode : 'ARROW';\n            },\n            setStartingPoint: function (x, y) {\n                startingPoint = x && y ? { x, y } : null;\n            },\n        };\n    }\n\n    initiateSpatialNavigation();\n    enableExperimentalAPIs(true);\n    spatialNavigationHandler();\n})();\n\nlet currentSpatialNavigationContainer = null;\n\ndocument.addEventListener('navbeforefocus', (e) => {\n    if (e.target instanceof HTMLElement) {\n        e.preventDefault();\n\n        let { target } = e;\n\n        // focus on the first element when changing spatnav container\n        // const nextSpatialNavigationContainer = target.getSpatialNavigationContainer();\n        //\n        // if (currentSpatialNavigationContainer && currentSpatialNavigationContainer !== nextSpatialNavigationContainer) {\n        //     if (nextSpatialNavigationContainer.__lastElementFocused) {\n        //         target = nextSpatialNavigationContainer.__lastElementFocused;\n        //     } else {\n        //         [target] = nextSpatialNavigationContainer.focusableAreas({ mode: 'all' });\n        //     }\n        //     // target.focus();\n        // }\n        //\n        // currentSpatialNavigationContainer = nextSpatialNavigationContainer;\n        // currentSpatialNavigationContainer.__lastElementFocused = target;\n\n        requestAnimationFrame(async () => {\n            target.scrollIntoView({ behavior: 'smooth', block: 'center', inline: 'nearest' });\n            // if (isElementInViewport(target)) {\n            //     target.focus();\n            // }\n\n            await new Promise((resolve) => {\n                const intersectionObserver = new IntersectionObserver(\n                    ([entry]) => {\n                        if (entry.isIntersecting) {\n                            resolve();\n                        }\n                    },\n                    {\n                        threshold: 1,\n                    },\n                );\n                intersectionObserver.observe(target);\n            });\n\n            target.focus();\n        });\n    }\n});\n\ndocument.addEventListener('keyup', (event) => {\n    if (event.keyCode === 13) {\n        event.preventDefault();\n        if (document.activeElement && !(document.activeElement instanceof HTMLButtonElement)) {\n            document.activeElement.click();\n        }\n    }\n});\n\n// console.log('1');\n\n// let isIntersecting = false;\n// const intersectionObserver = new IntersectionObserver(([entry]) => {\n// console.log('2');\n//   isIntersecting = entry.isIntersecting;\n// }, {\n//   threshold: 1\n// });\n// intersectionObserver.observe($0)\n// console.log('3');\n\n// start observing\n// intersectionObserver.observe());\n\nfunction isElementInViewport(el) {\n    const rect = el.getBoundingClientRect();\n    return (\n        rect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n    );\n}\n","export function mobileDetect() {\n    const navigator = window.navigator.userAgent || window.navigator.vendor;\n\n    /* eslint-disable */\n    return (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n            navigator,\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n            navigator.substr(0, 4),\n        )\n    );\n    /* eslint-enable */\n}\n","export function createAction<T extends string, P>(type: T, payload: P) {\n    return {\n        type,\n        payload,\n    };\n}\n\nexport function createEmptyAction<T extends string>(type: T) {\n    return {\n        type,\n    };\n}\n","import { createEmptyAction } from 'tools/create-action';\n\nexport const closeAppAction = () => createEmptyAction('CLOSE_APP');\n\nexport const applyItemsChanges = () => createEmptyAction('APPLY_ITEMS_CHANGES');\n","import { AppState } from '../constants';\n\nexport const selectProductById = (state: AppState, itemId: string) => state.productsData.itemsMap[itemId];\nexport const selectProductDiffById = (state: AppState, itemId: string) => state.productsDiffData.itemsMap[itemId];\nexport const selectCartItemById = (state: AppState, itemId: string) => state.cart.itemsMap[itemId];\nexport const selectPathname = (state: AppState) => state.router.location.pathname;\nexport const selectHeader = (state: AppState) => state.layout.header;\n","import { AppState } from 'store/constants';\nimport { selectCartItemById, selectProductById, selectProductDiffById } from 'store/selectors';\n\nexport const formatPrice = (price: number) => Math.ceil(price / 100);\n\nexport const prepareCount = (state: AppState, itemId: string) => {\n    const cartItem = selectCartItemById(state, itemId);\n\n    return cartItem ? cartItem.count : 0;\n};\n\nexport const calculateButtonDisabled = (state: AppState, itemId: string) => {\n    const productItem = selectProductById(state, itemId);\n    const cartItem = selectCartItemById(state, itemId);\n\n    return cartItem && cartItem.count === productItem.quantityLeft;\n};\n\nexport const getQuantityLeftById = (state: AppState, itemId: string) => {\n    const productItem = selectProductById(state, itemId);\n    const productItemDiff = selectProductDiffById(state, itemId);\n\n    if (productItemDiff && typeof productItemDiff.quantityLeft !== 'undefined') {\n        return productItemDiff.quantityLeft;\n    }\n\n    return productItem.quantityLeft;\n};\n\nexport const getDisabled = (state: AppState, itemId: string) => {\n    const quantityLeft = getQuantityLeftById(state, itemId);\n\n    return quantityLeft === 0;\n};\n\nexport const getPriceById = (state: AppState, itemId: string) => {\n    const productItem = selectProductById(state, itemId);\n    const productItemDiff = selectProductDiffById(state, itemId);\n\n    if (productItemDiff && typeof productItemDiff.price !== 'undefined') {\n        return productItemDiff.price;\n    }\n\n    return productItem.price;\n};\n\nexport const preparePriceById = (state: AppState, itemId: string) => {\n    const price = getPriceById(state, itemId);\n\n    return formatPrice(price);\n};\n\nexport const getOldPriceById = (state: AppState, itemId: string) => {\n    const productItem = selectProductById(state, itemId);\n    const productItemDiff = selectProductDiffById(state, itemId);\n\n    if (productItemDiff && typeof productItemDiff.price !== 'undefined') {\n        return formatPrice(productItem.price);\n    }\n\n    return undefined;\n};\n\nexport const formatSale = (oldValue: number, newValue: number) =>\n    String(Math.ceil(((oldValue - newValue) / oldValue) * 100));\n\nexport const getCountById = (state: AppState, itemId: string) => {\n    const cartItem = selectCartItemById(state, itemId);\n    const countInCart = cartItem ? cartItem.count : 0;\n    const quantityLeft = getQuantityLeftById(state, itemId);\n\n    return Math.min(countInCart, quantityLeft);\n};\n\nexport const wantMoreThanHave = (state: AppState, itemId: string) => {\n    const cartItem = selectCartItemById(state, itemId);\n    const quantityLeft = getQuantityLeftById(state, itemId);\n\n    return cartItem && cartItem.count > quantityLeft;\n};\n\nexport const canAddMore = (state: AppState, itemId: string) => {\n    const quantityLeft = getQuantityLeftById(state, itemId);\n    const cartItem = selectCartItemById(state, itemId);\n\n    return (\n        quantityLeft !== 0 && // есть остатки\n        (!cartItem || cartItem.count < quantityLeft) // текущее кол-во меньше остатков\n    );\n};\n","import { createAction, createEmptyAction } from 'tools/create-action';\n\nimport {\n    ShowItemsCommandPayload,\n    AddItemCommandPayload,\n    RemoveItemCommandPayload,\n    GoToCatalogCommandPayload,\n    ValidationOkCommandPayload,\n    AddressInputPayload,\n    AddressInputAddPayload,\n    AddressFullInputAddPayload,\n    AddressFullInputCommandPayload,\n    OrderErrorPayload,\n    ItemsChangesCommandPayload,\n} from '../constants/native';\n\nexport const showItemsAction = (payload: ShowItemsCommandPayload) => createAction('SHOW_ITEMS', payload);\n\nexport const itemsChangesAction = (payload: ItemsChangesCommandPayload) => createAction('ITEMS_CHANGES', payload);\n\nexport const addItemAction = (payload: AddItemCommandPayload) => createAction('ADD_ITEM', payload);\n\ninterface RemoveItemCommandPayloadExtended extends RemoveItemCommandPayload {\n    shouldRemoveMention?: boolean;\n}\nexport const removeItemAction = (payload: RemoveItemCommandPayloadExtended) => createAction('REMOVE_ITEM', payload);\n\nexport const removeAllAction = () => createEmptyAction('REMOVE_ALL');\n\nexport const goToCatalogAction = (payload: GoToCatalogCommandPayload) => createAction('GO_TO_CATALOG', payload);\n\nexport const goBackAction = () => createEmptyAction('GO_BACK');\n\nexport const goToWaitAction = () => createEmptyAction('GO_TO_WAIT');\n\nexport const validationOkAction = (payload: ValidationOkCommandPayload) => createAction('VALIDATION_OK', payload);\n\nexport const orderErrorAction = (payload: OrderErrorPayload) => createAction('ORDER_ERROR', payload);\n\nexport const addressInputAction = (payload: AddressInputPayload) => createAction('ADDRESS_INPUT', payload);\n\nexport const addressInputAddAction = (payload: AddressInputAddPayload) => createAction('ADDRESS_INPUT_ADD', payload);\n\nexport const addressInputClearAction = () => createEmptyAction('ADDRESS_INPUT_CLEAR');\n\nexport const addressFullInputAction = (payload: AddressFullInputCommandPayload) =>\n    createAction('ADDRESS_FULL_INPUT', payload);\n\nexport const addressFullInputAddAction = (payload: AddressFullInputAddPayload) =>\n    createAction('ADDRESS_FULL_INPUT_ADD', payload);\n\nexport const addressFullInputClearAction = () => createEmptyAction('ADDRESS_FULL_INPUT_CLEAR');\n\nexport const addressFullValidationErrorAction = () => createEmptyAction('ADDRESS_FULL_VALIDATION_ERROR');\n\nexport const addressFullSuccessAction = () => createEmptyAction('ADDRESS_FULL_SUCCESS');\n\nexport const askAgainForOrderStatusAction = () => createEmptyAction('ASK_AGAIN_FOR_ORDER_STATUS');\n\nexport const askAgainForOrderStatusFinalAction = () => createEmptyAction('ASK_AGAIN_FOR_ORDER_STATUS_FINAL');\n","export enum ROUTES {\n    ROOT = '/',\n    CATALOG = '/catalog',\n    CART = '/cart',\n    STATUS = '/status',\n    ADDRESS_SIMPLE = '/address-simple',\n    ADDRESS_FULL = '/address-full',\n    ADDRESS_FULL_ALL = '/address-full/all',\n    ADDRESS_FULL_PHONE = '/address-full/phone',\n    ADDRESS_FULL_APARTMENT = '/address-full/apartment',\n    ADDRESS_FULL_ENTRANCE = '/address-full/entrance',\n    ADDRESS_FULL_FLOOR = '/address-full/floor',\n    PROMO = '/promo',\n    NO_AREA = '/no-area',\n    ERROR = '/error',\n    WAIT = '/wait',\n}\n","import { addressFullSuccessAction } from 'store/actions/native';\nimport { AppThunkAction } from 'store/constants';\nimport { goBack, replace } from 'connected-react-router';\nimport { ROUTES } from 'store/constants/router';\nimport { selectPathname } from 'store/selectors';\n\nexport const addressFullValidationOkThunk = (): AppThunkAction => (dispatch, getState) => {\n    const state = getState();\n    const {\n        addressFullPage: { nextFocus },\n    } = state;\n    const currentRoute = selectPathname(state);\n\n    if (nextFocus === ROUTES.ADDRESS_FULL_ALL || nextFocus === currentRoute) {\n        dispatch(goBack());\n    } else {\n        dispatch(replace(nextFocus));\n    }\n};\n\nexport const addressFullSuccessThunk = (): AppThunkAction => (dispatch) => {\n    dispatch(addressFullSuccessAction());\n\n    dispatch(goBack());\n};\n","import { push, replace, go, goBack } from 'connected-react-router';\nimport { goToCatalogAction, validationOkAction } from 'store/actions/native';\nimport { AppThunkAction } from 'store/constants';\nimport { GoToCatalogCommandPayload, ValidationOkCommandPayload } from 'store/constants/native';\nimport { ROUTES } from 'store/constants/router';\nimport { selectPathname } from 'store/selectors';\nimport { addressFullSuccessThunk } from 'store/thunks/addressFullPage';\n\nexport const goToCatalogThunk = (payload: GoToCatalogCommandPayload): AppThunkAction => (dispatch, getState) => {\n    const state = getState();\n    const currentPathname = selectPathname(state);\n\n    dispatch(goToCatalogAction(payload));\n\n    switch (currentPathname) {\n        case ROUTES.ROOT: {\n            dispatch(replace(ROUTES.CATALOG));\n\n            break;\n        }\n\n        case ROUTES.CART: {\n            dispatch(goBack());\n\n            break;\n        }\n\n        case ROUTES.ADDRESS_SIMPLE: {\n            dispatch(go(-1 * window.history.length));\n            dispatch(replace(ROUTES.CATALOG));\n\n            break;\n        }\n\n        default: {\n            // чтобы при перезагрузке страницы постоянно не переходить в каталог\n            if (process.env.REACT_APP_ENVIRONMENT !== 'development') {\n                dispatch(push(ROUTES.CATALOG));\n            }\n\n            break;\n        }\n    }\n};\n\nexport const validationOkThunk = (payload: ValidationOkCommandPayload): AppThunkAction => (dispatch) => {\n    dispatch(validationOkAction(payload));\n\n    dispatch(go(-1 * window.history.length));\n    dispatch(replace(ROUTES.STATUS));\n};\n\nexport const goToValidationThunk = (): AppThunkAction => (dispatch, getState) => {\n    const state = getState();\n    const currentPathname = selectPathname(state);\n\n    switch (currentPathname) {\n        // это значит что ввод доп. адреса сохранился успешно\n        case ROUTES.ADDRESS_FULL_ALL: {\n            dispatch(addressFullSuccessThunk());\n            break;\n        }\n\n        default: {\n            dispatch(push(ROUTES.CART));\n            break;\n        }\n    }\n};\n","import { LocationState } from 'history';\nimport { ThunkAction } from 'redux-thunk';\nimport { DGSuggestItem } from 'types/2gis-maps';\nimport { AppActionTypes } from 'types/app-actions';\nimport { RouterState, RouterAction } from 'connected-react-router';\nimport { CatalogListItemViewProps } from 'pages/Catalog/ListItem/CatalogListItem';\nimport { CatalogListItemTouchViewProps } from 'pages/Catalog/ListItem/CatalogListItem@touch';\nimport { CartListItemViewProps } from 'pages/Cart/ListItem/CartListItem';\nimport { AddressSimpleSuggestItemView } from 'pages/AddressSimple/SuggestItem/AddressSimpleSuggestItem';\nimport { ButtonProps } from 'components/Button/Button';\n\nimport { StoreProductItem, StoreProductItemDiff } from './products';\nimport { StoreUser } from './user';\nimport { ROUTES } from './router';\nimport { ErrorPageProps } from './error';\n\nexport const initialState = {\n    delivery: {\n        minimalPrice: 0,\n        deliveryTime: 0,\n    },\n    cart: {\n        itemsMap: {} as Record<string, CartItem>,\n        order: [] as string[],\n        totalCount: 0,\n        // discount value?\n        totalPrice: 0, // в копейках\n        orderId: '',\n    },\n    productsData: {\n        itemsMap: {} as Record<string, StoreProductItem>,\n    },\n    productsDiffData: {\n        itemsMap: {} as Record<string, StoreProductItemDiff>,\n    },\n    // здесь важно поставить undefined, подробности смотри в редюсере роутера\n    router: (undefined as unknown) as RouterState<LocationState>,\n    userData: {\n        customerName: '',\n        phoneNumber: '',\n        // latitude: '55.737209', // Москва, Кутузовский проспект\n        // longitude: '37.538145', // Москва, Кутузовский проспект\n        // latitude: '59.84112819369227', // Питер, Дачный проспект\n        // longitude: '30.25827884674072', // Питер, Дачный проспект\n        // latitude: '59.940184', // Питер, Дворцовая набережная\n        // longitude: '30.315266', // Питер, Дворцовая набережная\n        latitude: '',\n        longitude: '',\n        address: '',\n        city: '',\n        street: '',\n        house: '',\n        building: '',\n        floor: '',\n        entrance: '',\n        apartment: '',\n        doorCode: '',\n    } as StoreUser,\n    userModel: {\n        customerName: '',\n        phoneNumber: '',\n        latitude: '',\n        longitude: '',\n        address: '',\n        city: '',\n        street: '',\n        house: '',\n        building: '',\n        floor: '',\n        entrance: '',\n        apartment: '',\n        doorCode: '',\n    } as StoreUser,\n    catalogPage: {\n        selectedItemId: '',\n        order: [] as string[],\n        itemsMap: {} as Record<string, CatalogListItemViewProps>,\n        screenIndexMap: {} as Record<string, number>,\n        wrapperXShift: 0,\n        listIndexOffset: 0,\n    },\n    catalogPageTouch: {\n        order: [] as string[],\n        itemsMap: {} as Record<string, CatalogListItemTouchViewProps>,\n        screenIndexMap: {} as Record<string, number>,\n    },\n    cartPage: {\n        wrapperYShift: 0,\n        selectedItemIndex: 0,\n        topGradientVisible: true,\n        bottomGradientVisible: true,\n        order: [] as string[],\n        itemsMap: {} as Record<string, CartListItemViewProps>,\n        totalPrice: '',\n        toMinimumPrice: 0,\n        hasRequiredData: false,\n        /**\n         * Здесь не объект пропсов для кнопки из-за того что иммер не может нормально прожевать React.refObject и,\n         * соответственно, тайпинги написаны так, чтобы такого не допустить\n         * */\n        makePurchaseButtonView: 'primary' as ButtonProps['view'],\n        isMakePurchaseButtonDisabled: false,\n        phoneNumber: '',\n        personalAddress: '',\n        deliveryTime: 0,\n    },\n    errorPage: {\n        title: '',\n        subtitle: '',\n    } as ErrorPageProps,\n    layout: {\n        header: {\n            title: '',\n            isVisible: false,\n            address: {\n                text: '',\n                isVisible: false,\n            },\n            cart: {\n                isVisible: false,\n                count: 0,\n                price: '0',\n            },\n            isBackButtonVisible: false,\n        },\n    },\n    addressSimplePage: {\n        inputValue: '',\n        suggestsRaw: {} as Record<string, DGSuggestItem>,\n        suggests: [] as AddressSimpleSuggestItemView[],\n        selectedSuggestItemIndex: 0,\n        suggestListContainerYShift: 0,\n        isSubmitButtonDisabled: false,\n        submitButtonFocusHash: 0,\n        inputFocusHash: 0,\n    },\n    addressFullPage: {\n        addressInputValue: '',\n        phoneNumberInputValue: '',\n        apartmentInputValue: '',\n        entranceInputValue: '',\n        floorInputValue: '',\n        isSubmitButtonDisabled: false,\n        nextFocus: ROUTES.ADDRESS_FULL_ALL as string,\n    },\n    waitPage: {\n        text: '',\n    },\n};\n\nexport type AppState = typeof initialState;\n\nexport type AppCommonAction = ReturnType<AppActionTypes[keyof AppActionTypes]>;\nexport type AppBaseAction = AppCommonAction | RouterAction<LocationState>;\nexport type AppThunkAction = ThunkAction<void, AppState, {}, AppBaseAction>;\nexport type AppAction = AppThunkAction | AppBaseAction;\nexport type AppDispatch = (action: AppAction) => AppBaseAction;\nexport type AppReducer = (state: AppState, action: AppBaseAction) => void;\nexport interface AppMiddleware {\n    (api: AppMiddlewareAPI): (next: AppDispatch) => (action: AppBaseAction) => AppBaseAction;\n}\n\nexport interface AppMiddlewareAPI {\n    dispatch: AppDispatch;\n    getState(): AppState;\n}\n\nexport interface CartItem {\n    itemId: string;\n    count: number;\n}\n","import { AppReducer, AppState } from 'store/constants';\nimport { StoreProductItem, ProductItem } from 'store/constants/products';\nimport { selectProductById, selectProductDiffById } from 'store/selectors';\n\nconst normalizeProductItem = (productItem: ProductItem): StoreProductItem => ({\n    name: productItem.name,\n    id: productItem.guid,\n    price: Number(productItem.price),\n    quantityLeft: Number(productItem.quantity_left),\n    imageUrl: productItem.images_urls[0],\n});\n\nexport const normalizeProducts = (productsMaps: Record<string, ProductItem>): Record<string, StoreProductItem> =>\n    Object.keys(productsMaps).reduce<Record<string, StoreProductItem>>((acc, itemId) => {\n        acc[itemId] = normalizeProductItem(productsMaps[itemId]);\n\n        return acc;\n    }, {});\n\nexport const computeProductItemsMapBasedOnChanges = (state: AppState) => {\n    return Object.keys(state.productsData.itemsMap).reduce<AppState['productsData']['itemsMap']>((result, itemId) => {\n        const productItem = selectProductById(state, itemId);\n        const productItemDiff = selectProductDiffById(state, itemId);\n\n        result[itemId] = Object.assign(productItem, productItemDiff);\n\n        return result;\n    }, {});\n};\n\nexport const productsData: AppReducer = (state, action) => {\n    switch (action.type) {\n        case 'SHOW_ITEMS': {\n            state.productsData.itemsMap = normalizeProducts(action.payload.stock);\n            break;\n        }\n\n        case 'APPLY_ITEMS_CHANGES': {\n            state.productsData.itemsMap = computeProductItemsMapBasedOnChanges(state);\n            break;\n        }\n\n        default:\n            break;\n    }\n};\n","import { AppReducer } from 'store/constants';\nimport { ProductItemDiff, StoreProductItemDiff } from 'store/constants/products';\n\nconst normalizeProductItemsDiffMap = (productsDiffMap: Record<string, ProductItemDiff>) =>\n    Object.entries(productsDiffMap).reduce((result, [itemId, productItemDiff]) => {\n        const { quantity_left: quantityLeftString, price: priceString } = productItemDiff;\n\n        if (!quantityLeftString && !priceString) {\n            return result;\n        }\n\n        result[itemId] = {};\n\n        if (quantityLeftString) {\n            result[itemId].quantityLeft = Number(quantityLeftString);\n        }\n\n        if (priceString) {\n            result[itemId].price = Number(priceString);\n        }\n\n        return result;\n    }, {} as Record<string, StoreProductItemDiff>);\n\nexport const productsDiffData: AppReducer = (state, action) => {\n    switch (action.type) {\n        case 'ITEMS_CHANGES': {\n            state.productsDiffData.itemsMap = normalizeProductItemsDiffMap(action.payload.changes);\n\n            break;\n        }\n\n        case 'APPLY_ITEMS_CHANGES': {\n            state.productsDiffData.itemsMap = {};\n\n            break;\n        }\n\n        default: {\n            break;\n        }\n    }\n};\n","import { AppReducer } from 'store/constants';\nimport { ScenarioUser, StoreUser } from 'store/constants/user';\n\nconst normalizeUserData = (data: ScenarioUser): StoreUser => {\n    return {\n        customerName: data.customer_name,\n        phoneNumber: data.phone_num,\n        latitude: data.address.location.latitude,\n        longitude: data.address.location.longitude,\n        address: data.address.address_string,\n        city: data.address.city,\n        street: data.address.street,\n        house: data.address.house,\n        building: data.address.building,\n        floor: data.address.floor,\n        entrance: data.address.floor,\n        apartment: data.address.apartment,\n        doorCode: data.address.door_code,\n    };\n};\n\nexport const userData: AppReducer = (state, action) => {\n    switch (action.type) {\n        case 'GO_TO_CATALOG': {\n            state.userData = normalizeUserData(action.payload.address);\n            break;\n        }\n\n        case 'ADDRESS_INPUT': {\n            const { latitude, longitude } = action.payload.device_location;\n            state.userData.latitude = latitude;\n            state.userData.longitude = longitude;\n\n            break;\n        }\n\n        case 'ADDRESS_FULL_SUCCESS': {\n            state.userData.phoneNumber = state.userModel.phoneNumber;\n            state.userData.apartment = state.userModel.apartment;\n            state.userData.entrance = state.userModel.entrance;\n            state.userData.floor = state.userModel.floor;\n\n            break;\n        }\n\n        default:\n            break;\n    }\n};\n","import { AppReducer } from '../../constants';\n\nexport const deliveryData: AppReducer = (state, action) => {\n    switch (action.type) {\n        case 'GO_TO_CATALOG': {\n            state.delivery.deliveryTime = action.payload.time;\n            state.delivery.minimalPrice = action.payload.minimal_amount;\n            break;\n        }\n\n        default:\n            break;\n    }\n};\n","import { getCountById, getPriceById, getQuantityLeftById } from 'store/reducers/helpers/catalogPage';\nimport { selectCartItemById, selectProductById } from 'store/selectors';\nimport { AppReducer, AppState, initialState } from 'store/constants';\n\nconst getTotalCount = (state: AppState) =>\n    Object.values(state.cart.itemsMap).reduce((acc, { itemId }) => {\n        acc += getCountById(state, itemId);\n\n        return acc;\n    }, 0);\n\nconst getTotalPrice = (state: AppState) =>\n    state.cart.order.reduce((acc, itemId) => {\n        const count = getCountById(state, itemId);\n        const price = getPriceById(state, itemId);\n\n        acc += count * price;\n\n        return acc;\n    }, 0);\n\nexport const cartModel: AppReducer = (state, action) => {\n    switch (action.type) {\n        case 'ADD_ITEM': {\n            const { count: countString, item: itemId } = action.payload;\n            const count = Number(countString);\n            const productItem = selectProductById(state, itemId);\n            const quantityLeft = getQuantityLeftById(state, itemId);\n\n            if (!productItem) {\n                return;\n            }\n\n            const cartItem = selectCartItemById(state, itemId);\n\n            if (cartItem) {\n                cartItem.count = Math.min(quantityLeft, cartItem.count + count);\n            } else if (count <= quantityLeft) {\n                state.cart.itemsMap[itemId] = {\n                    itemId,\n                    count,\n                };\n\n                state.cart.order.push(itemId);\n            }\n\n            break;\n        }\n\n        case 'REMOVE_ITEM': {\n            const { item: itemId, count: countString, shouldRemoveMention } = action.payload;\n            const count = Number(countString);\n\n            const cartItem = selectCartItemById(state, itemId);\n            const productItem = selectProductById(state, itemId);\n            const actualCount = getCountById(state, itemId);\n\n            if (!cartItem || !productItem) {\n                return;\n            }\n\n            cartItem.count = Math.max(0, actualCount - count);\n\n            if (!cartItem.count && shouldRemoveMention) {\n                delete state.cart.itemsMap[itemId];\n                state.cart.order = state.cart.order.filter((cartItemId) => cartItemId !== itemId);\n            }\n\n            break;\n        }\n\n        case 'REMOVE_ALL': {\n            state.cart = { ...initialState.cart };\n\n            break;\n        }\n\n        case 'GO_TO_CATALOG': {\n            if (action.payload.clear) {\n                state.cart = { ...initialState.cart };\n            }\n\n            break;\n        }\n\n        case 'VALIDATION_OK': {\n            state.cart = { ...initialState.cart };\n            state.cart.orderId = action.payload.order_id;\n\n            break;\n        }\n\n        default:\n            break;\n    }\n\n    state.cart.totalCount = getTotalCount(state);\n    state.cart.totalPrice = getTotalPrice(state);\n};\n","import { AppState, initialState, AppReducer } from 'store/constants';\nimport { ROUTES } from 'store/constants/router';\nimport { selectPathname } from 'store/selectors';\nimport { DGBuilding } from 'types/2gis-maps';\n\nconst MAX_PHONE_NUMBER_SYMBOLS_COUNT = 12;\n\nconst updateUserAddressBasedOnBuilding = ({ userModel }: AppState, building: DGBuilding) => {\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    const { point, address, name, full_name } = building;\n    const [addressComponent] = address.components;\n    const { street, number } = addressComponent;\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    const [city] = full_name.split(', ');\n\n    userModel.city = city;\n    userModel.street = street;\n    userModel.house = number;\n    userModel.address = name;\n    userModel.latitude = String(point.lat);\n    userModel.longitude = String(point.lon);\n};\n\nconst normalizePhone = (phoneNumber: string) => {\n    let result = Array.from(phoneNumber).filter((symbol, index) => {\n        return /[0-9]/.test(symbol) || (index === 0 && symbol === '+');\n    });\n    const [firstSymbol, ...otherSymbols] = result;\n\n    if (firstSymbol === '8' || firstSymbol === '7') {\n        result = ['+', '7', ...otherSymbols];\n    }\n\n    return result.slice(0, MAX_PHONE_NUMBER_SYMBOLS_COUNT).join('');\n};\n\nexport const userModel: AppReducer = (state, action) => {\n    switch (action.type) {\n        case 'address/CHANGE_INPUT_VALUE': {\n            state.userModel = { ...initialState.userModel };\n            state.userModel.address = action.payload;\n\n            break;\n        }\n\n        case 'address/CLICK_SUGGEST_ITEM': {\n            const suggestItem = state.addressSimplePage.suggestsRaw[action.payload];\n\n            if (suggestItem.type === 'street') {\n                state.userModel.address = suggestItem.name;\n            } else if (suggestItem.type === 'building') {\n                updateUserAddressBasedOnBuilding(state, suggestItem);\n            }\n\n            break;\n        }\n\n        case 'ADDRESS_INPUT': {\n            state.userModel = { ...initialState.userModel };\n            state.userModel.address = action.payload.input;\n\n            break;\n        }\n\n        case 'ADDRESS_INPUT_ADD': {\n            state.userModel = { ...initialState.userModel };\n            state.userModel.address = action.payload.input;\n\n            break;\n        }\n\n        case 'ADDRESS_INPUT_CLEAR': {\n            state.userModel = { ...initialState.userModel };\n\n            break;\n        }\n\n        case 'ADDRESS_FULL_INPUT': {\n            if (action.payload.input.apartment) {\n                state.userModel.apartment = action.payload.input.apartment;\n            }\n\n            if (action.payload.input.floor) {\n                state.userModel.floor = action.payload.input.floor;\n            }\n\n            if (action.payload.input.entrance) {\n                state.userModel.entrance = action.payload.input.entrance;\n            }\n\n            if (action.payload.input.phone_num) {\n                state.userModel.phoneNumber = normalizePhone(action.payload.input.phone_num);\n            }\n\n            break;\n        }\n\n        case 'ADDRESS_FULL_INPUT_ADD': {\n            const pathname = selectPathname(state);\n\n            switch (pathname) {\n                case ROUTES.ADDRESS_FULL_PHONE: {\n                    state.userModel.phoneNumber = normalizePhone(action.payload.input);\n\n                    break;\n                }\n\n                case ROUTES.ADDRESS_FULL_APARTMENT: {\n                    state.userModel.apartment = action.payload.input;\n\n                    break;\n                }\n\n                case ROUTES.ADDRESS_FULL_ENTRANCE: {\n                    state.userModel.entrance = action.payload.input;\n\n                    break;\n                }\n\n                case ROUTES.ADDRESS_FULL_FLOOR: {\n                    state.userModel.floor = action.payload.input;\n\n                    break;\n                }\n\n                default:\n                    break;\n            }\n\n            break;\n        }\n\n        case 'ADDRESS_FULL_INPUT_CLEAR': {\n            const pathname = selectPathname(state);\n\n            switch (pathname) {\n                case ROUTES.ADDRESS_FULL_PHONE: {\n                    state.userModel.phoneNumber = '';\n                    break;\n                }\n\n                case ROUTES.ADDRESS_FULL_APARTMENT: {\n                    state.userModel.apartment = '';\n                    break;\n                }\n\n                case ROUTES.ADDRESS_FULL_ENTRANCE: {\n                    state.userModel.entrance = '';\n                    break;\n                }\n\n                case ROUTES.ADDRESS_FULL_FLOOR: {\n                    state.userModel.floor = '';\n                    break;\n                }\n\n                case ROUTES.ADDRESS_FULL_ALL: {\n                    state.userModel.phoneNumber = '';\n                    state.userModel.apartment = '';\n                    state.userModel.entrance = '';\n                    state.userModel.floor = '';\n                    break;\n                }\n\n                default:\n                    break;\n            }\n\n            break;\n        }\n\n        case 'addressFull/PHONE_NUMBER_INPUT_CHANGE': {\n            const { inputType, data } = action.payload;\n\n            if (inputType === 'insertText') {\n                state.userModel.phoneNumber = normalizePhone(state.userModel.phoneNumber + data);\n            } else {\n                state.userModel.phoneNumber = state.userModel.phoneNumber.slice(0, -1);\n            }\n\n            break;\n        }\n\n        case 'addressFull/APARTMENT_INPUT_CHANGE': {\n            state.userModel.apartment = action.payload;\n\n            break;\n        }\n\n        case 'addressFull/ENTRANCE_INPUT_CHANGE': {\n            state.userModel.entrance = action.payload;\n\n            break;\n        }\n\n        case 'addressFull/FLOOR_INPUT_CHANGE': {\n            state.userModel.floor = action.payload;\n\n            break;\n        }\n\n        case 'GO_TO_CATALOG': {\n            state.userModel = { ...state.userData };\n\n            break;\n        }\n\n        default:\n            break;\n    }\n};\n","import { CatalogListItemViewProps } from 'pages/Catalog/ListItem/CatalogListItem';\nimport { AppState, AppReducer } from 'store/constants';\nimport { ROUTES } from 'store/constants/router';\nimport {\n    canAddMore,\n    getCountById,\n    getDisabled,\n    getOldPriceById,\n    preparePriceById,\n    getQuantityLeftById,\n    formatSale,\n    wantMoreThanHave,\n} from 'store/reducers/helpers/catalogPage';\nimport { selectProductById, selectPathname, selectProductDiffById } from 'store/selectors';\n\nconst screenWidth = 1920;\nconst cardWidth = 392;\nconst cardGap = 32;\n\nconst screenItemCount = Math.floor(screenWidth / (cardWidth + cardGap));\n\nconst listOffset = (-1 * (screenWidth % (cardWidth + cardGap))) / 2;\n\nconst itemWidth = cardWidth + cardGap;\n\nconst getListIndexOffset = ({ catalogPage: { selectedItemId, order, listIndexOffset } }: AppState) => {\n    const selectedItemIndex = order.indexOf(selectedItemId);\n\n    if (selectedItemIndex === -1) {\n        return 0;\n    }\n\n    const scrollPageSize = 1;\n\n    if (selectedItemIndex <= listIndexOffset) {\n        return Math.max(0, listIndexOffset - scrollPageSize);\n    }\n\n    if (selectedItemIndex >= listIndexOffset + screenItemCount - 1) {\n        return Math.min(listIndexOffset + scrollPageSize, order.length - screenItemCount);\n    }\n\n    return listIndexOffset;\n};\n\nconst getWrapperXShift = ({ catalogPage: { listIndexOffset } }: AppState) =>\n    listOffset + listIndexOffset * itemWidth - cardGap / 2;\n\nconst getScreenIndexMap = ({ catalogPage: { listIndexOffset, order } }: AppState): Record<string, number> =>\n    new Array(screenItemCount).fill(0).reduce(\n        (result, _, index) => ({\n            ...result,\n            [order[index + listIndexOffset]]: index + 1,\n        }),\n        {} as Record<string, number>,\n    );\n\nconst prepareBadge = (state: AppState, itemId: string): CatalogListItemViewProps['badge'] => {\n    const quantityLeft = getQuantityLeftById(state, itemId);\n    const count = getCountById(state, itemId);\n    const productItemDiff = selectProductDiffById(state, itemId);\n    const productItem = selectProductById(state, itemId);\n\n    // раскупили\n    if (quantityLeft === 0) {\n        return { type: 'sold-out' };\n    }\n\n    // больше не осталось\n    if (count === quantityLeft) {\n        return { type: 'few-left' };\n    }\n\n    // изменение цены\n    if (productItemDiff && typeof productItemDiff.price !== 'undefined') {\n        // подорожание\n        if (productItemDiff.price > productItem.price) {\n            return { type: 'price-changed' };\n        }\n\n        // скидка\n        if (productItemDiff.price < productItem.price) {\n            const content = formatSale(productItem.price, productItemDiff.price);\n            return { type: 'sale', content };\n        }\n    }\n\n    return undefined;\n};\n\nconst prepareIndex = ({ catalogPage: { screenIndexMap } }: AppState, itemId: string) => screenIndexMap[itemId];\n\nconst prepareCatalogItemsMap = (state: AppState) => {\n    const { productsData, catalogPage } = state;\n\n    return Object.keys(productsData.itemsMap).reduce<AppState['catalogPage']['itemsMap']>((acc, itemId) => {\n        const { name, imageUrl } = selectProductById(state, itemId);\n\n        acc[itemId] = {\n            shouldFocusOnMount: catalogPage.selectedItemId === itemId,\n            imageUrl,\n            name,\n            price: preparePriceById(state, itemId),\n            oldPrice: getOldPriceById(state, itemId),\n            isWantMoreThanHave: wantMoreThanHave(state, itemId),\n            count: getCountById(state, itemId),\n            index: prepareIndex(state, itemId),\n            badge: prepareBadge(state, itemId),\n            isButtonDisabled: !canAddMore(state, itemId),\n            disabled: getDisabled(state, itemId),\n        };\n\n        return acc;\n    }, {});\n};\n\nconst getSelectedItemId = ({ catalogPage: { order, selectedItemId } }: AppState) => {\n    if (selectedItemId) {\n        return selectedItemId;\n    }\n\n    const [firstItemId] = order;\n\n    return firstItemId;\n};\n\nexport const catalogPageView: AppReducer = (state, action) => {\n    const { productsData, catalogPage } = state;\n\n    switch (action.type) {\n        case 'ADD_ITEM': {\n            if (selectPathname(state) === ROUTES.CATALOG) {\n                catalogPage.selectedItemId = action.payload.item;\n            }\n\n            break;\n        }\n\n        case 'catalog/SELECT_ITEM': {\n            catalogPage.selectedItemId = action.payload;\n\n            break;\n        }\n\n        default:\n            break;\n    }\n\n    catalogPage.order = Object.keys(productsData.itemsMap);\n    catalogPage.selectedItemId = getSelectedItemId(state);\n    catalogPage.listIndexOffset = getListIndexOffset(state);\n    catalogPage.wrapperXShift = getWrapperXShift(state);\n    catalogPage.screenIndexMap = getScreenIndexMap(state);\n    catalogPage.itemsMap = prepareCatalogItemsMap(state);\n};\n","import { CatalogListItemTouchViewProps } from 'pages/Catalog/ListItem/CatalogListItem@touch';\nimport { AppState, AppReducer } from 'store/constants';\nimport { selectCartItemById, selectProductById } from 'store/selectors';\nimport { calculateButtonDisabled, formatPrice, prepareCount } from 'store/reducers/helpers/catalogPage';\n\nconst prepareBadge = (state: AppState, itemId: string): CatalogListItemTouchViewProps['badge'] => {\n    const cartItem = selectCartItemById(state, itemId);\n    const productItem = selectProductById(state, itemId);\n\n    if (productItem.quantityLeft === 0) {\n        return 'sold-out';\n    }\n\n    if (cartItem && cartItem.count === productItem.quantityLeft) {\n        return 'few-left';\n    }\n\n    return undefined;\n};\n\nconst prepareIndex = ({ catalogPageTouch: { order } }: AppState, itemId: string) => order.indexOf(itemId) + 1;\n\nconst prepareCatalogItemsMap = (state: AppState) => {\n    const { productsData } = state;\n\n    return Object.keys(productsData.itemsMap).reduce<AppState['catalogPageTouch']['itemsMap']>((acc, itemId) => {\n        const productItem = selectProductById(state, itemId);\n\n        acc[itemId] = {\n            imageUrl: productItem.imageUrl,\n            name: productItem.name,\n            price: formatPrice(productItem.price),\n            count: prepareCount(state, itemId),\n            index: prepareIndex(state, itemId),\n            badge: prepareBadge(state, itemId),\n            buttonDisabled: calculateButtonDisabled(state, itemId),\n            disabled: productItem.quantityLeft === 0,\n        };\n\n        return acc;\n    }, {});\n};\n\nexport const catalogPageTouchView: AppReducer = (state) => {\n    const { productsData, catalogPageTouch } = state;\n\n    catalogPageTouch.order = Object.keys(productsData.itemsMap);\n    catalogPageTouch.itemsMap = prepareCatalogItemsMap(state);\n};\n","// 1. (?=(\\d{3})+$) - матчит подстроки нулевой длины, после которых идет три цифры подряд\n// 2. (?=...) - positive lookahead, конструкция, которая матчит позицию, после которой срабатывает указанный паттерн\n// 3. (?:\\d{3})+ - повторяющаяся незахватывающая группа, которая матчит подстроки из трех цифр\n// 4. $ - EOL - чтобы выровнять [3] по концу строки\nexport const splitByThousands = (n: number) => n.toString().replace(/(?=(?:\\d{3})+$)/g, ' ');\n","const renderSpace = (index: number) => ([1, 4, 7, 9].includes(index) ? ' ' : '');\n\nexport const formatPhoneNumber = (phoneNumber: string) =>\n    phoneNumber\n        .split('')\n        .map((digit, index) => `${digit}${renderSpace(index)}`)\n        .join('');\n","import { CartListItemViewProps } from 'pages/Cart/ListItem/CartListItem';\nimport {\n    canAddMore,\n    getCountById,\n    getDisabled,\n    getOldPriceById,\n    preparePriceById,\n    getQuantityLeftById,\n    formatPrice,\n    formatSale,\n    wantMoreThanHave,\n} from 'store/reducers/helpers/catalogPage';\nimport { splitByThousands } from 'tools/split-by-thousands';\nimport { selectProductById, selectCartItemById, selectProductDiffById } from 'store/selectors';\nimport { AppReducer, AppState } from 'store/constants';\nimport { formatPhoneNumber } from 'tools/format-phone-number';\n\nconst prepareHasRequiredData = ({ userData: { phoneNumber, address } }: AppState) => Boolean(address && phoneNumber);\n\nconst prepareLabel = (state: AppState, itemId: string): CartListItemViewProps['label'] => {\n    const quantityLeft = getQuantityLeftById(state, itemId);\n    const productItem = selectProductById(state, itemId);\n    const productItemDiff = selectProductDiffById(state, itemId);\n    const cartItem = selectCartItemById(state, itemId);\n    const isWantMoreThanHave = wantMoreThanHave(state, itemId);\n\n    // раскупили\n    if (quantityLeft === 0) {\n        return { type: 'sold-out' };\n    }\n\n    // больше не осталось\n    if (cartItem && cartItem.count === quantityLeft) {\n        return { type: 'few-left' };\n    }\n\n    // есть меньше чем добавили\n    if (isWantMoreThanHave) {\n        return {\n            type: 'you-want',\n            content: String(cartItem.count),\n        };\n    }\n\n    // изменение цены\n    if (productItemDiff && typeof productItemDiff.price !== 'undefined') {\n        // подорожание\n        if (productItemDiff.price > productItem.price) {\n            return { type: 'price-changed' };\n        }\n\n        // скидка\n        if (productItemDiff.price < productItem.price) {\n            const content = formatSale(productItem.price, productItemDiff.price);\n            return { type: 'sale', content };\n        }\n    }\n\n    return undefined;\n};\n\nconst prepareItemsMap = (state: AppState) => {\n    const { cartPage } = state;\n\n    return cartPage.order.reduce<AppState['cartPage']['itemsMap']>((result, itemId) => {\n        const cartItem = selectCartItemById(state, itemId);\n        const { imageUrl, name } = selectProductById(state, itemId);\n\n        if (cartItem) {\n            result[itemId] = {\n                imageUrl,\n                name,\n                price: preparePriceById(state, itemId),\n                oldPrice: getOldPriceById(state, itemId),\n                count: getCountById(state, itemId),\n                isWantMoreThanHave: wantMoreThanHave(state, itemId),\n                disabled: getDisabled(state, itemId),\n                label: prepareLabel(state, itemId),\n                isMoreButtonDisabled: !canAddMore(state, itemId),\n            };\n        }\n\n        return result;\n    }, {});\n};\n\nconst itemHeight = 152;\n\nconst getWrapperYShift = ({ cartPage: { selectedItemIndex, order } }: AppState) => {\n    if (selectedItemIndex === -1) {\n        return 0;\n    }\n\n    // так как индекс начинается с 0, то расчеты бы имели смысл начиная\n    // со второго элемента (индекс = 1), но нам нужно начинать скролл с\n    // 3-го элемента, поэтому сдвигаем значение на 1\n    let relatedIndex = Math.max(0, selectedItemIndex - 1);\n\n    // ограничиваем максимальное значение индекса\n    relatedIndex = Math.min(Math.max(0, order.length - 4), relatedIndex);\n\n    // домножаем отступ на коэффициент высоты айтема\n    return relatedIndex * itemHeight;\n};\n\nconst calculateMakePurchaseDisabled = (state: AppState) => {\n    const {\n        cart: { totalPrice },\n        delivery: { minimalPrice },\n    } = state;\n\n    return totalPrice < minimalPrice;\n};\n\nconst calculateMakePurchaseButtonView = (state: AppState): AppState['cartPage']['makePurchaseButtonView'] => {\n    return state.cartPage.isMakePurchaseButtonDisabled ? 'secondary' : 'primary';\n};\n\nconst prepareToMinimumPrice = ({ cart: { totalPrice }, delivery: { minimalPrice } }: AppState) =>\n    Math.max(0, Math.ceil((minimalPrice - totalPrice) / 100));\n\nconst prepareTotalPrice = ({ cart: { totalPrice } }: AppState) => splitByThousands(formatPrice(totalPrice));\n\nconst prepareTopGradientVisible = ({ cartPage: { wrapperYShift } }: AppState) => wrapperYShift !== 0;\n\nconst prepareBottomGradientVisible = ({ cartPage: { wrapperYShift, order } }: AppState) =>\n    order.length > 4 && wrapperYShift !== (order.length - 4) * itemHeight;\n\nconst getFormattedPhoneNumber = ({ userData }: AppState) =>\n    userData.phoneNumber && formatPhoneNumber(userData.phoneNumber);\n\nconst getFormattedPersonalAddress = ({ userData: { apartment, entrance, floor } }: AppState) =>\n    [\n        apartment && `квартира ${apartment}`, //\n        entrance && `подъезд ${entrance}`,\n        floor && `этаж ${floor}`,\n    ]\n        .filter(Boolean)\n        .join(', ');\n\nexport const cartPageView: AppReducer = (state, action) => {\n    const { cart, delivery, cartPage } = state;\n\n    switch (action.type) {\n        case 'cart/SELECT_ITEM': {\n            cartPage.selectedItemIndex = cartPage.order.indexOf(action.payload);\n\n            break;\n        }\n\n        default:\n            break;\n    }\n\n    cartPage.order = cart.order;\n    cartPage.deliveryTime = delivery.deliveryTime;\n    cartPage.itemsMap = prepareItemsMap(state);\n    cartPage.totalPrice = prepareTotalPrice(state);\n    cartPage.toMinimumPrice = prepareToMinimumPrice(state);\n    cartPage.wrapperYShift = getWrapperYShift(state);\n    cartPage.isMakePurchaseButtonDisabled = calculateMakePurchaseDisabled(state);\n\n    cartPage.makePurchaseButtonView = calculateMakePurchaseButtonView(state);\n    cartPage.topGradientVisible = prepareTopGradientVisible(state);\n    cartPage.bottomGradientVisible = prepareBottomGradientVisible(state);\n    cartPage.hasRequiredData = prepareHasRequiredData(state);\n    cartPage.phoneNumber = getFormattedPhoneNumber(state);\n    cartPage.personalAddress = getFormattedPersonalAddress(state);\n};\n","import { useSelector as useReduxSelector } from 'react-redux';\nimport { AppState } from 'store/constants';\n\nexport function useSelector<T = unknown>(mapStateToProps: (state: AppState) => T) {\n    return useReduxSelector<AppState, T>(mapStateToProps);\n}\n","import { useDispatch as useReduxDispatch } from 'react-redux';\nimport { AppDispatch } from 'store/constants';\n\nexport const useDispatch = () => useReduxDispatch<AppDispatch>();\n","import { DGSuggestItem } from 'types/2gis-maps';\nimport { createAction } from 'tools/create-action';\n\nexport const addressChangeInputValueAction = (payload: string) => createAction('address/CHANGE_INPUT_VALUE', payload);\n\nexport const addressSetSuggestsAction = (payload: DGSuggestItem[]) => createAction('address/SET_SUGGESTS', payload);\n\nexport const addressSelectSuggestItemAction = (payload: number) => createAction('address/SELECT_SUGGEST_ITEM', payload);\n\nexport const addressClickSuggestItemAction = (payload: string) => createAction('address/CLICK_SUGGEST_ITEM', payload);\n","// TODO: FRNTND-1 mv to npm package\n\nexport const font = {\n    weight: {\n        light: 300,\n        normal: 400,\n        regular: 400,\n        medium: 500,\n        semibold: 600,\n        bold: 700,\n        extrabold: 800,\n    },\n};\n","// TODO: FRNTND-1 mv to npm package\n\nconst duration = {\n    defaultMs: 200,\n};\n\nconst timingFnEaseInOut = 'ease-in-out';\n\nconst timingFn = {\n    easeInOut: timingFnEaseInOut,\n    default: timingFnEaseInOut,\n};\n\nexport const transition = {\n    duration,\n    timingFn,\n    default: `${duration.defaultMs}ms ${timingFn.default}`,\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'hooks/useSelector';\nimport { useDispatch } from 'hooks/useDispatch';\nimport { addressClickSuggestItemAction, addressSelectSuggestItemAction } from 'store/actions/addressSimplePage';\nimport { font } from 'style/const/font';\nimport { transition } from 'style/const/transition';\n\nexport const SUGGEST_ITEM_HEIGHT = 112;\nexport const SUGGEST_ITEM_MARGIN = 24;\n\nconst StyledRoot = styled.div`\n    margin-top: ${SUGGEST_ITEM_MARGIN}px;\n\n    display: flex;\n    align-items: center;\n    height: ${SUGGEST_ITEM_HEIGHT}px;\n    width: 900px;\n    padding: 36px 32px;\n    border: 4px solid transparent;\n    box-sizing: border-box;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n\n    border-radius: 24px;\n    font-weight: ${font.weight.medium};\n    font-size: 32px;\n    color: #fff;\n    background: #1a1a1a;\n\n    transition: border ${transition.default};\n\n    &:focus {\n        border-color: #68ea68;\n    }\n`;\n\ninterface SuggestListItemProps {\n    index: number;\n}\n\nexport interface AddressSimpleSuggestItemView {\n    id: string;\n    name: string;\n}\n\nexport const AddressSimpleSuggestListItem: React.FC<SuggestListItemProps> = ({ index }) => {\n    const { name, id } = useSelector(({ addressSimplePage: { suggests } }) => suggests[index]);\n    const dispatch = useDispatch();\n    const memoizedOnClick = React.useCallback(() => {\n        dispatch(addressClickSuggestItemAction(id));\n    }, [dispatch, id]);\n    const memoizedOnFocus = React.useCallback(() => {\n        dispatch(addressSelectSuggestItemAction(index));\n    }, [dispatch, index]);\n\n    return (\n        <StyledRoot tabIndex={0} onClick={memoizedOnClick} onFocus={memoizedOnFocus}>\n            {name}\n        </StyledRoot>\n    );\n};\n","import { DGSuggestItem } from 'types/2gis-maps';\nimport {\n    SUGGEST_ITEM_HEIGHT,\n    SUGGEST_ITEM_MARGIN,\n    AddressSimpleSuggestItemView,\n} from 'pages/AddressSimple/SuggestItem/AddressSimpleSuggestItem';\n\nimport { AppReducer, AppState, initialState } from '../../constants';\n\nconst prepareSuggestItems = (state: AppState) => {\n    const {\n        addressSimplePage: { inputValue, suggestsRaw },\n    } = state;\n\n    return Object.values(suggestsRaw).reduce<AddressSimpleSuggestItemView[]>((result, suggestItem) => {\n        const { name, id, type } = suggestItem;\n\n        if (!(type === 'street' && name === inputValue)) {\n            result.push({\n                id,\n                name,\n            });\n        }\n\n        return result;\n    }, []);\n};\n\nconst prepareIsSubmitButtonDisabled = (state: AppState) => {\n    const { street, house, city, address, latitude, longitude } = state.userModel;\n\n    return !street || !house || !city || !address || !latitude || !longitude;\n};\n\nconst prepareSuggestListContainerYShift = ({ addressSimplePage: { selectedSuggestItemIndex, suggests } }: AppState) => {\n    return (\n        (SUGGEST_ITEM_HEIGHT + SUGGEST_ITEM_MARGIN) *\n        Math.min(suggests.length - 3, Math.max(0, selectedSuggestItemIndex - 1))\n    );\n};\n\nexport const addressSimplePageView: AppReducer = (state, action) => {\n    const { addressSimplePage, userModel } = state;\n\n    switch (action.type) {\n        case 'address/CHANGE_INPUT_VALUE': {\n            addressSimplePage.selectedSuggestItemIndex = initialState.addressSimplePage.selectedSuggestItemIndex;\n\n            break;\n        }\n\n        case 'address/SET_SUGGESTS': {\n            addressSimplePage.suggestsRaw = action.payload.reduce<Record<string, DGSuggestItem>>((result, item) => {\n                result[item.id] = item;\n\n                return result;\n            }, {});\n\n            break;\n        }\n\n        case 'address/SELECT_SUGGEST_ITEM': {\n            addressSimplePage.selectedSuggestItemIndex = action.payload;\n\n            break;\n        }\n\n        case 'address/CLICK_SUGGEST_ITEM': {\n            const suggestItem = state.addressSimplePage.suggestsRaw[action.payload];\n\n            addressSimplePage.selectedSuggestItemIndex = initialState.addressSimplePage.selectedSuggestItemIndex;\n\n            if (suggestItem.type === 'building') {\n                addressSimplePage.submitButtonFocusHash = Math.random();\n            } else {\n                addressSimplePage.inputFocusHash = Math.random();\n            }\n\n            break;\n        }\n\n        default:\n            break;\n    }\n\n    addressSimplePage.inputValue = userModel.address;\n    addressSimplePage.suggests = prepareSuggestItems(state);\n    addressSimplePage.suggestListContainerYShift = prepareSuggestListContainerYShift(state);\n    addressSimplePage.isSubmitButtonDisabled = prepareIsSubmitButtonDisabled(state);\n};\n","import { AppState, AppReducer } from 'store/constants';\nimport { ROUTES } from 'store/constants/router';\nimport { formatPhoneNumber } from 'tools/format-phone-number';\n\nconst computeNextFocus = (state: AppState) => {\n    const { phoneNumber, apartment, entrance, floor } = state.userModel;\n\n    const options = {\n        [ROUTES.ADDRESS_FULL_PHONE]: phoneNumber,\n        [ROUTES.ADDRESS_FULL_APARTMENT]: apartment,\n        [ROUTES.ADDRESS_FULL_ENTRANCE]: entrance,\n        [ROUTES.ADDRESS_FULL_FLOOR]: floor,\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const result = Object.entries(options).find(([_, value]) => !value);\n\n    return result ? result[0] : ROUTES.ADDRESS_FULL_ALL;\n};\n\nexport const addressFullPageView: AppReducer = (state) => {\n    state.addressFullPage.nextFocus = computeNextFocus(state);\n    // так как здесь этот инпут заблочен, показываем данные с уровня data\n    state.addressFullPage.addressInputValue = state.userData.address;\n    state.addressFullPage.phoneNumberInputValue = formatPhoneNumber(state.userModel.phoneNumber);\n    state.addressFullPage.apartmentInputValue = state.userModel.apartment;\n    state.addressFullPage.entranceInputValue = state.userModel.entrance;\n    state.addressFullPage.floorInputValue = state.userModel.floor;\n    state.addressFullPage.isSubmitButtonDisabled =\n        !state.userModel.phoneNumber || state.userModel.phoneNumber.length !== 12;\n};\n","import { splitByThousands } from 'tools/split-by-thousands';\nimport { AppState, AppReducer } from 'store/constants';\nimport { ROUTES } from 'store/constants/router';\nimport { selectPathname } from 'store/selectors';\n\nconst routeToTitleMap: Record<string, string> = {\n    [ROUTES.CATALOG]: 'Самокат',\n    [ROUTES.CART]: 'Корзина',\n    [ROUTES.STATUS]: 'Самокат',\n    [ROUTES.ERROR]: 'Самокат',\n    [ROUTES.NO_AREA]: 'Адрес доставки',\n    [ROUTES.ADDRESS_FULL_ALL]: 'Адрес доставки и телефон',\n};\n\nconst getTitle = (state: AppState) => routeToTitleMap[selectPathname(state)] || '';\n\nconst getAddress = (state: AppState) => ({\n    text: state.userData.address,\n    isVisible: selectPathname(state) === ROUTES.CATALOG,\n});\n\nconst getCart = (state: AppState) => ({\n    isVisible: state.cart.totalCount > 0 && selectPathname(state) === ROUTES.CATALOG,\n    count: state.cart.totalCount,\n    price: splitByThousands(Math.ceil(state.cart.totalPrice / 100)),\n});\n\nconst routeToVisibilityMap: Record<string, boolean> = {\n    [ROUTES.CATALOG]: true,\n    [ROUTES.CART]: true,\n    [ROUTES.STATUS]: true,\n    [ROUTES.ERROR]: true,\n    [ROUTES.NO_AREA]: true,\n    [ROUTES.ADDRESS_SIMPLE]: true,\n};\n\nconst isVisible = ({ router }: AppState) => routeToVisibilityMap[router.location.pathname] || false;\n\nexport const headerView: AppReducer = (state) => {\n    const { header } = state.layout;\n\n    header.title = getTitle(state);\n    header.address = getAddress(state);\n    header.cart = getCart(state);\n    header.isVisible = isVisible(state);\n    header.isBackButtonVisible = Boolean(window.history.length);\n};\n","import { AppReducer, AppState } from 'store/constants';\nimport { OrderErrorPayload } from 'store/constants/native';\n\nconst mapOrderErrorTypeToProps: Record<OrderErrorPayload['type'], AppState['errorPage']> = {\n    partner: {\n        title: 'Не получилось оформить заказ',\n        subtitle: 'Пожалуйста, попробуйте ещё раз',\n        retryButtonText: 'Повторить',\n        closeButtonText: 'Очень жаль',\n    },\n    payment: {\n        title: 'Не получилось оформить заказ',\n        subtitle: 'Пожалуйста, попробуйте ещё раз',\n        retryButtonText: 'Повторить',\n        closeButtonText: 'Очень жаль',\n    },\n    timing: {\n        title: 'Закрыто',\n        subtitle: 'Часы работы с 8:00 до 23:00, \\nбез обеда и выходных',\n        retryButtonText: 'Повторить',\n        closeButtonText: 'Зайду позже',\n    },\n};\n\nexport const errorPageView: AppReducer = (state, action) => {\n    switch (action.type) {\n        case 'ORDER_ERROR': {\n            state.errorPage = mapOrderErrorTypeToProps[action.payload.type];\n            break;\n        }\n        default: {\n            break;\n        }\n    }\n};\n","import { AppReducer } from 'store/constants';\n\nexport const waitPageView: AppReducer = (state, action) => {\n    switch (action.type) {\n        case 'MAKE_PURCHASE': {\n            state.waitPage.text = 'Оформляем заказ...';\n            break;\n        }\n        case 'VALIDATION_OK': {\n            state.waitPage.text = '';\n            break;\n        }\n        case 'ORDER_ERROR': {\n            state.waitPage.text = '';\n            break;\n        }\n        default: {\n            break;\n        }\n    }\n};\n","import { createEmptyAction } from 'tools/create-action';\n\nexport const askForStockAction = () => createEmptyAction('ASK_FOR_STOCK');\n\nexport const askForItemsChangesAction = () => createEmptyAction('ASK_FOR_ITEMS_CHANGES');\n\nexport const makePurchaseAction = () => createEmptyAction('MAKE_PURCHASE');\n\nexport const pageChangeAction = () => createEmptyAction('PAGE_CHANGE');\n\nexport const askForOrderStatusAction = () => createEmptyAction('ASK_FOR_ORDER_STATUS');\n\nexport const askForOrderStatusFinalAction = () => createEmptyAction('ASK_FOR_ORDER_STATUS_FINAL');\n\nexport const addressSubmitAction = () => createEmptyAction('ADDRESS_SUBMIT');\n\nexport const addressFullSubmitAction = () => createEmptyAction('ADDRESS_FULL_SUBMIT');\n","/* eslint-disable no-underscore-dangle */\n/* eslint-disable @typescript-eslint/camelcase */\nimport { GO_TO_CATALOG } from 'mocks/goToCatalog';\nimport { ITEMS_CHANGES_MOCK } from 'mocks/itemsChanges';\nimport { SHOW_ITEMS_MOCK } from 'mocks/showItems';\nimport { createStore as createReduxStore, Middleware, applyMiddleware, compose, StoreEnhancer } from 'redux';\nimport { routerMiddleware, push, replace, goBack, LOCATION_CHANGE } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport { createHashHistory } from 'history';\nimport { applyItemsChanges } from 'store/actions/app';\nimport { getCountById } from 'store/reducers/helpers/catalogPage';\nimport { addressFullSuccessThunk, addressFullValidationOkThunk } from 'store/thunks/addressFullPage';\nimport { goToCatalogThunk, goToValidationThunk, validationOkThunk } from 'store/thunks/native';\nimport { AppStateInterface } from 'types/app-state';\n\nimport { AssistantSdkCommand } from './constants/native';\nimport { AssistantSdkServerAction } from './constants/server';\nimport { ROUTES } from './constants/router';\nimport { AppState, AppBaseAction, AppMiddleware, AppDispatch } from './constants';\nimport { getRootReducer } from './reducers';\nimport {\n    showItemsAction,\n    addItemAction,\n    removeAllAction,\n    removeItemAction,\n    addressInputAction,\n    addressInputAddAction,\n    addressInputClearAction,\n    addressFullInputAddAction,\n    addressFullInputClearAction,\n    addressFullValidationErrorAction,\n    askAgainForOrderStatusFinalAction,\n    goBackAction,\n    askAgainForOrderStatusAction,\n    addressFullInputAction,\n    orderErrorAction,\n    itemsChangesAction,\n    goToWaitAction,\n} from './actions/native';\nimport {\n    askForOrderStatusFinalAction,\n    askForOrderStatusAction,\n    askForStockAction,\n    askForItemsChangesAction,\n    pageChangeAction,\n} from './actions/server';\nimport { selectPathname } from './selectors';\nimport { ScenarioUser, ScenarioUserAddress, ScenarioUserLocation, StoreUser } from './constants/user';\n\nconst serverActionMiddleware: AppMiddleware = ({ dispatch, getState }) => (next) => (action) => {\n    switch (action.type) {\n        case 'CLOSE_APP': {\n            window.AssistantClient.close();\n            break;\n        }\n        case 'ASK_FOR_STOCK': {\n            window.AssistantClient.sendData({ action_id: action.type });\n\n            if (process.env.REACT_APP_ENVIRONMENT === 'development') {\n                setTimeout(() => {\n                    window.AssistantClient.onData({\n                        type: 'smart_app_data',\n                        // eslint-disable-next-line @typescript-eslint/camelcase\n                        smart_app_data: SHOW_ITEMS_MOCK,\n                    });\n                }, 500);\n\n                setTimeout(() => {\n                    window.AssistantClient.onData({\n                        type: 'smart_app_data',\n                        // eslint-disable-next-line @typescript-eslint/camelcase\n                        smart_app_data: {\n                            command: 'ADD_ITEM',\n                            item: '21ff407a-fa98-11e8-80c5-0cc47a817925',\n                            count: '5',\n                        },\n                    });\n                }, 1000);\n\n                setTimeout(() => {\n                    window.AssistantClient.onData({\n                        type: 'smart_app_data',\n                        // eslint-disable-next-line @typescript-eslint/camelcase\n                        smart_app_data: {\n                            command: 'ADD_ITEM',\n                            item: '21ff407c-fa98-11e8-80c5-0cc47a817925',\n                            count: '2',\n                        },\n                    });\n                }, 1500);\n            }\n\n            break;\n        }\n        case 'ASK_FOR_ITEMS_CHANGES': {\n            window.AssistantClient.sendData({ action_id: action.type });\n\n            if (process.env.REACT_APP_ENVIRONMENT === 'development') {\n                setTimeout(() => {\n                    window.AssistantClient.onData({\n                        type: 'smart_app_data',\n                        // eslint-disable-next-line\n                        smart_app_data: ITEMS_CHANGES_MOCK,\n                    });\n                }, 500);\n            }\n\n            break;\n        }\n        case 'ADDRESS_SUBMIT': {\n            window.AssistantClient.sendData({ action_id: action.type });\n            break;\n        }\n        case 'ADDRESS_FULL_SUBMIT': {\n            window.AssistantClient.sendData({ action_id: action.type });\n\n            // эмуляция ответа бэка для отладки в браузере\n            if (process.env.REACT_APP_ENVIRONMENT === 'development') {\n                window.AssistantClient.onData({\n                    type: 'smart_app_data',\n                    // eslint-disable-next-line @typescript-eslint/camelcase\n                    smart_app_data: {\n                        command: 'GO_TO_VALIDATION',\n                    },\n                });\n            }\n\n            break;\n        }\n        case 'ASK_FOR_ORDER_STATUS': {\n            window.AssistantClient.sendData({ action_id: action.type });\n\n            // эмуляция ответа бэка для отладки в браузере\n            if (process.env.REACT_APP_ENVIRONMENT === 'development') {\n                window.AssistantClient.onData({\n                    type: 'smart_app_data',\n                    // eslint-disable-next-line @typescript-eslint/camelcase\n                    smart_app_data: {\n                        command: 'ASK_AGAIN_FOR_ORDER_STATUS_FINAL',\n                    },\n                });\n            }\n\n            break;\n        }\n        case 'ASK_FOR_ORDER_STATUS_FINAL': {\n            window.AssistantClient.sendData({ action_id: action.type });\n\n            // эмуляция ответа бэка для отладки в браузере\n            if (process.env.REACT_APP_ENVIRONMENT === 'development') {\n                window.AssistantClient.onData({\n                    type: 'smart_app_data',\n                    // eslint-disable-next-line @typescript-eslint/camelcase\n                    smart_app_data: {\n                        command: 'VALIDATION_OK',\n                        status: true,\n                        // eslint-disable-next-line @typescript-eslint/camelcase\n                        order_id: '364528',\n                    },\n                });\n            }\n\n            break;\n        }\n        case 'MAKE_PURCHASE': {\n            window.AssistantClient.sendData({ action_id: action.type });\n\n            // эмуляция ответа бэка для отладки в браузере\n            if (process.env.REACT_APP_ENVIRONMENT === 'development') {\n                setTimeout(() => {\n                    window.AssistantClient.onData({\n                        type: 'smart_app_data',\n                        // eslint-disable-next-line @typescript-eslint/camelcase\n                        smart_app_data: {\n                            command: 'GO_TO_WAIT',\n                        },\n                    });\n                }, 500);\n            }\n\n            break;\n        }\n        case 'PAGE_CHANGE': {\n            window.AssistantClient.sendData({ action_id: action.type });\n            break;\n        }\n        /**\n         * tldr; В кейсе LOCATION_CHANGE все dispatch'и нужно ОБЯЗАТЕЛЬНО оборачивать в setTimeout.\n         * Нельзя влазить и диспатчить action'ы перед LOCATION_CHANGE, от этого ломается\n         * взаимодействие connected-react-router и history.\n         *\n         * Внимание! Перед прочтением этого коммента лучше пойти взять бутылку чего нибудь покрепче,\n         * потому что без нее не разобраться.\n         *\n         * Так вот, для понимания того, почему это нужно делать. Сперва, нужно понять то,\n         * как работает навигация в кишках connected-react-router и history.\n         * Предположим, мы хотим перейти на другую страницу. Для этого\n         * dispatch'им push action react-connected-router'a с типом @@router/CALL_HISTORY_METHOD\n         * который подхватывает router middleware и вызывает\n         * соответствующий метод (push) у библиотеки history.\n         * В результате чего history меняет урл через History API браузера\n         * и обновляет свой стейт. После оповещает слушателей, подписанных на это.\n         * Внутри connected-react-router'а вызывается обработчик, который подписан\n         * на изменение стейта (локального, внутри библиотеки) history.\n         * Он dispatch'ит action, с типом @@router/LOCATION_CHANGE, который должен долететь\n         * до редюсера connected-react-router’а и актуализировать (синкнуть со стейтом в history) стейт router'a.\n         * После чего на изменение стейта срабатывает обработчик который обычно триггерит рендер react'а,\n         * но у connected-react-router’a есть свой такой, который нужен для того,\n         * чтобы синкать стейт router'a в сторе и стейт пакета history.\n         * То есть в обратную сторону. Вот в этом то месте и происходит рассинхрон.\n         *\n         * Из-за того что этот обработчик в connected-react-router'е не смотрит на action,\n         * который к нему прилетает (redux его не прокидывает), он пытается синкать\n         * состояния на каждый чих. Валидно убеждается в том, что состояния разные из-за того что history\n         * уже внесла в свой стейт изменения, а редюсер router'a еще не отработал, потому что\n         * до него влез другой action.\n         * После чего вызывает соответствующий метод у history, который снова меняет ее состояние\n         * и снова триггерит об этом экшен и все это еще больше запутывается.\n         **/\n        case LOCATION_CHANGE: {\n            const state = getState();\n\n            const currentPathname = selectPathname(state);\n            const nextPathname = action.payload.location.pathname;\n\n            switch (currentPathname) {\n                case ROUTES.CATALOG:\n                case ROUTES.CART: {\n                    setTimeout(() => {\n                        dispatch(applyItemsChanges());\n                    });\n\n                    break;\n                }\n\n                default:\n                    break;\n            }\n\n            switch (nextPathname) {\n                case ROUTES.CATALOG: {\n                    if (Object.keys(state.productsData.itemsMap).length) {\n                        setTimeout(() => {\n                            dispatch(askForItemsChangesAction());\n                        });\n                    } else {\n                        setTimeout(() => {\n                            dispatch(askForStockAction());\n                        });\n                    }\n\n                    break;\n                }\n                case ROUTES.CART: {\n                    if (process.env.REACT_APP_ENVIRONMENT === 'development') {\n                        if (!Object.keys(state.productsData.itemsMap).length) {\n                            setTimeout(() => {\n                                dispatch(askForStockAction());\n                            });\n                        }\n                    }\n\n                    setTimeout(() => {\n                        dispatch(askForItemsChangesAction());\n                    });\n\n                    break;\n                }\n\n                default:\n                    break;\n            }\n\n            // при ините приложения прилетает LOCATION_CHANGE,\n            // это проверка нужна чтобы не слать лишний сервер экшен\n            if (currentPathname !== nextPathname) {\n                setTimeout(() => {\n                    dispatch(pageChangeAction());\n                });\n            }\n\n            break;\n        }\n        default:\n            break;\n    }\n\n    return next(action);\n};\n\nexport const history = createHashHistory();\nconst enhancers: StoreEnhancer[] = [];\nconst middlewares: Middleware[] = [thunk, routerMiddleware(history), serverActionMiddleware as Middleware];\n\nif (process.env.NODE_ENV !== 'production') {\n    if (typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION__) {\n        enhancers.push(window.__REDUX_DEVTOOLS_EXTENSION__());\n    }\n}\n\n// TODO: научиться инитить приложение на основе рекавери стейта\n// https://sbtatlas.sigma.sbrf.ru/jira/browse/FOODTECHUI-42\nexport const store = createReduxStore<AppState, AppBaseAction, {}, {}>(\n    getRootReducer(history),\n    compose(applyMiddleware(...middlewares), ...enhancers),\n);\nconst dispatch = store.dispatch as AppDispatch;\n\nif (process.env.NODE_ENV !== 'production') {\n    window.__store = store;\n}\n\nexport const dispatchToReduxStore = ({ smart_app_data }: AssistantSdkCommand) => {\n    switch (smart_app_data.command) {\n        case 'SHOW_ITEMS':\n            dispatch(showItemsAction(smart_app_data));\n            break;\n        case 'ITEMS_CHANGES': {\n            dispatch(itemsChangesAction(smart_app_data));\n            break;\n        }\n        case 'ADD_ITEM': {\n            dispatch(addItemAction(smart_app_data));\n            break;\n        }\n        case 'REMOVE_ALL': {\n            dispatch(removeAllAction());\n            break;\n        }\n        case 'REMOVE_ITEM': {\n            dispatch(removeItemAction({ ...smart_app_data, shouldRemoveMention: true }));\n            break;\n        }\n        case 'GO_TO_CATALOG': {\n            dispatch(goToCatalogThunk(smart_app_data));\n            break;\n        }\n        case 'GO_TO_NO_AREA': {\n            dispatch(push(ROUTES.NO_AREA));\n            break;\n        }\n        case 'GO_TO_VALIDATION': {\n            dispatch(goToValidationThunk());\n            break;\n        }\n        case 'GO_TO_PROMO': {\n            dispatch(push(ROUTES.PROMO));\n            break;\n        }\n        case 'GO_TO_ADDRESS_SIMPLE': {\n            dispatch(push(ROUTES.ADDRESS_SIMPLE));\n            break;\n        }\n        case 'GO_TO_ADDRESS_FULL': {\n            dispatch(push(ROUTES.ADDRESS_FULL_ALL));\n            break;\n        }\n        case 'VALIDATION_OK': {\n            dispatch(validationOkThunk(smart_app_data));\n            break;\n        }\n        case 'ORDER_ERROR': {\n            dispatch(orderErrorAction(smart_app_data));\n            dispatch(replace(ROUTES.ERROR));\n            break;\n        }\n        case 'ADDRESS_INPUT': {\n            dispatch(addressInputAction(smart_app_data));\n            dispatch(push(ROUTES.ADDRESS_SIMPLE));\n            break;\n        }\n        case 'ADDRESS_INPUT_ADD': {\n            dispatch(addressInputAddAction(smart_app_data));\n            break;\n        }\n        case 'ADDRESS_INPUT_CLEAR': {\n            dispatch(addressInputClearAction());\n            break;\n        }\n        case 'ADDRESS_FULL_SUCCESS': {\n            dispatch(addressFullSuccessThunk());\n            break;\n        }\n        case 'ADDRESS_FULL_INPUT': {\n            dispatch(addressFullInputAction(smart_app_data));\n            break;\n        }\n        case 'ADDRESS_FULL_INPUT_ADD': {\n            dispatch(addressFullInputAddAction(smart_app_data));\n            break;\n        }\n        case 'ADDRESS_FULL_INPUT_CLEAR': {\n            dispatch(addressFullInputClearAction());\n            break;\n        }\n        case 'ADDRESS_FULL_VALIDATION_OK': {\n            dispatch(addressFullValidationOkThunk());\n            break;\n        }\n        case 'ADDRESS_FULL_VALIDATION_ERROR': {\n            dispatch(addressFullValidationErrorAction());\n            break;\n        }\n        case 'ASK_AGAIN_FOR_ORDER_STATUS_FINAL': {\n            dispatch(askAgainForOrderStatusFinalAction());\n            setTimeout(() => dispatch(askForOrderStatusFinalAction()), 500);\n            break;\n        }\n        case 'GO_TO_WAIT': {\n            dispatch(push(ROUTES.WAIT));\n            dispatch(goToWaitAction());\n            dispatch(askForOrderStatusAction());\n            break;\n        }\n        case 'GO_BACK': {\n            dispatch(goBackAction());\n            dispatch(goBack());\n            break;\n        }\n        case 'ASK_AGAIN_FOR_ORDER_STATUS': {\n            dispatch(askAgainForOrderStatusAction());\n            setTimeout(() => dispatch(askForOrderStatusAction()), 500);\n            break;\n        }\n        default:\n            break;\n    }\n};\n\nif (process.env.REACT_APP_ENVIRONMENT !== 'production' && module.hot) {\n    module.hot.accept('./reducers', () => {\n        // eslint-disable-next-line\n        const { getRootReducer } = require('./reducers');\n        const rootReducer = getRootReducer(history);\n\n        store.replaceReducer(rootReducer);\n    });\n}\n\nconst castCatalogItemSelectorFromStore = (state: AppState): AppStateInterface['item_selector'] => {\n    const {\n        catalogPage: { screenIndexMap },\n        productsData: { itemsMap },\n    } = state;\n\n    return {\n        ignored_words: ['добавь', 'удали'],\n        items: Object.values(itemsMap)\n            .filter(({ id }) => screenIndexMap[id])\n            .map(({ id, name: title }) => {\n                const number = screenIndexMap[id];\n\n                return {\n                    id,\n                    title,\n                    visible: true,\n                    number,\n                };\n            }),\n    };\n};\n\nconst castItemSelectorFromStore = (state: AppState): AppStateInterface['item_selector'] => {\n    const pathname = selectPathname(state);\n\n    switch (pathname) {\n        case ROUTES.CATALOG:\n            return castCatalogItemSelectorFromStore(state);\n\n        default:\n            return {\n                ignored_words: [],\n                items: [],\n            };\n    }\n};\n\nconst serializeAddress = (storeUser: StoreUser): ScenarioUserAddress => {\n    const {\n        address,\n        city,\n        street,\n        house,\n        building,\n        floor,\n        entrance,\n        apartment,\n        doorCode,\n        latitude,\n        longitude,\n    } = storeUser;\n\n    const location: ScenarioUserLocation = { latitude, longitude };\n\n    return {\n        location,\n        address_string: address,\n        city,\n        street,\n        house,\n        building,\n        floor,\n        entrance,\n        apartment,\n        door_code: doorCode,\n        confirmed: 'true',\n    };\n};\n\nconst prepareAddress = (state: AppState): ScenarioUser => {\n    let source;\n\n    switch (selectPathname(state)) {\n        case ROUTES.ADDRESS_SIMPLE:\n        case ROUTES.ADDRESS_FULL_ALL: {\n            source = state.userModel;\n\n            break;\n        }\n\n        default: {\n            source = state.userData;\n\n            break;\n        }\n    }\n\n    return {\n        phone_num: source.phoneNumber,\n        customer_name: source.customerName,\n        address: serializeAddress(source),\n    };\n};\n\nconst castFromStore = (): AppStateInterface => {\n    const state = store.getState();\n    const { cart } = state;\n    const pathname = selectPathname(state);\n\n    return {\n        item_selector: castItemSelectorFromStore(state),\n        foodtech: {\n            currentScreen: pathname.substring(1),\n            products: Object.keys(cart.itemsMap)\n                .map((id) => {\n                    const quantity = getCountById(state, id);\n\n                    return { id, quantity };\n                })\n                .filter(({ quantity }) => Boolean(quantity)),\n            totalPrice: {\n                value: cart.totalPrice,\n                discountValue: cart.totalPrice,\n            },\n            ...prepareAddress(state),\n        },\n    };\n};\n\nif (window.appInitialData) {\n    if (Array.isArray(window.appInitialData)) {\n        window.appInitialData.forEach(dispatchToReduxStore);\n    } else {\n        dispatchToReduxStore(window.appInitialData);\n    }\n}\n\n/* eslint-disable no-console */\nwindow.AssistantClient = window.AssistantClient || {};\n\nif (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n    // eslint-disable-next-line no-underscore-dangle\n    window.__inbox = window.__inbox || [];\n    // eslint-disable-next-line no-underscore-dangle\n    window.__outbox = window.__outbox || [];\n}\n\n/**\n * Assistand SDK API implementation:\n */\nwindow.AssistantClient.onStart = () => {\n    if (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n        console.log('invoke onStart callback');\n    }\n};\n\nwindow.AssistantClient.onData = (command: AssistantSdkCommand) => {\n    if (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n        // eslint-disable-next-line no-underscore-dangle\n        window.__inbox.push(command);\n    }\n\n    if (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n        console.log(`server command: ${JSON.stringify(command)}`);\n    }\n\n    dispatchToReduxStore(command);\n};\n\nwindow.AssistantClient.sendData = (message: AssistantSdkServerAction) => {\n    if (process.env.REACT_APP_ENVIRONMENT === 'development') {\n        window.AssistantClient.onRequestState();\n    }\n\n    if (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n        console.log(`sendData: ${JSON.stringify(message)}`);\n    }\n\n    if (window.AssistantHost && typeof window.AssistantHost.sendData === 'function') {\n        window.AssistantHost.sendData(JSON.stringify(message), null);\n    }\n};\n\nwindow.AssistantClient.onRequestState = () => {\n    const state = castFromStore();\n    const stateString = JSON.stringify(state);\n\n    if (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n        console.log('invoke request state callback', stateString);\n    }\n\n    if (window.AssistantHost && typeof window.AssistantHost.updateState === 'function') {\n        window.AssistantHost.updateState(stateString);\n    }\n\n    return state;\n};\n\nwindow.AssistantClient.close = () => {\n    if (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n        console.log('call close native method');\n    }\n\n    if (window.AssistantHost && typeof window.AssistantHost.close === 'function') {\n        window.AssistantHost.close();\n    }\n};\n\nif (window.AssistantHost && typeof window.AssistantHost.ready === 'function') {\n    if (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n        console.log('call ready native method');\n    }\n\n    window.AssistantHost.ready();\n}\n\n// эмуляция первой команды от бэка\nif (process.env.REACT_APP_ENVIRONMENT === 'development' && !window.location.href.includes('address-simple')) {\n    setTimeout(() => {\n        window.AssistantClient.onData({\n            type: 'smart_app_data',\n            // eslint-disable-next-line @typescript-eslint/camelcase\n            smart_app_data: GO_TO_CATALOG,\n        });\n    }, 100);\n}\n","import { produce } from 'immer';\nimport { History } from 'history';\nimport { mobileDetect } from 'tools/browser';\nimport { AppReducer, initialState, AppBaseAction } from 'store/constants';\nimport { productsData } from 'store/reducers/data/products';\nimport { productsDiffData } from 'store/reducers/data/productsDiff';\nimport { userData } from 'store/reducers/data/user';\nimport { deliveryData } from 'store/reducers/data/delivery';\nimport { getRouterModel } from 'store/reducers/model/router';\nimport { cartModel } from 'store/reducers/model/cart';\nimport { userModel } from 'store/reducers/model/user';\nimport { catalogPageView } from 'store/reducers/view/catalogPage';\nimport { catalogPageTouchView } from 'store/reducers/view/catalogPage@touch';\nimport { cartPageView } from 'store/reducers/view/cartPage';\nimport { addressSimplePageView } from 'store/reducers/view/addressSimplePage';\nimport { addressFullPageView } from 'store/reducers/view/addressFullPage';\nimport { headerView } from 'store/reducers/view/header';\nimport { errorPageView } from 'store/reducers/view/errorPage';\nimport { waitPageView } from 'store/reducers/view/waitPage';\n\nexport const getRootReducer = (history: History) => {\n    const routerModel = getRouterModel(history);\n    const isMobile = mobileDetect();\n\n    return (state = initialState, action: AppBaseAction) =>\n        produce(state, (draft) => {\n            const applyReducer = (reducer: AppReducer) => reducer(draft, action);\n\n            [\n                // уровень данных\n                productsData,\n                productsDiffData,\n                userData,\n                deliveryData,\n            ].forEach(applyReducer);\n\n            [\n                // уровень бизнес логики\n                routerModel,\n                cartModel,\n                userModel,\n            ].forEach(applyReducer);\n\n            // уровень пропсов для для отрисовки компонентов\n            if (isMobile) {\n                [\n                    // мобильная версия\n                    catalogPageTouchView,\n                    headerView,\n                ].forEach(applyReducer);\n            } else {\n                [\n                    // десктопная версия\n                    catalogPageView,\n                    cartPageView,\n                    addressSimplePageView,\n                    addressFullPageView,\n                    waitPageView,\n                    errorPageView,\n                    headerView,\n                ].forEach(applyReducer);\n            }\n        });\n};\n","import { History, LocationState } from 'history';\nimport { connectRouter, LocationChangeAction } from 'connected-react-router';\n\nimport { AppReducer } from '../../constants';\n\nexport const getRouterModel = (history: History): AppReducer => {\n    const changeRouter = connectRouter<LocationState>(history);\n\n    return (state, action) => {\n        /**\n         * @see https://github.com/supasate/connected-react-router/blob/master/src/reducer.js#L58\n         * Здесь костылим тип экшена, потому что в библиотеке\n         * криво написаны тайпинги. На самом деле, метод принимает любые экшены,\n         * но работает только LocationChangeAction (там стоит ифак на него).\n         *\n         * Проблема в том, что если не вызывать этот метод с другими экшенами,\n         * то по экшену @@INIT этот метод не вернет изначальное состояние router.\n         */\n        state.router = changeRouter(state.router, action as LocationChangeAction);\n    };\n};\n","// TODO: FRNTND-1 mv to npm package\n\nexport const icon = {\n    xs: {\n        sizePx: 24,\n    },\n    m: {\n        sizePx: 48,\n    },\n    s: {\n        sizePx: 32,\n    },\n};\n","// TODO: FRNTND-1 mv to npm package\n\nexport const color = {\n    text: {\n        white: '#ffffff',\n        primary: '#ffffff',\n        secondary: 'rgba(255, 255, 255, 0.56)',\n        active: '#2ac673',\n        warning: '#f6650a',\n    },\n    button: {\n        secondary1: 'rgba(255, 255, 255, 0.12)',\n        secondary2: 'rgba(0, 0, 0, 0.56)',\n        primary: '#12a557',\n        warning: '#f6650a',\n        critical: '#dc283a',\n        inactive: '#3b3f44',\n    },\n    background: {\n        default: '#080808',\n        surface: 'rgba(255, 255, 255, 0.06)',\n    },\n};\n","// TODO: FRNTND-1 mv to npm package\n\nconst widthPx = 1920;\nconst heightPx = 1080;\nconst headerHeightPx = 160;\nconst footerHeightPx = 128;\nconst contentHeightPx = heightPx - headerHeightPx - footerHeightPx;\n\nexport const layout = {\n    widthPx,\n    heightPx,\n    headerHeightPx,\n    footerHeightPx,\n    contentHeightPx,\n};\n","import styled from 'styled-components';\nimport { font } from 'style/const/font';\n\nexport const HeadlineText1 = styled.div`\n    font-weight: ${font.weight.bold};\n    font-size: 64px;\n    line-height: 72px;\n    letter-spacing: -0.011em;\n`;\n\nexport const HeadlineText2 = styled.div`\n    font-weight: ${font.weight.semibold};\n    font-size: 48px;\n    line-height: 56px;\n    letter-spacing: -0.022em;\n`;\n\nexport const HeadlineText3 = styled.div`\n    font-weight: ${font.weight.semibold};\n    font-size: 40px;\n    line-height: 48px;\n    letter-spacing: -0.025em;\n`;\n\nexport const HeadlineText4 = styled.div`\n    font-weight: ${font.weight.bold};\n    font-size: 40px;\n    line-height: 48px;\n    letter-spacing: -0.025em;\n`;\n","import { useThrottledFn as _useThrottledFn, ThrottleOrDebounceOpts } from 'beautiful-react-hooks';\n\nconst defaultOptions: ThrottleOrDebounceOpts = {\n    leading: false,\n    trailing: true,\n};\n\nexport const useThrottledFn: typeof _useThrottledFn = (fn, timeout, options = defaultOptions, dependencies) =>\n    _useThrottledFn(fn, timeout, options, dependencies);\n","import { transition } from './transition';\nimport { color } from './color';\n\n// TODO: FRNTND-1 mv to npm package\n\nexport const focus = {\n    paddingPx: 4,\n    borderSizePx: 4,\n    color: color.text.active,\n    transition: transition.default,\n};\n","import { css, FlattenSimpleInterpolation } from 'styled-components';\nimport { focus } from 'style/const/focus';\n\nexport const syntheticFocus = (ruleset: FlattenSimpleInterpolation, isFocused?: boolean) => {\n    if (isFocused === undefined) {\n        return css`\n            &:focus {\n                ${ruleset}\n            }\n        `;\n    }\n\n    return isFocused && ruleset;\n};\n\ninterface FocusMixinOptions {\n    isFocused?: boolean;\n    borderRadius?: number;\n}\n\nconst positionPx = -1 * (focus.paddingPx + focus.borderSizePx);\n\nexport const focusBorderMixin = ({ isFocused, borderRadius }: FocusMixinOptions) => css`\n    &::after {\n        content: '';\n\n        position: absolute;\n        top: ${positionPx}px;\n        bottom: ${positionPx}px;\n        left: ${positionPx}px;\n        right: ${positionPx}px;\n\n        display: block;\n        box-sizing: border-box;\n\n        border-width: ${focus.borderSizePx}px;\n        border-color: ${focus.color};\n        border-style: solid;\n        border-radius: ${borderRadius ? borderRadius + focus.paddingPx * 2 : 0}px;\n\n        opacity: 0;\n\n        transition: opacity ${focus.transition};\n\n        z-index: 2;\n        pointer-events: none;\n    }\n\n    ${syntheticFocus(\n        css`\n            &::after {\n                opacity: 1;\n            }\n        `,\n        isFocused,\n    )}\n`;\n","import styled from 'styled-components';\nimport { font } from 'style/const/font';\n\nexport const ButtonText1 = styled.div`\n    font-weight: ${font.weight.semibold};\n    font-size: 32px;\n    line-height: 40px;\n`;\n\nexport const ButtonText2 = styled.div`\n    font-weight: ${font.weight.semibold};\n    font-size: 28px;\n    line-height: 32px;\n`;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { transition } from 'style/const/transition';\nimport { focusBorderMixin } from 'style/mixin/focus';\nimport { ButtonText1 } from 'components/Text/Button';\nimport { color } from 'style/const/color';\nimport { icon } from 'style/const/icon';\n\nconst containerBorderRadiusPx = 24;\n\ninterface StyledHeaderButtonProps {\n    isVisible?: boolean;\n}\n\nconst StyledHeaderButton = styled.div<StyledHeaderButtonProps>`\n    position: relative;\n\n    display: flex;\n    align-items: center;\n\n    margin-left: 24px;\n\n    box-sizing: border-box;\n    height: 80px;\n    padding: 16px 36px;\n    border-radius: ${containerBorderRadiusPx}px;\n\n    transition: background-color ${transition.default};\n    will-change: background-color;\n\n    ${focusBorderMixin({ borderRadius: containerBorderRadiusPx })}\n\n    &:focus {\n        background: ${color.button.secondary1};\n    }\n\n    &:first-of-type {\n        margin-left: 0;\n    }\n\n    ${({ isVisible }) =>\n        !isVisible &&\n        css`\n            display: none;\n        `}\n`;\n\nconst textHeightPx = icon.m.sizePx;\n\nconst StyledText = styled(ButtonText1)`\n    margin-left: 8px;\n\n    height: ${textHeightPx}px;\n    padding: 0 4px;\n\n    line-height: ${textHeightPx}px;\n\n    color: ${color.text.white};\n\n    opacity: 0.88;\n`;\n\ninterface HeaderButtonProps {\n    text: string;\n    isVisible?: boolean;\n    onClick?: () => void;\n}\n\nexport const HeaderButton: React.FC<HeaderButtonProps> = ({ text, isVisible, onClick: handleClick, children }) => {\n    return (\n        <StyledHeaderButton tabIndex={0} onClick={handleClick} isVisible={isVisible}>\n            {children}\n            <StyledText>{text}</StyledText>\n        </StyledHeaderButton>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { push } from 'connected-react-router';\nimport { useDispatch } from 'hooks/useDispatch';\nimport { useSelector } from 'hooks/useSelector';\nimport { useThrottledFn } from 'hooks/useThrottledFn';\nimport { selectHeader } from 'store/selectors';\nimport { ROUTES } from 'store/constants/router';\nimport { HeaderButton } from 'components/HeaderButton/HeaderButton';\nimport { icon } from 'style/const/icon';\n\nimport addressIcon from './address.svg';\n\nconst addressIconSizePx = icon.m.sizePx;\n\nconst StyledIcon = styled.div`\n    width: ${addressIconSizePx}px;\n    height: ${addressIconSizePx}px;\n\n    background-image: url('${addressIcon}');\n    background-repeat: no-repeat;\n    background-size: contain;\n`;\n\nconst throttleTimeoutMs = 200;\n\nexport const HeaderAddress: React.FC = () => {\n    const dispatch = useDispatch();\n\n    const { text, isVisible } = useSelector((state) => selectHeader(state).address);\n\n    const handleClick = useThrottledFn(() => dispatch(push(ROUTES.ADDRESS_SIMPLE)), throttleTimeoutMs, undefined, [\n        dispatch,\n    ]);\n\n    return (\n        <HeaderButton isVisible={isVisible} onClick={handleClick} text={text}>\n            <StyledIcon />\n        </HeaderButton>\n    );\n};\n","import React from 'react';\nimport { push } from 'connected-react-router';\nimport styled from 'styled-components';\nimport { useDispatch } from 'hooks/useDispatch';\nimport { useSelector } from 'hooks/useSelector';\nimport { useThrottledFn } from 'hooks/useThrottledFn';\nimport { selectHeader } from 'store/selectors';\nimport { ROUTES } from 'store/constants/router';\nimport { HeaderButton } from 'components/HeaderButton/HeaderButton';\nimport { icon } from 'style/const/icon';\nimport { color } from 'style/const/color';\n\nimport cartIcon from './cart.svg';\n\nconst cartIconSizePx = icon.m.sizePx;\n\nconst StyledIcon = styled.div`\n    position: relative;\n\n    width: ${cartIconSizePx}px;\n    height: ${cartIconSizePx}px;\n\n    background-image: url('${cartIcon}');\n    background-repeat: no-repeat;\n    background-size: contain;\n`;\n\nconst badgeSizePx = 32;\nconst badgeOffsetPx = cartIconSizePx / 2;\n\nconst StyledBadge = styled.span`\n    position: absolute;\n    left: ${badgeOffsetPx}px;\n    bottom: ${badgeOffsetPx}px;\n\n    width: ${badgeSizePx}px;\n    height: ${badgeSizePx}px;\n    border-radius: 50%;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    line-height: 24px;\n    font-size: 20px;\n    letter-spacing: -0.019em;\n\n    box-sizing: border-box;\n\n    color: ${color.text.primary};\n    background: ${color.button.primary};\n`;\n\nconst throttleTimeoutMs = 200;\n\nexport const HeaderCart: React.FC = () => {\n    const dispatch = useDispatch();\n\n    const { count, price, isVisible } = useSelector((state) => selectHeader(state).cart);\n\n    const handleClick = useThrottledFn(\n        () => {\n            dispatch(push(ROUTES.CART));\n        },\n        throttleTimeoutMs,\n        undefined,\n        [dispatch],\n    );\n\n    const text = `${price} ₽`;\n\n    return (\n        <HeaderButton isVisible={isVisible} onClick={handleClick} text={text}>\n            <StyledIcon>\n                <StyledBadge>{count}</StyledBadge>\n            </StyledIcon>\n        </HeaderButton>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'hooks/useSelector';\nimport { selectHeader } from 'store/selectors';\nimport { icon } from 'style/const/icon';\nimport { color } from 'style/const/color';\nimport { layout } from 'style/const/layout';\nimport { transition } from 'style/const/transition';\nimport { HeadlineText4 } from 'components/Text/Headline';\n\nimport { HeaderAddress } from '../HeaderAddress/HeaderAddress';\nimport { HeaderCart } from '../HeaderCart/HeaderCart';\n\nimport backButtonIcon from './Header.assets/chevron-left.svg';\nimport logoIcon from './Header.assets/logo.svg';\n\nconst headerPaddingTopPx = 32;\n\ninterface StyledHeaderProps {\n    isVisible: boolean;\n}\n\nconst StyledHeader = styled.div<StyledHeaderProps>`\n    position: relative;\n\n    height: ${layout.headerHeightPx}px;\n\n    box-sizing: border-box;\n    padding: ${headerPaddingTopPx}px 128px 0;\n\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    --spatial-navigation-contain: contain;\n\n    opacity: ${({ isVisible }) => Number(isVisible)};\n\n    transition: opacity ${transition.default};\n`;\n\nconst backButtonTopPx = 24 + headerPaddingTopPx;\n\nconst backButtonIconSizePx = icon.m.sizePx;\n\nconst StyledBackButton = styled.span`\n    position: absolute;\n    top: ${backButtonTopPx}px;\n    left: 24px;\n\n    width: 80px;\n    height: 80px;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    &::before {\n        content: '';\n\n        display: block;\n        width: ${backButtonIconSizePx}px;\n        height: ${backButtonIconSizePx}px;\n\n        background-image: url(${backButtonIcon});\n        background-repeat: no-repeat;\n        background-size: contain;\n    }\n`;\n\nconst StyledSection = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst logoSizePx = 72;\n\nconst StyledLogo = styled.div`\n    width: ${logoSizePx}px;\n    height: ${logoSizePx}px;\n    border-radius: 16px;\n\n    background-image: url(${logoIcon});\n    background-repeat: no-repeat;\n    background-size: contain;\n`;\n\nconst StyledTitle = styled(HeadlineText4)`\n    margin-left: 24px;\n\n    display: inline-block;\n\n    color: ${color.text.white};\n`;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const Header: React.FC = ({ children, ...props }) => {\n    const { title, isBackButtonVisible, isVisible } = useSelector(selectHeader);\n\n    return (\n        <StyledHeader isVisible={isVisible} {...props}>\n            {isBackButtonVisible && <StyledBackButton />}\n            <StyledSection>\n                <StyledLogo />\n                <StyledTitle>{title}</StyledTitle>\n            </StyledSection>\n            <StyledSection>\n                <HeaderAddress />\n                <HeaderCart />\n            </StyledSection>\n        </StyledHeader>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Header } from 'components/Header/Header';\nimport { color } from 'style/const/color';\nimport { layout } from 'style/const/layout';\nimport gradientBackground from 'assets/images/background-tv-sber.jpg';\n\nconst StyledContainer = styled.div`\n    position: relative;\n\n    width: 100%;\n    height: 100%;\n\n    overflow: hidden;\n\n    background-color: ${color.background.default};\n    background-image: url('${gradientBackground}');\n    background-position: center;\n    background-size: cover;\n`;\n\nconst AppContent = styled.div`\n    z-index: 2;\n\n    height: ${layout.contentHeightPx}px;\n`;\n\nconst StyledHeader = styled(Header)`\n    z-index: 2;\n`;\n\nconst preventScroll = (event: React.SyntheticEvent<HTMLDivElement>) => {\n    event.currentTarget.scrollTop = 0;\n};\n\nexport const AppLayout: React.FC = ({ children }) => {\n    return (\n        <StyledContainer onScroll={preventScroll}>\n            <StyledHeader />\n            <AppContent>{children}</AppContent>\n            {/* <MapBackground isVisible={isMapVisible} maskType={maskType} /> */}\n        </StyledContainer>\n    );\n};\n","import React from 'react';\n\nexport function useFocusOnMount<T>(forwardRef?: React.RefObject<T>) {\n    const ref = React.useRef<T>(null);\n\n    const onMountRef = forwardRef || ref;\n\n    React.useEffect(() => {\n        if (onMountRef.current instanceof HTMLElement) {\n            onMountRef.current.focus();\n        }\n    }, [onMountRef]);\n\n    return onMountRef;\n}\n","import { createAction } from 'tools/create-action';\n\nexport const catalogSelectItemAction = (payload: string) => createAction('catalog/SELECT_ITEM', payload);\n","import styled from 'styled-components';\nimport { font } from 'style/const/font';\n\nexport const captionLineHeightPx = 32;\n\ntype CaptionTextProps = {\n    size?: number;\n    lineHeight?: number;\n};\n\nexport const CaptionText = styled.div<CaptionTextProps>`\n    font-weight: ${font.weight.medium};\n    font-size: ${({ size }) => size || 24}px;\n    line-height: ${({ lineHeight }) => lineHeight || captionLineHeightPx}px;\n    letter-spacing: -0.022em;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { color } from 'style/const/color';\nimport { CaptionText, captionLineHeightPx } from 'components/Text/Caption';\n\nexport type BadgeType = 'sold-out' | 'few-left' | 'sale' | 'price-changed';\n\nconst contentMap: Record<BadgeType, (s?: string) => string> = {\n    'sold-out': () => 'Раскупили',\n    'few-left': () => 'Осталось мало',\n    'price-changed': () => 'Изменилась цена',\n    sale: (value) => `Скидка ${value}%`,\n};\n\nconst backgroundColorMap: Record<BadgeType, string> = {\n    'sold-out': color.background.default,\n    'few-left': color.button.warning,\n    'price-changed': color.button.warning,\n    sale: color.button.primary,\n};\n\nconst badgePaddingYPx = 8;\nconst badgeHeightPx = captionLineHeightPx + badgePaddingYPx * 2;\nconst badgeBorderRadiusPx = badgeHeightPx / 2;\n\ninterface StyledBadgeProps {\n    type: BadgeType;\n}\nconst StyledBadge = styled(CaptionText)<StyledBadgeProps>`\n    padding: ${badgePaddingYPx}px 16px;\n    border-radius: ${badgeBorderRadiusPx}px;\n\n    color: ${color.text.primary};\n    background-color: ${({ type }) => backgroundColorMap[type]};\n`;\n\nexport interface BadgeProps extends React.HTMLAttributes<HTMLDivElement> {\n    className?: string;\n    type: BadgeType;\n    content?: string;\n}\nexport const Badge: React.FC<BadgeProps> = ({ type, content, className }) => {\n    const contentProvider = contentMap[type];\n\n    return (\n        <StyledBadge className={className} type={type}>\n            {contentProvider(content)}\n        </StyledBadge>\n    );\n};\n","import styled from 'styled-components';\nimport { font } from 'style/const/font';\n\nexport const FootnoteText1 = styled.div`\n    font-size: 28px;\n    line-height: 36px;\n    letter-spacing: -0.019em;\n    font-weight: ${font.weight.medium};\n`;\n\nexport const FootnoteText2 = styled.div`\n    font-size: 28px;\n    line-height: 36px;\n    letter-spacing: -0.019em;\n    font-weight: ${font.weight.semibold};\n`;\n","import React from 'react';\nimport styled, { css, FlattenSimpleInterpolation } from 'styled-components';\nimport { color } from 'style/const/color';\nimport { transition } from 'style/const/transition';\nimport { CaptionText } from 'components/Text/Caption';\nimport { FootnoteText2 } from 'components/Text/Footnote';\n\ntype IndexBadgeSize = 'xs' | 's' | 'm';\n\ninterface StyledIndexBadgeProps {\n    visible: boolean;\n    size: IndexBadgeSize;\n}\n\nconst mapSizeToPx: Record<IndexBadgeSize, number> = {\n    xs: 32,\n    s: 44,\n    m: 64,\n};\n\nconst mapSizeToParams: Record<IndexBadgeSize, FlattenSimpleInterpolation> = {\n    xs: css`\n        width: ${mapSizeToPx.xs}px;\n        height: ${mapSizeToPx.xs}px;\n    `,\n    s: css`\n        width: ${mapSizeToPx.s}px;\n        height: ${mapSizeToPx.s}px;\n    `,\n    m: css`\n        width: ${mapSizeToPx.m}px;\n        height: ${mapSizeToPx.m}px;\n    `,\n};\n\nconst StyledIndexBadge = styled.div<StyledIndexBadgeProps>`\n    position: absolute;\n\n    border-radius: 50%;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    ${({ size }) => mapSizeToParams[size]};\n\n    color: ${color.text.secondary};\n\n    transition: transform ${transition.default}, opacity ${transition.default};\n\n    ${({ visible }) => css`\n        transform: scale(${Number(visible)});\n        opacity: ${Number(visible)};\n    `}\n\n    background: ${color.button.secondary2};\n`;\n\ninterface IndexBadgeProps {\n    size: IndexBadgeSize;\n    index?: number;\n}\n\nexport const IndexBadge: React.FC<IndexBadgeProps> = ({ index, size, ...props }) => {\n    return (\n        <StyledIndexBadge visible={index !== undefined && index > 0} size={size} {...props}>\n            {size === 'xs' && (\n                <CaptionText size={14} lineHeight={18}>\n                    {index}\n                </CaptionText>\n            )}\n            {size === 's' && <CaptionText>{index}</CaptionText>}\n            {size === 'm' && <FootnoteText2>{index}</FootnoteText2>}\n        </StyledIndexBadge>\n    );\n};\n","import styled from 'styled-components';\nimport { font } from 'style/const/font';\n\nexport const BodyText1 = styled.div`\n    font-weight: ${font.weight.medium};\n    font-size: 32px;\n    line-height: 40px;\n    letter-spacing: -0.019em;\n`;\n\nexport const BodyText2 = styled.div`\n    font-weight: ${font.weight.semibold};\n    font-size: 32px;\n    line-height: 40px;\n    letter-spacing: -0.019em;\n`;\n\nexport const BodyText3 = styled.div`\n    font-weight: ${font.weight.semibold};\n    font-size: 48px;\n    line-height: 60px;\n    letter-spacing: -0.025em;\n`;\n\nexport const BodyTextDev = styled.div`\n    font-weight: ${font.weight.semibold};\n    font-size: 48px;\n    line-height: 60px;\n    letter-spacing: -0.025em;\n`;\n","import React from 'react';\nimport styled, { css, keyframes } from 'styled-components';\nimport { useDispatch } from 'hooks/useDispatch';\nimport { useFocusOnMount } from 'hooks/useFocusOnMount';\nimport { useSelector } from 'hooks/useSelector';\nimport { useThrottledFn } from 'hooks/useThrottledFn';\nimport { catalogSelectItemAction } from 'store/actions/catalogPage';\nimport { addItemAction } from 'store/actions/native';\nimport { Badge, BadgeProps } from 'components/Badge/Badge';\nimport { IndexBadge } from 'components/IndexBadge/IndexBadge';\nimport { BodyText1, BodyText2 } from 'components/Text/Body';\nimport { icon } from 'style/const/icon';\nimport { color } from 'style/const/color';\nimport { transition } from 'style/const/transition';\nimport { focusBorderMixin } from 'style/mixin/focus';\nimport plusIcon from 'assets/icons/plus.svg';\nimport doneIcon from 'assets/icons/done.svg';\n\nexport const cardWidthPx = 392;\nexport const cardHeightPx = 592;\nexport const cardBorderRadiusPx = 40;\n\nconst thumbSizePx = cardWidthPx;\n\ninterface StyledThumbProps {\n    imageUrl: string;\n}\nconst StyledThumb = styled.div<StyledThumbProps>`\n    display: block;\n    height: ${thumbSizePx}px;\n    width: ${thumbSizePx}px;\n\n    background-image: url('${(props) => props.imageUrl}');\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n\n    border-top-left-radius: ${cardBorderRadiusPx}px;\n    border-top-right-radius: ${cardBorderRadiusPx}px;\n`;\n\nconst descriptionHeightPx = cardHeightPx - thumbSizePx;\nconst descriptionPaddingPx = 32;\n\nconst StyledDescription = styled.div`\n    position: relative;\n\n    height: ${descriptionHeightPx}px;\n\n    box-sizing: border-box;\n    padding: ${descriptionPaddingPx}px;\n\n    border-bottom-left-radius: ${cardBorderRadiusPx}px;\n    border-bottom-right-radius: ${cardBorderRadiusPx}px;\n\n    background: ${color.background.surface};\n`;\n\nconst nameLineCount = 2;\n\nconst StyledName = styled(BodyText1)`\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: ${nameLineCount};\n    overflow: hidden;\n\n    color: ${color.text.primary};\n`;\n\nconst StyledPriceContainer = styled.div`\n    margin-top: 14px;\n\n    display: flex;\n`;\n\nconst StyledPrice = styled(BodyText2)`\n    color: ${color.text.primary};\n`;\n\nconst StyledOldPrice = styled(BodyText2)`\n    position: relative;\n    opacity: 0.24;\n    color: ${color.text.primary};\n    margin-left: 8px;\n\n    &::before {\n        content: '';\n        position: absolute;\n        top: calc(50% - 2px);\n        border-top: 4px solid ${color.text.primary};\n        left: 2px;\n        right: 2px;\n    }\n`;\n\ninterface StyledCountProps {\n    isWarning?: boolean;\n}\nconst StyledCount = styled(BodyText2)<StyledCountProps>`\n    margin-left: 8px;\n\n    color: ${({ isWarning }) => (isWarning ? color.text.warning : color.text.active)};\n`;\n\nconst buttonIconSizePx = icon.m.sizePx;\nconst buttonIconPaddingPx = 8;\nconst buttonSizePx = buttonIconSizePx * 1.5;\nconst buttonOffsetXPx = buttonIconSizePx / 2;\nconst buttonOffsetYPx = (-1 * (buttonSizePx + buttonIconSizePx - buttonIconPaddingPx)) / 2;\n\ninterface StyledButtonProps {\n    isActive: boolean;\n    isDisabled?: boolean;\n}\nconst StyledButton = styled.div<StyledButtonProps>`\n    position: absolute;\n    top: ${buttonOffsetYPx}px;\n    right: ${buttonOffsetXPx}px;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    width: ${buttonSizePx}px;\n    height: ${buttonSizePx}px;\n\n    border-radius: 50%;\n\n    background-color: ${({ isDisabled }) => (isDisabled ? '#3b3f44' : color.text.active)};\n\n    opacity: 0;\n\n    transition: opacity ${transition.default}, background-color ${transition.default};\n\n    &::before {\n        content: '';\n\n        display: block;\n\n        height: ${buttonIconSizePx}px;\n        width: ${buttonIconSizePx}px;\n\n        background-repeat: no-repeat;\n        background-size: contain;\n        background-position: center;\n\n        transition: opacity ${transition.default};\n\n        opacity: ${({ isDisabled }) => (isDisabled ? '0.56' : '1')};\n\n        background-image: url('${({ isActive }) => (isActive ? doneIcon : plusIcon)}');\n    }\n`;\n\nconst badgePositionPx = 16;\n\nconst CatalogListItemBadge = styled(Badge)`\n    position: absolute;\n    top: ${badgePositionPx}px;\n    left: ${badgePositionPx}px;\n    z-index: 1;\n`;\n\nconst StyledIndexBadge = styled(IndexBadge)`\n    top: 8px;\n    right: 8px;\n`;\n\nconst cardScaleFactor = 1 / 1.04;\nconst addActiveDurationMs = 200;\n\nconst AddAnimation = css`\n    animation-name: ${keyframes`\n        0% {\n            transform: scale(1);\n        }\n        100% {\n            transform: scale(${cardScaleFactor});\n        }\n    `};\n    animation-duration: ${addActiveDurationMs / 2}ms;\n    animation-iteration-count: 2;\n    animation-timing-function: ease-in-out;\n    animation-fill-mode: forwards;\n    animation-direction: alternate;\n`;\n\nconst shakeDurationMs = 200;\nconst shakeAmplitudePx = 10;\n\nconst ShakeAnimation = css`\n    animation-name: ${keyframes`\n        0% {\n            transform: translateX(0);\n        }\n        25% {\n            transform: translateX(${-1 * shakeAmplitudePx}px);\n        }\n        75% {\n            transform: translateX(${shakeAmplitudePx}px);\n        }\n        100% {\n            transform: translateX(0);\n        }\n    `};\n    animation-duration: ${shakeDurationMs}ms;\n    animation-iteration-count: 1;\n    animation-timing-function: ease-in-out;\n    animation-fill-mode: forwards;\n`;\n\ninterface StyledCatalogListItemProps {\n    disabled?: boolean;\n    isActive: boolean;\n    isShaking: boolean;\n}\nconst StyledCatalogListItem = styled.div<StyledCatalogListItemProps>`\n    position: relative;\n    width: ${cardWidthPx}px;\n    height: ${cardHeightPx}px;\n\n    display: flex;\n    flex-direction: column;\n    grid-row: 1;\n\n    border-radius: ${cardBorderRadiusPx}px;\n    box-shadow: 0 16px 48px rgba(0, 0, 0, 0.1);\n\n    transition: ${addActiveDurationMs / 2}ms ${transition.timingFn.default};\n    will-change: transform;\n    will-change: background-color;\n\n    ${focusBorderMixin({ borderRadius: cardBorderRadiusPx })}\n\n    ${({ disabled }) =>\n        !disabled &&\n        css`\n            &:focus {\n                ${StyledButton} {\n                    opacity: 1;\n                }\n            }\n        `}\n\n    ${({ disabled }) =>\n        disabled &&\n        css`\n            ${StyledDescription},\n            ${StyledThumb} {\n                opacity: 0.5;\n            }\n        `}\n\n    ${({ isActive }) =>\n        isActive &&\n        css`\n            ${AddAnimation}\n        `}\n\n    ${({ isShaking }) =>\n        isShaking &&\n        css`\n            ${ShakeAnimation}\n        `}\n`;\n\nconst throttleTimeoutMs = 200;\n\nconst useActive = (count: number) => {\n    const [isCardActive, setCardActive] = React.useState(false);\n    const [isButtonActive, setButtonActive] = React.useState(false);\n    const [displayCount, setDisplayCount] = React.useState(count);\n    const prevCountRef = React.useRef(0);\n\n    // проставление стейта нужно делать обязательно в эффекте,\n    // иначе происходит слишком много перерисовок из-за того что,\n    // мы во время рендера вызываем проставление стейта и так по кругу\n    // реакту такое не нравится\n    React.useEffect(() => {\n        if (count > prevCountRef.current) {\n            const nextCount = count;\n\n            setCardActive(true);\n\n            setTimeout(() => {\n                setButtonActive(true);\n                setDisplayCount(nextCount);\n            }, addActiveDurationMs * 0.5);\n\n            setTimeout(() => {\n                setCardActive(false);\n            }, addActiveDurationMs);\n\n            setTimeout(() => {\n                setButtonActive(false);\n            }, addActiveDurationMs * 1.5);\n        } else {\n            setDisplayCount(count);\n        }\n\n        prevCountRef.current = count;\n    }, [count]);\n\n    return {\n        isCardActive,\n        isButtonActive,\n        displayCount,\n    };\n};\n\nconst useShake = () => {\n    const [isShaking, setShaking] = React.useState(false);\n\n    const doShake = React.useCallback(() => {\n        if (!isShaking) {\n            setShaking(true);\n        }\n\n        setTimeout(() => setShaking(false), shakeDurationMs);\n    }, [isShaking, setShaking]);\n\n    return { isShaking, doShake };\n};\n\nexport interface CatalogListItemProps {\n    id: string;\n}\n\nexport interface CatalogListItemViewProps {\n    shouldFocusOnMount: boolean;\n    imageUrl: string;\n    count: number;\n    isWantMoreThanHave?: boolean;\n    name: string;\n    index: number;\n    price: number;\n    oldPrice?: number;\n    badge?: BadgeProps;\n    disabled?: boolean;\n    isButtonDisabled?: boolean;\n}\n\nexport const CatalogListItem: React.FC<CatalogListItemProps> = ({ id }) => {\n    const dispatch = useDispatch();\n    const {\n        shouldFocusOnMount,\n        imageUrl,\n        count,\n        isWantMoreThanHave,\n        index,\n        name,\n        price,\n        oldPrice,\n        badge,\n        disabled,\n        isButtonDisabled,\n    } = useSelector(({ catalogPage }) => catalogPage.itemsMap[id]);\n    const { isCardActive, isButtonActive, displayCount } = useActive(count);\n    const { isShaking, doShake } = useShake();\n    const handleFocus = React.useCallback(() => dispatch(catalogSelectItemAction(id)), [dispatch, id]);\n\n    const handleClick = useThrottledFn(\n        () => {\n            if (!disabled) {\n                if (isButtonDisabled) {\n                    doShake();\n                } else {\n                    dispatch(addItemAction({ item: id, count: '1' }));\n                }\n            }\n        },\n        throttleTimeoutMs,\n        undefined,\n        [dispatch, id, disabled, isButtonDisabled],\n    );\n\n    const onMountRef = useFocusOnMount<HTMLDivElement>();\n\n    return (\n        <StyledCatalogListItem\n            ref={shouldFocusOnMount ? onMountRef : undefined}\n            tabIndex={0}\n            disabled={disabled}\n            isActive={isCardActive}\n            isShaking={isShaking}\n            onFocus={handleFocus}\n            onClick={handleClick}\n        >\n            {badge ? <CatalogListItemBadge {...badge} /> : null}\n            <StyledIndexBadge size=\"m\" index={index} />\n            <StyledThumb imageUrl={imageUrl} />\n            <StyledDescription>\n                <StyledButton isActive={isButtonActive} isDisabled={isButtonDisabled} />\n                <StyledName>{name}</StyledName>\n                <StyledPriceContainer>\n                    <StyledPrice>{price} ₽</StyledPrice>\n                    {oldPrice ? <StyledOldPrice>{oldPrice} ₽</StyledOldPrice> : null}\n                    {displayCount ? <StyledCount isWarning={isWantMoreThanHave}>×{displayCount}</StyledCount> : null}\n                </StyledPriceContainer>\n            </StyledDescription>\n        </StyledCatalogListItem>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'hooks/useSelector';\nimport { layout } from 'style/const/layout';\n\nimport { CatalogListItem, cardHeightPx } from '../ListItem/CatalogListItem';\n\nconst preventScroll = (e: React.UIEvent<HTMLDivElement>) => {\n    e.currentTarget.scrollLeft = 0;\n};\n\nconst StyledCatalogList = styled.div`\n    position: relative;\n\n    height: ${layout.contentHeightPx}px;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n    overflow: hidden;\n    --spatial-navigation-contain: contain;\n`;\n\nexport const cardGapPx = 32;\n\nconst StyledWrapper = styled.div`\n    box-sizing: border-box;\n    width: max-content;\n    height: ${cardHeightPx}px;\n    min-width: 100%;\n\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 392px);\n    grid-auto-flow: row;\n    grid-gap: ${cardGapPx}px;\n\n    will-change: transform;\n\n    transition: transform 0.4s ease-in-out;\n`;\n\nexport const CatalogList: React.FC = () => {\n    const order = useSelector(({ catalogPage }) => catalogPage.order);\n    const wrapperXShift = useSelector(({ catalogPage }) => catalogPage.wrapperXShift);\n\n    const wrapperStyle = React.useMemo(\n        () => ({\n            transform: `translateX(${-1 * wrapperXShift}px)`,\n        }),\n        [wrapperXShift],\n    );\n\n    return (\n        <StyledCatalogList onScroll={preventScroll}>\n            <StyledWrapper style={wrapperStyle}>\n                {order.map((itemId) => (\n                    <CatalogListItem key={itemId} id={itemId} />\n                ))}\n            </StyledWrapper>\n        </StyledCatalogList>\n    );\n};\n","import React from 'react';\nimport ContentLoader, { IContentLoaderProps } from 'react-content-loader';\n\ninterface SkeletonProps extends IContentLoaderProps {\n    itemWidth: number;\n    itemHeight: number;\n    borderRadius: number;\n    rowCount: number;\n    columnCount: number;\n    paddingBetweenColumns: number;\n    paddingBetweenRows: number;\n}\n\nexport const Skeleton: React.FC<SkeletonProps> = ({\n    itemWidth,\n    itemHeight,\n    borderRadius,\n    rowCount,\n    columnCount,\n    paddingBetweenColumns,\n    paddingBetweenRows,\n    ...props\n}) => {\n    const list = Array.from(Array(columnCount)).map((_, columnIndex) =>\n        // eslint-disable-next-line no-shadow\n        Array.from(Array(rowCount)).map((_, rowIndex) => (\n            <rect\n                key={`${columnIndex} ${rowIndex}`}\n                x={columnIndex * (itemWidth + paddingBetweenColumns)}\n                y={rowIndex * (itemHeight + paddingBetweenRows)}\n                width={itemWidth}\n                height={itemHeight}\n                rx={borderRadius}\n                ry={borderRadius}\n            />\n        )),\n    );\n\n    return <ContentLoader {...props}>{list}</ContentLoader>;\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Skeleton } from 'components/Skeleton/Skeleton';\nimport { color } from 'style/const/color';\nimport { layout } from 'style/const/layout';\n\nimport { cardWidthPx, cardHeightPx } from '../ListItem/CatalogListItem';\nimport { cardGapPx } from '../List/CatalogList';\n\nconst columnCount = Math.floor((layout.widthPx + cardGapPx) / (cardWidthPx + cardGapPx)) + 1;\n\nconst getWidthByCount = (count: number) => cardWidthPx * count + cardGapPx * (count - 1);\n\nconst skeletonWidthPx = getWidthByCount(columnCount);\n\nconst skeletonPaddingXPx = (layout.widthPx - getWidthByCount(columnCount - 1)) / 2;\nconst skeletonPaddingYPx = (layout.contentHeightPx - cardHeightPx) / 2;\n\nconst backgroundColor = color.background.surface;\nconst foregroundColor = color.button.secondary1;\n\nconst StyledRoot = styled.div`\n    box-sizing: border-box;\n    height: ${layout.contentHeightPx}px;\n    padding-left: ${skeletonPaddingXPx}px;\n    padding-top: ${skeletonPaddingYPx}px;\n`;\n\nexport const CatalogSkeleton: React.FC = () => (\n    <StyledRoot>\n        <Skeleton\n            width={skeletonWidthPx}\n            height={cardHeightPx}\n            backgroundColor={backgroundColor}\n            foregroundColor={foregroundColor}\n            itemWidth={cardWidthPx}\n            itemHeight={cardHeightPx}\n            borderRadius={40}\n            rowCount={1}\n            columnCount={columnCount}\n            paddingBetweenRows={cardGapPx}\n            paddingBetweenColumns={cardGapPx}\n            speed={2}\n        />\n    </StyledRoot>\n);\n","import React from 'react';\nimport { useSelector } from 'hooks/useSelector';\n\nimport { CatalogList } from './List/CatalogList';\nimport { CatalogSkeleton } from './Skeleton/CatalogSkeleton';\n\nexport const Catalog: React.FC = () => {\n    const order = useSelector(({ catalogPage }) => catalogPage.order);\n\n    return order.length ? <CatalogList /> : <CatalogSkeleton />;\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useFocusOnMount } from 'hooks/useFocusOnMount';\nimport { color } from 'style/const/color';\nimport { focusBorderMixin } from 'style/mixin/focus';\nimport { BodyText2 } from 'components/Text/Body';\n\ntype ButtonViews = 'primary' | 'secondary';\n\nconst buttonViewBackgroundMap: Record<ButtonViews, string> = {\n    primary: color.button.primary,\n    secondary: color.button.secondary1,\n};\n\nconst buttonBorderRadiusPx = 24;\n\ninterface StyledButtonProps {\n    view: ButtonViews;\n}\nconst StyledButton = styled(BodyText2)<StyledButtonProps>`\n    position: relative;\n\n    padding: 20px 40px;\n    border-radius: ${buttonBorderRadiusPx}px;\n    border: none;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    transition: background-color 0.3s ease-in-out;\n\n    background-color: ${({ view }) => buttonViewBackgroundMap[view]};\n    color: ${color.text.primary};\n\n    ${focusBorderMixin({ borderRadius: buttonBorderRadiusPx })}\n\n    &[disabled] {\n        opacity: 0.5;\n    }\n`;\n\nexport interface ButtonProps {\n    className?: string;\n    shouldFocusOnMount?: boolean;\n    forwardRef?: React.RefObject<HTMLButtonElement>;\n    view: ButtonViews;\n    disabled?: boolean;\n    onClick?: (event: React.SyntheticEvent<HTMLButtonElement>) => void;\n    onFocus?: (event: React.FocusEvent<HTMLButtonElement>) => void;\n}\n\nexport const Button: React.FC<ButtonProps> = ({ shouldFocusOnMount, forwardRef, ...props }) => {\n    const mountFocusRef = useFocusOnMount<HTMLButtonElement>();\n    const ref = forwardRef || (shouldFocusOnMount ? mountFocusRef : null);\n\n    return <StyledButton as=\"button\" type=\"button\" ref={ref} {...props} />;\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { color } from 'style/const/color';\n\nimport shadowImage from './shadow.svg';\n\nconst StyledPin = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nconst badgeHeightPx = 86;\n\nconst StyledBody = styled.div`\n    position: relative;\n\n    height: ${badgeHeightPx}px;\n    min-width: ${badgeHeightPx}px;\n    padding: 10px 20px;\n    border-radius: ${badgeHeightPx / 2}px;\n    box-sizing: border-box;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    text-align: center;\n\n    background: ${color.button.critical};\n`;\n\nconst kernelWidthPx = 4;\nconst kernelBorderRadiusPx = kernelWidthPx / 2;\n\nconst StyledKernel = styled.div`\n    height: 34px;\n    width: ${kernelWidthPx}px;\n\n    border-bottom-left-radius: ${kernelBorderRadiusPx}px;\n    border-bottom-right-radius: ${kernelBorderRadiusPx}px;\n\n    background: ${color.button.critical};\n`;\n\nconst StyledShadow = styled.div`\n    margin-top: -8px;\n\n    width: 86px;\n    height: 18px;\n\n    background-image: url('${shadowImage}');\n`;\n\nexport const Pin: React.FC = ({ children }) => {\n    return (\n        <StyledPin>\n            <StyledBody>{children}</StyledBody>\n            <StyledKernel />\n            <StyledShadow />\n        </StyledPin>\n    );\n};\n","import styled from 'styled-components';\nimport { font } from 'style/const/font';\n\nexport const ParagraphText1 = styled.div`\n    font-size: 32px;\n    line-height: 44px;\n    letter-spacing: -0.019em;\n    font-weight: ${font.weight.regular};\n`;\n\nexport const ParagraphText2 = styled.div`\n    font-size: 32px;\n    line-height: 44px;\n    letter-spacing: -0.019em;\n    font-weight: ${font.weight.semibold};\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { push } from 'connected-react-router';\nimport { useDispatch } from 'hooks/useDispatch';\nimport { useSelector } from 'hooks/useSelector';\nimport { useThrottledFn } from 'hooks/useThrottledFn';\nimport { ROUTES } from 'store/constants/router';\nimport { makePurchaseAction } from 'store/actions/server';\nimport { Button } from 'components/Button/Button';\nimport { Pin } from 'components/Pin/Pin';\nimport { ParagraphText2, ParagraphText1 } from 'components/Text/Paragraph';\nimport { CaptionText } from 'components/Text/Caption';\nimport { HeadlineText2 } from 'components/Text/Headline';\nimport { BodyText1 } from 'components/Text/Body';\nimport { color } from 'style/const/color';\n\nconst StyledCartInfo = styled.div`\n    position: relative;\n\n    width: 744px;\n    padding-top: 48px;\n    box-sizing: border-box;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nconst StyledTime = styled(ParagraphText2)`\n    color: ${color.text.primary};\n`;\n\nconst StyledUnit = styled(CaptionText)`\n    margin-top: -10px;\n\n    color: ${color.text.primary};\n`;\n\nconst StyledAddress = styled(HeadlineText2)`\n    margin-top: 48px;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    -webkit-line-clamp: 2;\n\n    color: ${color.text.primary};\n`;\n\nconst StyledPersonal = styled.div`\n    margin-top: 8px;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nconst StyledPersonalLocation = styled(BodyText1)`\n    -webkit-line-clamp: 2;\n\n    color: ${color.text.primary};\n`;\n\nconst StyledPersonalPhoneNumber = styled(HeadlineText2)`\n    margin-top: 60px;\n\n    color: ${color.text.primary};\n`;\n\nconst StyledPersonalName = styled(BodyText1)`\n    margin-top: 8px;\n\n    color: ${color.text.primary};\n`;\n\nconst StyledAskPersonal = styled(ParagraphText1)`\n    margin-top: 14px;\n\n    text-align: center;\n\n    color: ${color.text.secondary};\n`;\n\nconst CartInfoButton = styled(Button)`\n    margin-top: 60px;\n\n    &[disabled] {\n        opacity: 0.3;\n    }\n`;\n\nconst throttleTimeoutMs = 200;\n\nexport const CartInfo: React.FC = () => {\n    const dispatch = useDispatch();\n    const { address, customerName } = useSelector(({ userData }) => userData);\n    const {\n        deliveryTime,\n        isMakePurchaseButtonDisabled,\n        makePurchaseButtonView,\n        hasRequiredData,\n        phoneNumber,\n        personalAddress,\n    } = useSelector(({ cartPage }) => cartPage);\n    const handlePurchaseClick = useThrottledFn(() => dispatch(makePurchaseAction()), throttleTimeoutMs, undefined, [\n        dispatch,\n    ]);\n\n    const handleSetAddressClick = useThrottledFn(\n        () => dispatch(push(ROUTES.ADDRESS_FULL_ALL)),\n        throttleTimeoutMs,\n        undefined,\n        [dispatch],\n    );\n\n    return (\n        <StyledCartInfo>\n            <Pin>\n                <StyledTime>{deliveryTime}</StyledTime>\n                <StyledUnit>мин</StyledUnit>\n            </Pin>\n            <StyledAddress>{address}</StyledAddress>\n            {hasRequiredData ? (\n                <>\n                    <StyledPersonal>\n                        <StyledPersonalLocation>{personalAddress}</StyledPersonalLocation>\n                        <StyledPersonalPhoneNumber>{phoneNumber}</StyledPersonalPhoneNumber>\n                        <StyledPersonalName>{customerName}</StyledPersonalName>\n                    </StyledPersonal>\n                    <CartInfoButton\n                        view={makePurchaseButtonView}\n                        disabled={isMakePurchaseButtonDisabled}\n                        shouldFocusOnMount\n                        onClick={handlePurchaseClick}\n                    >\n                        Перейти к оплате\n                    </CartInfoButton>\n                </>\n            ) : (\n                <>\n                    <StyledAskPersonal>\n                        Чтобы сделать заказ, укажите квартиру, подъезд и другую дополнительную информацию\n                    </StyledAskPersonal>\n                    <CartInfoButton view=\"primary\" shouldFocusOnMount onClick={handleSetAddressClick}>\n                        Дополнить адрес\n                    </CartInfoButton>\n                </>\n            )}\n        </StyledCartInfo>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { color } from 'style/const/color';\nimport { FootnoteText1 } from 'components/Text/Footnote';\n\nexport type LabelType = 'sold-out' | 'few-left' | 'sale' | 'price-changed' | 'you-want';\n\nconst contentMap: Record<LabelType, (s?: string) => string> = {\n    'sold-out': () => 'Раскупили',\n    'few-left': () => 'Осталось мало',\n    'price-changed': () => 'Изменилась цена',\n    sale: (value) => `Скидка ${value}%`,\n    'you-want': (value) => `Вы хотели ${value} товара`,\n};\n\nconst textColorMap: Record<LabelType, string> = {\n    'sold-out': color.text.warning,\n    'few-left': color.text.warning,\n    'price-changed': color.text.warning,\n    sale: color.text.active,\n    'you-want': color.text.warning,\n};\n\ninterface StyledLabelProps {\n    type: LabelType;\n}\nconst StyledLabel = styled(FootnoteText1)<StyledLabelProps>`\n    color: ${({ type }) => textColorMap[type]};\n`;\n\nexport interface LabelProps extends React.HTMLAttributes<HTMLDivElement> {\n    className?: string;\n    type: LabelType;\n    content?: string;\n}\nexport const Label: React.FC<LabelProps> = ({ type, content, className }) => {\n    const contentProvider = contentMap[type];\n\n    return (\n        <StyledLabel className={className} type={type}>\n            {contentProvider(content)}\n        </StyledLabel>\n    );\n};\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { useSelector } from 'hooks/useSelector';\nimport { useDispatch } from 'hooks/useDispatch';\nimport { useThrottledFn } from 'hooks/useThrottledFn';\nimport { removeItemAction, addItemAction } from 'store/actions/native';\nimport { cartSelectItemAction } from 'store/actions/cartPage';\nimport { Button } from 'components/Button/Button';\nimport { IndexBadge } from 'components/IndexBadge/IndexBadge';\nimport { Label, LabelProps } from 'components/Label/Label';\nimport { BodyText1, BodyText2 } from 'components/Text/Body';\nimport { FootnoteText1 } from 'components/Text/Footnote';\nimport { icon } from 'style/const/icon';\nimport { color } from 'style/const/color';\nimport { transition } from 'style/const/transition';\nimport { focusBorderMixin } from 'style/mixin/focus';\nimport addIcon from 'assets/icons/add.svg';\nimport removeIcon from 'assets/icons/remove.svg';\n\nconst thumbSizePx = 120;\n\ninterface StyledThumbProps {\n    imageUrl: string;\n}\n\nconst StyledThumb = styled.div<StyledThumbProps>`\n    position: relative;\n\n    margin-right: 32px;\n\n    height: ${thumbSizePx}px;\n    width: ${thumbSizePx}px;\n\n    border-radius: 24px;\n\n    background-image: url('${({ imageUrl }) => imageUrl}');\n    background-size: contain;\n    background-position: center;\n    background-repeat: no-repeat;\n`;\n\nconst StyledInfo = styled.div`\n    margin-right: 48px;\n\n    width: 384px;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`;\n\ninterface StyledNameProps {\n    isOneLine?: boolean;\n}\nconst StyledName = styled(BodyText1)<StyledNameProps>`\n    overflow: hidden;\n\n    ${({ isOneLine }) =>\n        isOneLine\n            ? css`\n                  white-space: nowrap;\n                  text-overflow: ellipsis;\n              `\n            : css`\n                  display: -webkit-box;\n                  -webkit-box-orient: vertical;\n                  -webkit-line-clamp: 2;\n              `}\n\n    color: ${color.text.primary};\n`;\n\nconst StyledPriceContainer = styled.div`\n    display: flex;\n`;\n\nconst StyledPrice = styled(FootnoteText1)`\n    margin-top: 4px;\n\n    color: ${color.text.secondary};\n`;\n\nconst StyledOldPrice = styled(FootnoteText1)`\n    position: relative;\n    opacity: 0.24;\n    color: ${color.text.primary};\n    margin-top: 4px;\n    margin-left: 8px;\n\n    &::before {\n        content: '';\n        position: absolute;\n        top: calc(50% - 2px);\n        border-top: 4px solid ${color.text.primary};\n        left: 2px;\n        right: 2px;\n    }\n`;\n\nconst StyledLabel = styled(Label)`\n    margin-top: 4px;\n`;\n\nconst StyledSelector = styled.div`\n    box-sizing: border-box;\n    padding: 8px;\n    width: 216px;\n\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\n\ninterface StyledSelectorValue {\n    isWarning?: boolean;\n}\nconst StyledSelectorValue = styled(BodyText2)<StyledSelectorValue>`\n    color: ${({ isWarning }) => (isWarning ? color.text.warning : color.text.primary)};\n`;\n\ntype SelectorButtonIconType = 'less' | 'more' | 'remove';\n\nconst iconTypeIconMap: Record<SelectorButtonIconType, string> = {\n    less: removeIcon,\n    more: addIcon,\n    remove: addIcon,\n};\n\nconst selectorButtonSizePx = 64;\nconst selectorBorderRadiusPx = selectorButtonSizePx / 2;\nconst selectorIconSizePx = icon.s.sizePx;\n\ninterface StyledSelectorButtonProps {\n    iconType: SelectorButtonIconType;\n}\nconst StyledSelectorButton = styled.button<StyledSelectorButtonProps>`\n    position: relative;\n\n    height: ${selectorButtonSizePx}px;\n    width: ${selectorButtonSizePx}px;\n    border: none;\n    border-radius: ${selectorBorderRadiusPx}px;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background: ${color.button.secondary1};\n\n    will-change: background-color, transform, opacity;\n    transition: ${transition.default};\n\n    &::before {\n        content: '';\n\n        height: ${selectorIconSizePx}px;\n        width: ${selectorIconSizePx}px;\n\n        background-repeat: no-repeat;\n        background-size: contain;\n        background-position: center;\n    }\n\n    &[disabled] {\n        opacity: 0.3;\n    }\n\n    ${focusBorderMixin({ borderRadius: selectorBorderRadiusPx })}\n\n    &::before {\n        background-image: url('${({ iconType }) => iconTypeIconMap[iconType]}');\n    }\n\n    ${({ iconType }) =>\n        iconType === 'remove' &&\n        css`\n            transform: rotate(45deg);\n            background: ${color.button.critical};\n        `}\n`;\n\ninterface StyledCartListItemProps {\n    disabled?: boolean;\n}\n\nconst StyledCartListItem = styled.div<StyledCartListItemProps>`\n    position: relative;\n\n    box-sizing: border-box;\n    height: 152px;\n    width: 832px;\n    padding: 16px;\n\n    display: flex;\n    align-items: center;\n\n    ${({ disabled }) =>\n        disabled &&\n        css`\n            ${StyledThumb},\n            ${StyledName},\n            ${StyledPrice} {\n                opacity: .24;\n            }\n\n            ${StyledPrice} {\n                color: ${color.text.primary};\n            }\n        `}\n`;\n\nconst StyledIndexBadge = styled(IndexBadge)`\n    top: 4px;\n    right: 4px;\n`;\n\nexport interface CartListItemProps {\n    id: string;\n    index: number;\n}\n\nexport interface CartListItemViewProps {\n    imageUrl: string;\n    name: string;\n    price: number;\n    oldPrice?: number;\n    count: number;\n    isWantMoreThanHave?: boolean;\n    disabled?: boolean;\n    label?: LabelProps;\n    isMoreButtonDisabled?: boolean;\n}\n\nconst throttleTimeoutMs = 100;\n\nexport const CartListItem: React.FC<CartListItemProps> = ({ index, id }) => {\n    const {\n        imageUrl,\n        name,\n        price,\n        oldPrice,\n        label,\n        count,\n        isWantMoreThanHave,\n        disabled,\n        isMoreButtonDisabled,\n    } = useSelector(({ cartPage: { itemsMap } }) => itemsMap[id]);\n    const dispatch = useDispatch();\n\n    const handleLessClick = useThrottledFn(\n        () => {\n            dispatch(\n                removeItemAction({\n                    item: id,\n                    count: '1',\n                    shouldRemoveMention: !count,\n                }),\n            );\n        },\n        throttleTimeoutMs,\n        undefined,\n        [dispatch, id, count],\n    );\n\n    const handleMoreClick = useThrottledFn(\n        () => {\n            dispatch(\n                addItemAction({\n                    item: id,\n                    count: '1',\n                }),\n            );\n        },\n        throttleTimeoutMs,\n        undefined,\n        [dispatch, id],\n    );\n\n    const handleRemoveClick = useThrottledFn(\n        () => {\n            dispatch(\n                removeItemAction({\n                    item: id,\n                    count: String(Infinity),\n                    shouldRemoveMention: true,\n                }),\n            );\n        },\n        throttleTimeoutMs,\n        undefined,\n        [dispatch, id, count],\n    );\n\n    const handleFocus = React.useCallback(() => dispatch(cartSelectItemAction(id)), [dispatch, id]);\n\n    return (\n        <StyledCartListItem disabled={disabled}>\n            <StyledThumb imageUrl={imageUrl}>\n                <StyledIndexBadge size=\"s\" index={index} />\n            </StyledThumb>\n            <StyledInfo>\n                <StyledName isOneLine={disabled || Boolean(label)}>{name}</StyledName>\n                <StyledPriceContainer>\n                    <StyledPrice>{price} ₽</StyledPrice>\n                    {oldPrice ? <StyledOldPrice>{oldPrice} ₽</StyledOldPrice> : null}\n                </StyledPriceContainer>\n                {label ? <StyledLabel {...label} /> : null}\n            </StyledInfo>\n            {disabled ? (\n                <Button view=\"secondary\" onFocus={handleFocus} onClick={handleRemoveClick}>\n                    Удалить\n                </Button>\n            ) : (\n                <StyledSelector>\n                    <StyledSelectorButton\n                        type=\"button\"\n                        aria-label=\"less\"\n                        iconType={count ? 'less' : 'remove'}\n                        onFocus={handleFocus}\n                        onClick={handleLessClick}\n                    />\n                    <StyledSelectorValue isWarning={isWantMoreThanHave}>{count}</StyledSelectorValue>\n                    <StyledSelectorButton\n                        type=\"button\"\n                        aria-label=\"more\"\n                        iconType=\"more\"\n                        disabled={isMoreButtonDisabled}\n                        onFocus={handleFocus}\n                        onClick={handleMoreClick}\n                    />\n                </StyledSelector>\n            )}\n        </StyledCartListItem>\n    );\n};\n","import { createAction } from 'tools/create-action';\n\nexport const cartSelectItemAction = (payload: string) => createAction('cart/SELECT_ITEM', payload);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'hooks/useSelector';\nimport { HeadlineText2 } from 'components/Text/Headline';\nimport { BodyText1 } from 'components/Text/Body';\nimport { color } from 'style/const/color';\n\nimport { CartListItem } from '../ListItem/CartListItem';\n\nconst preventScroll = (e: React.UIEvent<HTMLDivElement>) => {\n    e.currentTarget.scrollTop = 0;\n};\n\nconst StyledCartList = styled.div`\n    position: relative;\n\n    height: 792px;\n    width: 832px;\n    box-sizing: border-box;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`;\n\ninterface StyledContainerProps {\n    topGradientVisible?: boolean;\n    bottomGradientVisible?: boolean;\n}\nconst StyledContainer = styled.div<StyledContainerProps>`\n    position: relative;\n\n    margin-bottom: 56px;\n\n    max-height: 600px;\n    overflow: hidden;\n\n    --spatial-navigation-contain: contain;\n`;\n\nconst StyledWrapper = styled.div`\n    overflow-x: hidden;\n\n    will-change: transform;\n    transition: transform 0.5s ease-in-out;\n`;\n\nconst StyledTotalPrice = styled(HeadlineText2)`\n    padding-left: 16px;\n\n    color: ${color.text.primary};\n`;\n\nconst StyledMinimalPrice = styled(BodyText1)`\n    margin-top: 8px;\n\n    padding-left: 16px;\n\n    color: ${color.text.warning};\n`;\n\n// const gradientSizePx = 160;\n\nexport const CartList: React.FC = () => {\n    const { order, totalPrice, toMinimumPrice, wrapperYShift } = useSelector(({ cartPage }) => cartPage);\n\n    const wrapperStyle = React.useMemo(\n        () => ({\n            transform: `translateY(${-1 * wrapperYShift}px)`,\n        }),\n        [wrapperYShift],\n    );\n\n    return (\n        <StyledCartList>\n            {order.length > 0 && (\n                <StyledContainer onScroll={preventScroll}>\n                    <StyledWrapper style={wrapperStyle}>\n                        {order.map((itemId, index) => (\n                            <CartListItem key={itemId} index={index + 1} id={itemId} />\n                        ))}\n                    </StyledWrapper>\n                </StyledContainer>\n            )}\n            <StyledTotalPrice>Сумма заказа {totalPrice} ₽</StyledTotalPrice>\n            {Boolean(toMinimumPrice) && (\n                <StyledMinimalPrice>До минимального заказа еще {toMinimumPrice} ₽</StyledMinimalPrice>\n            )}\n        </StyledCartList>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { CartInfo } from './Info/CartInfo';\nimport { CartList } from './List/CartList';\nimport bgImage from './bg.jpg';\n\nconst StyledContainer = styled.div`\n    position: relative;\n    z-index: 2;\n\n    padding-left: 112px;\n    padding-right: 128px;\n\n    display: flex;\n    justify-content: space-between;\n`;\n\nconst StyledBackground = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 1;\n\n    background-image: url('${bgImage}');\n`;\n\nexport const Cart: React.FC = () => (\n    <>\n        <StyledContainer>\n            <CartList />\n            <CartInfo />\n        </StyledContainer>\n        <StyledBackground />\n    </>\n);\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { useSelector } from 'hooks/useSelector';\nimport { useDispatch } from 'hooks/useDispatch';\nimport { closeAppAction } from 'store/actions/app';\nimport { Button } from 'components/Button/Button';\nimport { BodyText2 } from 'components/Text/Body';\nimport { HeadlineText1 } from 'components/Text/Headline';\nimport { color } from 'style/const/color';\nimport { layout } from 'style/const/layout';\n\nimport figureIcon1 from './figure-1.svg';\nimport figureIcon2 from './figure-2.svg';\nimport figureIcon3 from './figure-3.svg';\nimport figureIcon4 from './figure-4.svg';\nimport figureIcon5 from './figure-5.svg';\nimport figureIcon6 from './figure-6.svg';\nimport figureIcon7 from './figure-7.svg';\nimport figureIcon8 from './figure-8.svg';\nimport figureIcon9 from './figure-9.svg';\n\nconst StatusButton = styled(Button)`\n    margin-top: 64px;\n`;\n\nconst StatusContainer = styled.div`\n    position: relative;\n\n    height: ${layout.contentHeightPx}px;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst StatusOrderNumber = styled(BodyText2)`\n    color: ${color.text.secondary};\n`;\n\nconst StatusOrderTime = styled(HeadlineText1)`\n    margin-top: 16px;\n\n    text-align: center;\n\n    color: ${color.text.primary};\n`;\n\ninterface FigureProps {\n    params: [string, number, number, number];\n}\n\nconst StatusFigure = styled.div<FigureProps>`\n    position: absolute;\n\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: contain;\n\n    ${({ params: [bgUrl, topPx, leftPx, sizePx] }) => css`\n        top: ${topPx}px;\n        left: ${leftPx}px;\n\n        height: ${sizePx}px;\n        width: ${sizePx}px;\n\n        background-image: url('${bgUrl}');\n    `};\n`;\n\nconst figureList: FigureProps['params'][] = [\n    [figureIcon1, 92, 834, 61],\n    [figureIcon2, 0, 482, 61],\n    [figureIcon3, 280, 236, 46],\n    [figureIcon4, 158, 1487, 53],\n    [figureIcon5, 594, 340, 53],\n    [figureIcon6, 500, 652, 60],\n    [figureIcon7, 705, 1044, 40],\n    [figureIcon8, 492, 1268, 40],\n    [figureIcon9, 590, 1604, 90],\n];\n\nexport const Status: React.FC = () => {\n    const dispatch = useDispatch();\n    const { deliveryTime } = useSelector(({ delivery }) => delivery);\n    const { orderId } = useSelector(({ cart }) => cart);\n    const handleButtonClick = React.useCallback(() => {\n        dispatch(closeAppAction());\n    }, [dispatch]);\n\n    return (\n        <StatusContainer>\n            <StatusOrderNumber>Заказ #{orderId} оформлен</StatusOrderNumber>\n            <StatusOrderTime>\n                Спасибо за заказ!\n                <br />\n                Будем у вас через {deliveryTime} минут.\n            </StatusOrderTime>\n            <StatusButton view=\"primary\" shouldFocusOnMount onClick={handleButtonClick}>\n                Очень жду\n            </StatusButton>\n            {figureList.map((params, index) => (\n                <StatusFigure key={index} params={params} />\n            ))}\n        </StatusContainer>\n    );\n};\n","import React from 'react';\nimport { push } from 'connected-react-router';\nimport styled, { css, FlattenSimpleInterpolation } from 'styled-components';\nimport { useDispatch } from 'hooks/useDispatch';\n// import { useInterval } from 'hooks/useInterval';\nimport { closeAppAction } from 'store/actions/app';\nimport { ROUTES } from 'store/constants/router';\nimport { Button } from 'components/Button/Button';\nimport { HeadlineText3 } from 'components/Text/Headline';\nimport { font } from 'style/const/font';\nimport { color } from 'style/const/color';\nimport { transition } from 'style/const/transition';\n\nimport popcornBites from './popcorn-bites.png';\nimport popcorn1 from './popcorn-1.png';\nimport popcorn2 from './popcorn-2.png';\nimport popcorn3 from './popcorn-3.png';\nimport popcorn4 from './popcorn-4.png';\n\nconst TextContainer = styled.div`\n    position: absolute;\n    top: 80px;\n    left: 128px;\n    z-index: 2;\n\n    width: 958px;\n`;\n\nconst Title = styled.div`\n    font-weight: ${font.weight.extrabold};\n    font-size: 80px;\n    line-height: 88px;\n    letter-spacing: -0.0375em;\n\n    color: ${color.text.primary};\n`;\n\nconst Subtitle = styled(HeadlineText3)`\n    margin-top: 32px;\n\n    color: ${color.text.secondary};\n`;\n\nconst buttonsMarginTopPx = 64;\n\nconst ButtonContainer = styled.div`\n    margin-top: ${buttonsMarginTopPx}px;\n    display: flex;\n`;\n\nconst buttonMarginRightPx = 32;\n\nconst StyledButton = styled(Button)`\n    margin-right: ${buttonMarginRightPx}px;\n`;\n\nconst popcornBitesTopPx = 612;\nconst popcornBitesRightPx = 144;\nconst popcornBitesWidthPx = 614;\nconst popcornBitesHeightPx = 280;\n\nconst PopcornContainer = styled.div`\n    position: fixed;\n    top: 0;\n    right: 0;\n    left: 0;\n    bottom: 0;\n    z-index: 1;\n\n    &::before {\n        content: '';\n\n        position: absolute;\n        top: ${popcornBitesTopPx}px;\n        right: ${popcornBitesRightPx}px;\n        z-index: 2;\n\n        display: block;\n        width: ${popcornBitesWidthPx}px;\n        height: ${popcornBitesHeightPx}px;\n\n        background-image: url('${popcornBites}');\n        background-position: center;\n        background-repeat: no-repeat;\n    }\n`;\n\nconst popcornList: FlattenSimpleInterpolation[] = [\n    css`\n        top: 162px;\n        right: 248px;\n        width: 440px;\n        height: 783px;\n        background-image: url('${popcorn1}');\n    `,\n    css`\n        top: 110px;\n        right: 66px;\n        width: 788px;\n        height: 816px;\n        background-image: url('${popcorn2}');\n    `,\n    css`\n        top: 215px;\n        right: 229px;\n        width: 469px;\n        height: 686px;\n        background-image: url('${popcorn3}');\n    `,\n    css`\n        top: 110px;\n        right: 66px;\n        width: 788px;\n        height: 816px;\n        background-image: url('${popcorn4}');\n    `,\n];\n\ninterface PopcornProps {\n    popcornStyle: FlattenSimpleInterpolation;\n    isVisible: boolean;\n}\n\nconst Popcorn = styled.div<PopcornProps>`\n    position: absolute;\n\n    background-position: center;\n    background-size: contain;\n    background-repeat: no-repeat;\n\n    transition: opacity 1s ${transition.timingFn.default};\n\n    ${({ popcornStyle }) => popcornStyle}\n\n    opacity: ${({ isVisible }) => Number(isVisible)};\n`;\n\n// const timeoutMs = 4000;\n\n// const useIndex = (count: number) => {\n//     const [index, setIndex] = React.useState(0);\n//\n//     useInterval(() => setIndex((index + 1) % count), timeoutMs);\n//\n//     return index;\n// };\n\nexport const Promo: React.FC = () => {\n    const dispatch = useDispatch();\n    // const currentIndex = useIndex(popcornList.length);\n\n    const handleClickSubmitButton = React.useCallback(() => {\n        dispatch(push(ROUTES.ADDRESS_SIMPLE));\n    }, [dispatch]);\n    const handleCloseButtonClick = React.useCallback(() => {\n        dispatch(closeAppAction());\n    }, [dispatch]);\n\n    return (\n        <>\n            <TextContainer>\n                <Title>Доставляем попкорн к просмотру фильмов и сериалов</Title>\n                <Subtitle>Бесплатно в течении 15-30 минут для Москвы и Санкт-Петербурга</Subtitle>\n                <ButtonContainer>\n                    <StyledButton view=\"primary\" shouldFocusOnMount onClick={handleClickSubmitButton}>\n                        Указать адрес\n                    </StyledButton>\n                    <StyledButton onClick={handleCloseButtonClick} view=\"secondary\">\n                        Не сейчас\n                    </StyledButton>\n                </ButtonContainer>\n            </TextContainer>\n            <PopcornContainer>\n                <Popcorn isVisible popcornStyle={popcornList[0]} />\n                {/* {popcornList.map((style, index) => (\n                    <Popcorn key={index} isVisible={index === 0} popcornStyle={style} />\n                ))} */}\n            </PopcornContainer>\n        </>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { replace } from 'connected-react-router';\nimport { useDispatch } from 'hooks/useDispatch';\nimport { useSelector } from 'hooks/useSelector';\nimport { ROUTES } from 'store/constants/router';\nimport { closeAppAction } from 'store/actions/app';\nimport { Pin } from 'components/Pin/Pin';\nimport { HeadlineText1 } from 'components/Text/Headline';\nimport { BodyText1 } from 'components/Text/Body';\nimport { Button } from 'components/Button/Button';\nimport { color } from 'style/const/color';\nimport { layout } from 'style/const/layout';\n\nimport faceIcon from './face.svg';\nimport bgImage from './bg.jpg';\n\nconst containerMarginBottomPx = 100;\n\nconst StyledContainer = styled.div`\n    position: relative;\n    z-index: 1;\n\n    height: ${layout.contentHeightPx - containerMarginBottomPx}px;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    z-index: 3;\n`;\n\nconst faceIconSizePx = 36;\n\nconst StyledFaceIcon = styled.div`\n    height: ${faceIconSizePx}px;\n    width: ${faceIconSizePx}px;\n\n    background-image: url(${faceIcon});\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: contain;\n`;\n\nconst StyledTitle = styled(HeadlineText1)`\n    margin-top: 52px;\n\n    color: ${color.text.primary};\n`;\n\nconst StyledSubtitle = styled(BodyText1)`\n    margin-top: 12px;\n\n    color: ${color.text.primary};\n`;\n\nconst StyledButtonContainer = styled.div`\n    display: flex;\n    justify-content: center;\n`;\n\nconst StyledButton = styled(Button)`\n    margin-top: 64px;\n    margin-left: 40px;\n`;\n\nconst StyledBackground = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 1;\n\n    background-image: url('${bgImage}');\n`;\n\nexport const NoArea: React.FC = () => {\n    const dispatch = useDispatch();\n    const address = useSelector(({ userModel }) => userModel.address);\n    const handleChangeButtonClick = React.useCallback(() => {\n        dispatch(replace(ROUTES.ADDRESS_SIMPLE));\n    }, [dispatch]);\n    const handleCloseButtonClick = React.useCallback(() => {\n        dispatch(closeAppAction());\n    }, [dispatch]);\n\n    return (\n        <>\n            <StyledContainer>\n                <Pin>\n                    <StyledFaceIcon />\n                </Pin>\n                <StyledTitle>{address}</StyledTitle>\n                <StyledSubtitle>К сожалению, пока не доставляем по этому адресу</StyledSubtitle>\n                <StyledButtonContainer>\n                    <StyledButton view=\"secondary\" shouldFocusOnMount onClick={handleChangeButtonClick}>\n                        Изменить\n                    </StyledButton>\n                    <StyledButton onClick={handleCloseButtonClick} view=\"secondary\">\n                        В другой раз\n                    </StyledButton>\n                </StyledButtonContainer>\n            </StyledContainer>\n            <StyledBackground />\n        </>\n    );\n};\n","import React from 'react';\n\nexport const useFocusOnChange = <T = HTMLElement>(forwardRef: React.RefObject<T> | undefined, hash: unknown) => {\n    const ref = React.useRef<T>(null);\n\n    const onChangeFocusRef = forwardRef || ref;\n\n    React.useEffect(() => {\n        if (onChangeFocusRef.current instanceof HTMLElement) {\n            onChangeFocusRef.current.focus();\n        }\n    }, [onChangeFocusRef, hash]);\n\n    return onChangeFocusRef;\n};\n","import { DGSuggestItem, DGSuggestResponse } from 'types/2gis-maps';\nimport { makeRequest } from 'tools/request';\n\nconst DG_KEY = 'ruvqwj0703';\n\ninterface GetSuggestsParams {\n    q: string;\n    latitude: string;\n    longitude: string;\n}\nexport const getSuggests = ({ q, longitude, latitude }: GetSuggestsParams): Promise<DGSuggestItem[]> => {\n    if (q === '') {\n        return Promise.resolve([] as DGSuggestItem[]);\n    }\n\n    return Promise.resolve()\n        .then(() => {\n            const params = {\n                q,\n                key: DG_KEY,\n                local: 'ru_RU',\n                fields: ['items.address', 'items.point'].join(','),\n                type: ['building', 'street'].join(','),\n                // высчитываем левую верхнюю и правую нижнюю точки так, чтобы\n                // радиус вокруг исходной точки был примерно 40км\n                viewpoint1: [Number(longitude) - 0.4, Number(latitude) + 0.4].join(','),\n                viewpoint2: [Number(longitude) + 0.4, Number(latitude) - 0.4].join(','),\n                // eslint-disable-next-line @typescript-eslint/camelcase\n                is_viewport_change: false,\n            };\n\n            return makeRequest('https://catalog.api.2gis.ru/3.0/suggests', params);\n        })\n        .then((response) => {\n            if (response.meta.code !== 200) {\n                throw response.meta.error;\n            }\n\n            return response;\n        })\n        .then(({ result }: DGSuggestResponse) => {\n            if (!result) {\n                return [];\n            }\n\n            return result.items;\n        });\n};\n","export const makeRequest = (url: string, params: Record<string, string | number | boolean>) => {\n    const paramsString = Object.keys(params)\n        .reduce<string[]>((acc, key) => {\n            acc.push(`${key}=${params[key as keyof typeof params]}`);\n\n            return acc;\n        }, [])\n        .join('&');\n\n    url = `${url}?${paramsString}`;\n\n    return fetch(url).then((response: Response) => {\n        if (!response.ok) {\n            throw response.statusText;\n        }\n\n        return response.json();\n    });\n};\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { useFocusOnMount } from 'hooks/useFocusOnMount';\nimport { font } from 'style/const/font';\nimport { transition } from 'style/const/transition';\n\ninterface StyledTitleProps {\n    isMinified?: boolean;\n    isFocused?: boolean;\n}\nconst StyledTitle = styled.div<StyledTitleProps>`\n    position: absolute;\n    left: 32px;\n    top: 36px;\n\n    font-weight: 500;\n    font-size: 32px;\n    line-height: 40px;\n\n    color: ${({ isFocused }) => (isFocused ? '#2ac673' : 'rgba(255, 255, 255, 0.28)')};\n    transition: font-size 0.2s ease-in-out, top 0.2s ease-in-out, color 0.2s ease-in-out;\n\n    ${({ isMinified }) =>\n        isMinified &&\n        css`\n            top: 12px;\n            font-size: 24px;\n        `};\n`;\n\ninterface StyledInputProps {\n    disabled?: boolean;\n}\nconst StyledInput = styled.input<StyledInputProps>`\n    margin-top: 50px;\n    height: 40px;\n    width: 100%;\n    font-weight: ${font.weight.medium};\n    font-size: 32px;\n    color: ${({ disabled }) => (disabled ? 'rgba(255, 255, 255, 0.28)' : '#fff')};\n    caret-color: #2ac673;\n    line-height: 40px;\n    padding: 0;\n    border: none;\n    background: transparent;\n`;\n\ninterface StyledRootProps {\n    isFocused?: boolean;\n}\nconst StyledRoot = styled.div<StyledRootProps>`\n    position: relative;\n    height: 112px;\n    box-sizing: border-box;\n    padding: 0 32px;\n\n    border-top: 4px solid #1a1a1a;\n    border-left: 4px solid #1a1a1a;\n    border-right: 4px solid #1a1a1a;\n    border-bottom: 4px solid rgba(255, 255, 255, 0.12);\n\n    border-radius: 24px;\n    background-color: #1a1a1a;\n\n    transition: border ${transition.default};\n\n    ${({ isFocused }) =>\n        isFocused &&\n        css`\n            border-width: 4px;\n            border-style: solid;\n            border-color: #2ac673;\n\n            ${StyledTitle} {\n                color: #2ac673;\n\n                transition: color ${transition.default};\n            }\n        `}\n`;\n\ninterface InputProps {\n    title: string;\n    value: string;\n    className?: string;\n    type?: string;\n    disabled?: boolean;\n    onSubmit?: (event: React.SyntheticEvent<HTMLInputElement>) => void;\n    onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    onRootKeyPress?: (event: React.KeyboardEvent<HTMLInputElement>) => void;\n    forwardRef?: React.RefObject<HTMLDivElement>;\n    shouldFocusOnMount?: boolean;\n    shouldFocusInputOnMount?: boolean;\n}\n\nexport const Input: React.FC<InputProps> = ({\n    title,\n    value,\n    className,\n    type = 'text',\n    disabled,\n    onSubmit,\n    onChange,\n    onRootKeyPress,\n    forwardRef,\n    shouldFocusOnMount,\n    shouldFocusInputOnMount,\n}) => {\n    const [isFocused, setFocus] = React.useState(false);\n    const [isUsing, setUsing] = React.useState(false);\n    const inputRef = React.useRef<HTMLInputElement>(null);\n    const onMountRootRef = useFocusOnMount<HTMLDivElement>(forwardRef);\n    const rootRef = shouldFocusOnMount ? onMountRootRef : forwardRef;\n    const handleRootFocus = React.useCallback(() => setFocus(true), [setFocus]);\n    const handleRootBlur = React.useCallback(() => {\n        setFocus(false);\n        setUsing(false);\n    }, [setFocus, setUsing]);\n    const handleRootKeyPress = React.useCallback(\n        (e: React.KeyboardEvent<HTMLInputElement>) => {\n            if (inputRef && inputRef.current) {\n                if (onRootKeyPress) {\n                    onRootKeyPress(e);\n                }\n\n                if (!e.defaultPrevented) {\n                    inputRef.current.focus();\n                    setUsing(true);\n                }\n            }\n        },\n        [onRootKeyPress, setUsing],\n    );\n    const handleInputKeyPress = React.useCallback(\n        (event: React.KeyboardEvent<HTMLInputElement>) => {\n            if (onSubmit && event && event.key === 'Enter') {\n                event.stopPropagation();\n                onSubmit(event);\n            }\n        },\n        [onSubmit],\n    );\n\n    React.useEffect(() => {\n        if (shouldFocusInputOnMount && inputRef && inputRef.current) {\n            inputRef.current.focus();\n            setUsing(true);\n        }\n    }, [shouldFocusInputOnMount, inputRef, setUsing]);\n\n    const isTitleMinified = isUsing || Boolean(value);\n\n    return (\n        <StyledRoot\n            tabIndex={disabled ? -1 : 0}\n            className={className}\n            ref={rootRef}\n            isFocused={isFocused}\n            onFocus={handleRootFocus}\n            onBlur={handleRootBlur}\n            onKeyPress={handleRootKeyPress}\n        >\n            <StyledTitle isMinified={isTitleMinified} isFocused={isFocused}>\n                {title}\n            </StyledTitle>\n            <StyledInput\n                tabIndex={-1}\n                ref={inputRef}\n                type={type}\n                disabled={disabled}\n                onKeyPress={handleInputKeyPress}\n                onChange={onChange}\n                value={value}\n            />\n        </StyledRoot>\n    );\n};\n","import { useFocusOnChange } from 'hooks/useFocusOnChange';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useMediaQuery } from 'beautiful-react-hooks';\nimport { useSelector } from 'hooks/useSelector';\nimport { useDispatch } from 'hooks/useDispatch';\nimport { addressChangeInputValueAction, addressSetSuggestsAction } from 'store/actions/addressSimplePage';\nimport { addressSubmitAction } from 'store/actions/server';\nimport { getSuggests } from 'tools/2gis';\nimport { Input } from 'components/Input/Input';\nimport { Button } from 'components/Button/Button';\n\nimport {\n    AddressSimpleSuggestListItem,\n    SUGGEST_ITEM_HEIGHT,\n    SUGGEST_ITEM_MARGIN,\n} from './SuggestItem/AddressSimpleSuggestItem';\n\nconst StyledContainer = styled.div`\n    display: flex;\n    align-items: start;\n    height: 100%;\n    padding: 160px 360px 0;\n`;\n\nconst StyledInputContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    flex: 1 0;\n`;\n\nconst StyledButton = styled(Button)`\n    margin-left: 32px;\n    padding: 36px 44px;\n`;\n\ninterface StyledSuggestListProps {\n    hidden?: boolean;\n}\nconst StyledSuggestList = styled.div<StyledSuggestListProps>`\n    height: ${({ hidden }) => (hidden ? 0 : (SUGGEST_ITEM_HEIGHT + SUGGEST_ITEM_MARGIN) * 3)}px;\n    overflow: hidden;\n    transition: height 0.5s ease-in-out;\n`;\n\ninterface StyledSuggestListContainerProps {\n    yShift: number;\n}\nconst StyledSuggestListContainer = styled.div<StyledSuggestListContainerProps>`\n    display: flex;\n    flex-direction: column;\n\n    transition: transform 0.5s ease-in-out;\n    transform: translateY(-${({ yShift }) => yShift}px);\n`;\n\nconst preventScroll = (event: React.SyntheticEvent<HTMLDivElement>) => {\n    event.currentTarget.scrollTop = 0;\n};\n\nconst viewportHeightWithOpenedKeyboardPx = 659;\n\nexport const AddressSimple: React.FC = () => {\n    const dispatch = useDispatch();\n    const isKeyboardExpanded = useMediaQuery(`(max-height: ${viewportHeightWithOpenedKeyboardPx}px)`);\n    const {\n        inputValue,\n        suggests,\n        suggestListContainerYShift,\n        isSubmitButtonDisabled,\n        submitButtonFocusHash,\n        inputFocusHash,\n    } = useSelector(({ addressSimplePage }) => addressSimplePage);\n    const submitButtonRef = useFocusOnChange<HTMLButtonElement>(undefined, submitButtonFocusHash);\n    const inputRootRef = useFocusOnChange<HTMLDivElement>(undefined, inputFocusHash);\n    const latitude = useSelector(({ userData }) => userData.latitude);\n    const longitude = useSelector(({ userData }) => userData.longitude);\n\n    const memoizedOnInputChange = React.useCallback<(e: React.ChangeEvent<HTMLInputElement>) => void>(\n        (event) => {\n            dispatch(addressChangeInputValueAction(event.currentTarget.value));\n        },\n        [dispatch],\n    );\n    const memoizedOnClickButton = React.useCallback(() => {\n        dispatch(addressSubmitAction());\n    }, [dispatch]);\n\n    React.useEffect(() => {\n        getSuggests({ q: inputValue, latitude, longitude })\n            .then((items) => {\n                dispatch(addressSetSuggestsAction(items));\n            })\n            .catch(() => {\n                dispatch(addressSetSuggestsAction([]));\n            });\n    }, [dispatch, inputValue, latitude, longitude]);\n\n    return (\n        <StyledContainer>\n            <StyledInputContainer>\n                <Input\n                    forwardRef={inputRootRef}\n                    shouldFocusOnMount\n                    value={inputValue}\n                    title=\"Улица и дом\"\n                    onChange={memoizedOnInputChange}\n                />\n                <StyledSuggestList hidden={isKeyboardExpanded} onScroll={preventScroll}>\n                    <StyledSuggestListContainer yShift={suggestListContainerYShift}>\n                        {suggests.map((item, index) => (\n                            <AddressSimpleSuggestListItem key={item.id} index={index} />\n                        ))}\n                    </StyledSuggestListContainer>\n                </StyledSuggestList>\n            </StyledInputContainer>\n            <StyledButton\n                view=\"primary\"\n                forwardRef={submitButtonRef}\n                disabled={isSubmitButtonDisabled}\n                onClick={memoizedOnClickButton}\n            >\n                Сохранить\n            </StyledButton>\n        </StyledContainer>\n    );\n};\n","// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport function noop() {}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { push } from 'connected-react-router';\nimport { useDispatch } from 'hooks/useDispatch';\nimport { useSelector } from 'hooks/useSelector';\nimport { ROUTES } from 'store/constants/router';\nimport { addressFullSubmitAction } from 'store/actions/server';\nimport { noop } from 'tools/noop';\nimport { Input } from 'components/Input/Input';\nimport { Button } from 'components/Button/Button';\n\nconst StyledFirstRow = styled.div`\n    grid-area: first-row;\n    display: grid;\n    grid-column-gap: 32px;\n    grid-template-columns: 1.4fr 1fr;\n    color: #fff;\n`;\n\nconst StyledSecondRow = styled.div`\n    grid-area: second-row;\n    display: grid;\n    grid-column-gap: 32px;\n    grid-template-columns: 1fr 1fr 1fr;\n    color: #fff;\n`;\n\nconst StyledThirdRow = styled.div`\n    grid-area: third-row;\n`;\n\nconst SubmitButton = styled(Button)`\n    flex-grow: 0;\n    padding: 36px 44px;\n`;\n\nconst StyledRoot = styled.div`\n    display: grid;\n    padding: 148px 130px 0;\n    box-sizing: border-box;\n    grid-row-gap: 80px;\n    grid-column-gap: 32px;\n    grid-template-areas: 'first-row' 'second-row' 'third-row';\n\n    will-change: transform;\n`;\n\nexport const AddressFullAll: React.FC = () => {\n    const dispatch = useDispatch();\n    const {\n        addressInputValue,\n        phoneNumberInputValue,\n        apartmentInputValue,\n        entranceInputValue,\n        floorInputValue,\n        isSubmitButtonDisabled,\n        nextFocus,\n    } = useSelector(({ addressFullPage }) => addressFullPage);\n    const handleSubmitClick = React.useCallback(() => {\n        dispatch(addressFullSubmitAction());\n    }, [dispatch]);\n\n    return (\n        <StyledRoot>\n            <StyledFirstRow>\n                <Input\n                    title=\"Улица и дом\"\n                    disabled\n                    onChange={noop} // реакт запрещает прокидывать в инпут значение без обработчика изменений\n                    onRootKeyPress={() => dispatch(push(ROUTES.ADDRESS_SIMPLE))}\n                    value={addressInputValue}\n                />\n                <Input\n                    title=\"Номер телефона\"\n                    shouldFocusOnMount={nextFocus === ROUTES.ADDRESS_FULL_PHONE}\n                    onChange={noop} // реакт запрещает прокидывать в инпут значение без обработчика изменений\n                    onRootKeyPress={() => dispatch(push(ROUTES.ADDRESS_FULL_PHONE))}\n                    value={phoneNumberInputValue}\n                />\n            </StyledFirstRow>\n            <StyledSecondRow>\n                <Input\n                    title=\"Квартира\"\n                    shouldFocusOnMount={nextFocus === ROUTES.ADDRESS_FULL_APARTMENT}\n                    onChange={noop} // реакт запрещает прокидывать в инпут значение без обработчика изменений\n                    onRootKeyPress={() => dispatch(push(ROUTES.ADDRESS_FULL_APARTMENT))}\n                    value={apartmentInputValue}\n                />\n                <Input\n                    title=\"Подъезд\"\n                    shouldFocusOnMount={nextFocus === ROUTES.ADDRESS_FULL_ENTRANCE}\n                    onChange={noop} // реакт запрещает прокидывать в инпут значение без обработчика изменений\n                    onRootKeyPress={() => dispatch(push(ROUTES.ADDRESS_FULL_ENTRANCE))}\n                    value={entranceInputValue}\n                />\n                <Input\n                    title=\"Этаж\"\n                    shouldFocusOnMount={nextFocus === ROUTES.ADDRESS_FULL_FLOOR}\n                    onChange={noop} // реакт запрещает прокидывать в инпут значение без обработчика изменений\n                    onRootKeyPress={() => dispatch(push(ROUTES.ADDRESS_FULL_FLOOR))}\n                    value={floorInputValue}\n                />\n            </StyledSecondRow>\n            <StyledThirdRow>\n                <SubmitButton\n                    view=\"primary\"\n                    shouldFocusOnMount={nextFocus === ROUTES.ADDRESS_FULL_ALL}\n                    disabled={isSubmitButtonDisabled}\n                    onClick={handleSubmitClick}\n                >\n                    Сохранить\n                </SubmitButton>\n            </StyledThirdRow>\n        </StyledRoot>\n    );\n};\n","import React from 'react';\nimport { addressFullValidationOkThunk } from 'store/thunks/addressFullPage';\nimport styled from 'styled-components';\nimport { useDispatch } from 'hooks/useDispatch';\nimport { useSelector } from 'hooks/useSelector';\nimport { addressFullPhoneNumberInputChangeAction } from 'store/actions/addressFullPage';\nimport { Input } from 'components/Input/Input';\n\nconst StyledInput = styled(Input)`\n    margin: 80px auto 0;\n    width: 900px;\n`;\n\nexport const AddressFullPhone = () => {\n    const dispatch = useDispatch();\n    const inputValue = useSelector(({ addressFullPage }) => addressFullPage.phoneNumberInputValue);\n    const handleInputChange = React.useCallback(\n        ({ nativeEvent }: React.ChangeEvent<HTMLInputElement>) => {\n            // без этого тайпгварда TS не хочет показывать правильные поля\n            if (nativeEvent instanceof InputEvent) {\n                const { inputType, data } = nativeEvent;\n\n                dispatch(addressFullPhoneNumberInputChangeAction({ inputType, data }));\n            }\n        },\n        [dispatch],\n    );\n    const handleInputSubmit = React.useCallback(() => {\n        dispatch(addressFullValidationOkThunk());\n    }, [dispatch]);\n\n    return (\n        <StyledInput\n            title=\"Номер телефона\"\n            value={inputValue}\n            shouldFocusInputOnMount\n            onChange={handleInputChange}\n            onSubmit={handleInputSubmit}\n        />\n    );\n};\n","import { createAction } from 'tools/create-action';\n\ninterface AddressFullPhoneNumberInputChangePayload {\n    inputType: InputEvent['inputType'];\n    data: InputEvent['data'];\n}\nexport const addressFullPhoneNumberInputChangeAction = (payload: AddressFullPhoneNumberInputChangePayload) =>\n    createAction('addressFull/PHONE_NUMBER_INPUT_CHANGE', payload);\n\nexport const addressFullApartmentInputChangeAction = (payload: string) =>\n    createAction('addressFull/APARTMENT_INPUT_CHANGE', payload);\n\nexport const addressFullEntranceInputChangeAction = (payload: string) =>\n    createAction('addressFull/ENTRANCE_INPUT_CHANGE', payload);\n\nexport const addressFullFloorInputChangeAction = (payload: string) =>\n    createAction('addressFull/FLOOR_INPUT_CHANGE', payload);\n","import React from 'react';\nimport { addressFullValidationOkThunk } from 'store/thunks/addressFullPage';\nimport styled from 'styled-components';\nimport { useDispatch } from 'hooks/useDispatch';\nimport { useSelector } from 'hooks/useSelector';\nimport { addressFullApartmentInputChangeAction } from 'store/actions/addressFullPage';\nimport { Input } from 'components/Input/Input';\n\nconst StyledInput = styled(Input)`\n    margin: 80px auto 0;\n    width: 900px;\n`;\n\nexport const AddressFullApartment = () => {\n    const dispatch = useDispatch();\n    const inputValue = useSelector(({ addressFullPage }) => addressFullPage.apartmentInputValue);\n    const handleInputChange = React.useCallback(\n        (e: React.ChangeEvent<HTMLInputElement>) => {\n            dispatch(addressFullApartmentInputChangeAction(e.target.value));\n        },\n        [dispatch],\n    );\n    const handleInputSubmit = React.useCallback(() => {\n        dispatch(addressFullValidationOkThunk());\n    }, [dispatch]);\n\n    return (\n        <StyledInput\n            title=\"Квартира\"\n            value={inputValue}\n            shouldFocusInputOnMount\n            onChange={handleInputChange}\n            onSubmit={handleInputSubmit}\n        />\n    );\n};\n","import React from 'react';\nimport { addressFullValidationOkThunk } from 'store/thunks/addressFullPage';\nimport styled from 'styled-components';\nimport { useDispatch } from 'hooks/useDispatch';\nimport { useSelector } from 'hooks/useSelector';\nimport { addressFullEntranceInputChangeAction } from 'store/actions/addressFullPage';\nimport { Input } from 'components/Input/Input';\n\nconst StyledInput = styled(Input)`\n    margin: 80px auto 0;\n    width: 900px;\n`;\n\nexport const AddressFullEntrance = () => {\n    const dispatch = useDispatch();\n    const inputValue = useSelector(({ addressFullPage }) => addressFullPage.entranceInputValue);\n    const handleInputChange = React.useCallback(\n        (e: React.ChangeEvent<HTMLInputElement>) => {\n            dispatch(addressFullEntranceInputChangeAction(e.target.value));\n        },\n        [dispatch],\n    );\n    const handleInputSubmit = React.useCallback(() => {\n        dispatch(addressFullValidationOkThunk());\n    }, [dispatch]);\n\n    return (\n        <StyledInput\n            title=\"Подъезд\"\n            value={inputValue}\n            shouldFocusInputOnMount\n            onChange={handleInputChange}\n            onSubmit={handleInputSubmit}\n        />\n    );\n};\n","import React from 'react';\nimport { addressFullValidationOkThunk } from 'store/thunks/addressFullPage';\nimport styled from 'styled-components';\nimport { useDispatch } from 'hooks/useDispatch';\nimport { useSelector } from 'hooks/useSelector';\nimport { addressFullFloorInputChangeAction } from 'store/actions/addressFullPage';\nimport { Input } from 'components/Input/Input';\n\nconst StyledInput = styled(Input)`\n    margin: 80px auto 0;\n    width: 900px;\n`;\n\nexport const AddressFullFloor = () => {\n    const dispatch = useDispatch();\n    const inputValue = useSelector(({ addressFullPage }) => addressFullPage.floorInputValue);\n    const handleInputChange = React.useCallback(\n        (e: React.ChangeEvent<HTMLInputElement>) => {\n            dispatch(addressFullFloorInputChangeAction(e.target.value));\n        },\n        [dispatch],\n    );\n    const handleInputSubmit = React.useCallback(() => {\n        dispatch(addressFullValidationOkThunk());\n    }, [dispatch]);\n\n    return (\n        <StyledInput\n            title=\"Этаж\"\n            value={inputValue}\n            shouldFocusInputOnMount\n            onChange={handleInputChange}\n            onSubmit={handleInputSubmit}\n        />\n    );\n};\n","import React from 'react';\nimport { Switch, Route } from 'react-router';\nimport { ROUTES } from 'store/constants/router';\n\nimport { AddressFullAll } from './AddressFullAll';\nimport { AddressFullPhone } from './AddressFullPhone';\nimport { AddressFullApartment } from './AddressFullApartment';\nimport { AddressFullEntrance } from './AddressFullEntrance';\nimport { AddressFullFloor } from './AddressFullFloor';\n\nexport const AddressFull = () => (\n    <Switch>\n        <Route path={ROUTES.ADDRESS_FULL_ALL}>\n            <AddressFullAll />\n        </Route>\n        <Route path={ROUTES.ADDRESS_FULL_PHONE}>\n            <AddressFullPhone />\n        </Route>\n        <Route path={ROUTES.ADDRESS_FULL_APARTMENT}>\n            <AddressFullApartment />\n        </Route>\n        <Route path={ROUTES.ADDRESS_FULL_ENTRANCE}>\n            <AddressFullEntrance />\n        </Route>\n        <Route path={ROUTES.ADDRESS_FULL_FLOOR}>\n            <AddressFullFloor />\n        </Route>\n    </Switch>\n);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { goBack } from 'connected-react-router';\nimport { useDispatch } from 'hooks/useDispatch';\nimport { useSelector } from 'hooks/useSelector';\nimport { closeAppAction } from 'store/actions/app';\nimport { Button } from 'components/Button/Button';\nimport { HeadlineText1 } from 'components/Text/Headline';\nimport { BodyText1 } from 'components/Text/Body';\nimport { color } from 'style/const/color';\nimport { layout } from 'style/const/layout';\n\nimport circlesImage from './Error.assets/circles.svg';\nimport warningIcon from './Error.assets/warning.svg';\n\nconst ErrorPage = styled.div`\n    position: relative;\n\n    height: ${layout.contentHeightPx}px;\n    padding-left: 128px;\n`;\n\nconst TextContainer = styled.div`\n    width: 816px;\n    height: ${layout.contentHeightPx}px;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n    align-content: left;\n`;\n\nconst Title = styled(HeadlineText1)`\n    margin-bottom: 12px;\n\n    color: ${color.text.primary};\n`;\n\nconst Subtitle = styled(BodyText1)`\n    margin-bottom: 48px;\n\n    white-space: pre-wrap;\n\n    color: ${color.text.secondary};\n`;\n\nconst ButtonContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    margin: 0 -24px;\n`;\n\nconst StyledButton = styled(Button)`\n    margin: 0 24px;\n`;\n\nconst circlesPositionXPx = -266;\nconst circlesPositionYPx = -1 * (layout.headerHeightPx + 280);\n\nconst Circles = styled.div`\n    position: absolute;\n    top: ${circlesPositionYPx}px;\n    right: ${circlesPositionXPx}px;\n\n    box-sizing: border-box;\n    width: 1596px;\n    height: 1596px;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    background-image: url('${circlesImage}');\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n`;\n\nconst WarningIcon = styled.div`\n    width: 384px;\n    height: 384px;\n\n    background-image: url('${warningIcon}');\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n`;\n\nexport const Error: React.FC = () => {\n    const { title, subtitle, retryButtonText, closeButtonText } = useSelector(({ errorPage }) => errorPage);\n\n    const dispatch = useDispatch();\n\n    const handleRetryButtonClick = React.useCallback(() => {\n        dispatch(goBack());\n    }, [dispatch]);\n\n    const handleCloseButtonClick = React.useCallback(() => {\n        dispatch(closeAppAction());\n    }, [dispatch]);\n\n    return (\n        <ErrorPage>\n            <TextContainer>\n                <Title>{title}</Title>\n                <Subtitle>{subtitle}</Subtitle>\n                <ButtonContainer>\n                    <StyledButton shouldFocusOnMount view=\"secondary\" onClick={handleRetryButtonClick}>\n                        {retryButtonText}\n                    </StyledButton>\n                    {closeButtonText ? (\n                        <StyledButton view=\"secondary\" onClick={handleCloseButtonClick}>\n                            {closeButtonText}\n                        </StyledButton>\n                    ) : null}\n                </ButtonContainer>\n            </TextContainer>\n            <Circles>\n                <WarningIcon />\n            </Circles>\n        </ErrorPage>\n    );\n};\n","import styled, { keyframes } from 'styled-components';\n\nimport spinnerImage from './spinner.svg';\n\nconst spinnerSizePx = 112;\n\nconst spinnerAnimationDurationMs = 1000;\n\nexport const Spinner = styled.div`\n    width: ${spinnerSizePx}px;\n    height: ${spinnerSizePx}px;\n\n    background: url('${spinnerImage}');\n    background-size: cover;\n\n    animation-name: ${keyframes`\n        0% {\n            transform: rotate(0deg);\n        }\n        100% {\n            transform: rotate(360deg);\n        }\n    `};\n    animation-duration: ${spinnerAnimationDurationMs}ms;\n    animation-timing-function: linear;\n    animation-iteration-count: infinite;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'hooks/useSelector';\nimport { Spinner } from 'components/Spinner/Spinner';\nimport { BodyText1 } from 'components/Text/Body';\nimport { color } from 'style/const/color';\n\nconst StyledContainer = styled.div`\n    height: 100%;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n`;\n\nconst Text = styled(BodyText1)`\n    margin-top: 32px;\n\n    color: ${color.text.primary};\n`;\n\nexport const Wait: React.FC = () => {\n    const text = useSelector(({ waitPage }) => waitPage.text);\n\n    return (\n        <StyledContainer>\n            <Spinner />\n            <Text>{text}</Text>\n        </StyledContainer>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { Switch, Route } from 'react-router';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { store, history } from 'store';\nimport { ROUTES } from 'store/constants/router';\nimport { AppLayout } from 'components/AppLayout/AppLayout';\nimport { Catalog } from 'pages/Catalog/Catalog';\nimport { Cart } from 'pages/Cart/Cart';\nimport { Status } from 'pages/Status/Status';\nimport { Promo } from 'pages/Promo/Promo';\nimport { NoArea } from 'pages/NoArea/NoArea';\nimport { AddressSimple } from 'pages/AddressSimple/AddressSimple';\nimport { AddressFull } from 'pages/AddressFull/AddressFull';\nimport { Error } from 'pages/Error/Error';\nimport { Wait } from 'pages/Wait/Wait';\n\nimport 'style/global.scss';\n\nconst StyledContainer = styled.div`\n    overflow: hidden;\n    width: 100%;\n    height: 100vh;\n    outline: none;\n    font-family: 'SB Sans Text', Helvetica, Arial, sans-serif;\n    background: #000;\n`;\n\nconst preventScroll = (event: React.SyntheticEvent<HTMLDivElement>) => {\n    event.currentTarget.scrollTop = 0;\n};\n\nexport const RootDesktop: React.FC = () => (\n    <ReduxProvider store={store}>\n        <ConnectedRouter history={history}>\n            <StyledContainer onScroll={preventScroll}>\n                <AppLayout>\n                    <Switch>\n                        <Route path={ROUTES.CATALOG}>\n                            <Catalog />\n                        </Route>\n                        <Route path={ROUTES.CART}>\n                            <Cart />\n                        </Route>\n                        <Route path={ROUTES.STATUS}>\n                            <Status />\n                        </Route>\n                        <Route path={ROUTES.ADDRESS_SIMPLE}>\n                            <AddressSimple />\n                        </Route>\n                        <Route path={ROUTES.ADDRESS_FULL}>\n                            <AddressFull />\n                        </Route>\n                        <Route path={ROUTES.PROMO}>\n                            <Promo />\n                        </Route>\n                        <Route path={ROUTES.NO_AREA}>\n                            <NoArea />\n                        </Route>\n                        <Route path={ROUTES.ERROR}>\n                            <Error />\n                        </Route>\n                        <Route path={ROUTES.WAIT}>\n                            <Wait />\n                        </Route>\n                    </Switch>\n                </AppLayout>\n            </StyledContainer>\n        </ConnectedRouter>\n    </ReduxProvider>\n);\n","// TODO: FRNTND-1 mv to npm package\n\nconst headerHeightPx = 65;\n\nexport const layout = {\n    headerHeightPx,\n};\n","import styled from 'styled-components';\nimport { font } from 'style/const/font';\n\nexport const BodyText2 = styled.div`\n    font-weight: ${font.weight.semibold};\n    font-size: 16px;\n    line-height: 20px;\n    letter-spacing: -0.019em;\n`;\n","import styled from 'styled-components';\nimport { font } from 'style/const/font';\n\nexport const ButtonText2 = styled.div`\n    font-weight: ${font.weight.semibold};\n    font-size: 14px;\n    line-height: 16px;\n`;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { transition } from 'style/const/transition';\nimport { focusBorderMixin } from 'style/mixin/focus';\nimport { ButtonText2 } from 'components/Text/Button@touch';\nimport { color } from 'style/const/color';\nimport { icon } from 'style/const/icon';\n\nconst containerBorderRadiusPx = 24;\n\ninterface StyledHeaderButtonProps {\n    isVisible?: boolean;\n}\n\nconst StyledHeaderButton = styled.div<StyledHeaderButtonProps>`\n    position: relative;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    margin-left: 15px;\n\n    box-sizing: border-box;\n    height: 32px;\n    min-width: 32px;\n    border-radius: ${containerBorderRadiusPx}px;\n\n    transition: background-color ${transition.default};\n    will-change: background-color;\n\n    ${focusBorderMixin({ borderRadius: containerBorderRadiusPx })}\n\n    &:focus {\n        background: ${color.button.secondary1};\n    }\n\n    &:first-of-type {\n        margin-left: 0;\n    }\n\n    ${({ isVisible }) =>\n        !isVisible &&\n        css`\n            display: none;\n        `}\n`;\n\nconst textHeightPx = icon.xs.sizePx;\n\nconst StyledText = styled(ButtonText2)`\n    margin-left: 8px;\n\n    height: ${textHeightPx}px;\n    padding: 0 7px 0 1px;\n\n    line-height: ${textHeightPx}px;\n\n    color: ${color.text.white};\n\n    opacity: 0.88;\n`;\n\ninterface HeaderButtonProps {\n    text?: string;\n    isVisible?: boolean;\n    onClick?: () => void;\n}\n\nexport const HeaderButtonTouch: React.FC<HeaderButtonProps> = ({ text, isVisible, onClick: handleClick, children }) => (\n    <StyledHeaderButton tabIndex={0} onClick={handleClick} isVisible={isVisible}>\n        {children}\n        {text ? <StyledText>{text}</StyledText> : null}\n    </StyledHeaderButton>\n);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { push } from 'connected-react-router';\nimport { useDispatch } from 'hooks/useDispatch';\nimport { useSelector } from 'hooks/useSelector';\nimport { useThrottledFn } from 'hooks/useThrottledFn';\nimport { selectHeader } from 'store/selectors';\nimport { ROUTES } from 'store/constants/router';\nimport { HeaderButtonTouch } from 'components/HeaderButton/HeaderButton@touch';\nimport { icon } from 'style/const/icon';\n\nimport addressIcon from './address.svg';\n\nconst addressIconSizePx = icon.xs.sizePx;\n\nconst StyledIcon = styled.div`\n    width: ${addressIconSizePx}px;\n    height: ${addressIconSizePx}px;\n\n    background-image: url('${addressIcon}');\n    background-repeat: no-repeat;\n    background-size: contain;\n`;\n\nconst throttleTimeoutMs = 200;\n\nexport const HeaderAddressTouch: React.FC = () => {\n    const dispatch = useDispatch();\n\n    const { isVisible } = useSelector((state) => selectHeader(state).address);\n\n    const handleClick = useThrottledFn(() => dispatch(push(ROUTES.ADDRESS_SIMPLE)), throttleTimeoutMs, undefined, [\n        dispatch,\n    ]);\n\n    return (\n        <HeaderButtonTouch isVisible={isVisible} onClick={handleClick}>\n            <StyledIcon />\n        </HeaderButtonTouch>\n    );\n};\n","import React from 'react';\nimport { push } from 'connected-react-router';\nimport styled from 'styled-components';\nimport { useDispatch } from 'hooks/useDispatch';\nimport { useSelector } from 'hooks/useSelector';\nimport { useThrottledFn } from 'hooks/useThrottledFn';\nimport { selectHeader } from 'store/selectors';\nimport { ROUTES } from 'store/constants/router';\nimport { HeaderButtonTouch } from 'components/HeaderButton/HeaderButton@touch';\nimport { icon } from 'style/const/icon';\nimport { color } from 'style/const/color';\n\nimport cartIcon from './cart.svg';\n\nconst cartIconSizePx = icon.xs.sizePx;\n\nconst StyledIcon = styled.div`\n    position: relative;\n\n    width: ${cartIconSizePx}px;\n    height: ${cartIconSizePx}px;\n\n    background-image: url('${cartIcon}');\n    background-repeat: no-repeat;\n    background-size: contain;\n`;\n\nconst badgeSizePx = 16;\nconst badgeOffsetPx = cartIconSizePx / 2;\n\nconst StyledBadge = styled.span`\n    position: absolute;\n    left: ${badgeOffsetPx}px;\n    bottom: ${badgeOffsetPx}px;\n\n    width: ${badgeSizePx}px;\n    height: ${badgeSizePx}px;\n    border-radius: 50%;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    line-height: 12px;\n    font-size: 10px;\n    letter-spacing: -0.019em;\n\n    box-sizing: border-box;\n\n    color: ${color.text.primary};\n    background: ${color.button.primary};\n`;\n\nconst throttleTimeoutMs = 200;\n\nexport const HeaderCartTouch: React.FC = () => {\n    const dispatch = useDispatch();\n\n    const { count, price, isVisible } = useSelector((state) => selectHeader(state).cart);\n\n    const handleClick = useThrottledFn(\n        () => {\n            dispatch(push(ROUTES.CART));\n        },\n        throttleTimeoutMs,\n        undefined,\n        [dispatch],\n    );\n\n    const text = `${price} ₽`;\n\n    return (\n        <HeaderButtonTouch isVisible={isVisible} onClick={handleClick} text={text}>\n            <StyledIcon>\n                <StyledBadge>{count}</StyledBadge>\n            </StyledIcon>\n        </HeaderButtonTouch>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'hooks/useSelector';\nimport { selectHeader } from 'store/selectors';\nimport { icon } from 'style/const/icon';\nimport { color } from 'style/const/color';\nimport { layout } from 'style/const/layout@touch';\nimport { transition } from 'style/const/transition';\nimport { BodyText2 } from 'components/Text/Body@touch';\n\nimport { HeaderAddressTouch } from '../HeaderAddress/HeaderAddress@touch';\nimport { HeaderCartTouch } from '../HeaderCart/HeaderCart@touch';\n\nimport backButtonIcon from './Header.assets/chevron-left.svg';\nimport logoIcon from './Header.assets/logo.svg';\n\ninterface StyledHeaderProps {\n    isVisible: boolean;\n}\n\nconst StyledHeader = styled.div<StyledHeaderProps>`\n    position: relative;\n\n    height: ${layout.headerHeightPx}px;\n\n    box-sizing: border-box;\n    padding: 14px 13px 9px;\n\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    --spatial-navigation-contain: contain;\n\n    opacity: ${({ isVisible }) => Number(isVisible)};\n\n    transition: opacity ${transition.default};\n`;\n\nconst backButtonIconSizePx = icon.xs.sizePx;\n\nconst StyledBackButton = styled.span`\n    width: 32px;\n    height: 32px;\n    margin-right: 9px;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    &::before {\n        content: '';\n\n        display: block;\n        width: ${backButtonIconSizePx}px;\n        height: ${backButtonIconSizePx}px;\n\n        background-image: url(${backButtonIcon});\n        background-repeat: no-repeat;\n        background-size: contain;\n    }\n`;\n\nconst StyledSection = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst StyledLogo = styled.div`\n    margin-left: 3px;\n\n    width: 28px;\n    height: 28px;\n    border-radius: 8px;\n\n    background-image: url(${logoIcon});\n    background-repeat: no-repeat;\n    background-size: contain;\n`;\n\nconst StyledTitle = styled(BodyText2)`\n    margin-left: 10px;\n\n    display: inline-block;\n\n    color: ${color.text.white};\n`;\n\n// eslint-disable-next-line  @typescript-eslint/no-unused-vars\nexport const HeaderTouch: React.FC = ({ children, ...props }) => {\n    const { title, isBackButtonVisible, isVisible } = useSelector(selectHeader);\n\n    return (\n        <StyledHeader isVisible={isVisible} {...props}>\n            <StyledSection>\n                {isBackButtonVisible && <StyledBackButton />}\n                <StyledLogo />\n                <StyledTitle>{title}</StyledTitle>\n            </StyledSection>\n            <StyledSection>\n                <HeaderAddressTouch />\n                <HeaderCartTouch />\n            </StyledSection>\n        </StyledHeader>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { HeaderTouch } from 'components/Header/Header@touch';\nimport { color } from 'style/const/color';\nimport { layout } from 'style/const/layout@touch';\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n    align-content: stretch;\n\n    position: relative;\n\n    width: 100%;\n    height: 100%;\n\n    background-color: ${color.background.default};\n`;\n\nconst AppContent = styled.div`\n    position: absolute;\n    top: ${layout.headerHeightPx}px;\n    left: 0;\n    right: 0;\n    bottom: 0;\n`;\n\nexport const AppLayoutTouch: React.FC = ({ children }) => {\n    return (\n        <Container>\n            <HeaderTouch />\n            <AppContent>{children}</AppContent>\n        </Container>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport AddIcon from 'assets/icons/add.svg';\nimport RemoveIcon from 'assets/icons/remove.svg';\nimport { useDispatch } from 'hooks/useDispatch';\nimport { useSelector } from 'hooks/useSelector';\nimport { useThrottledFn } from 'hooks/useThrottledFn';\nimport { addItemAction, removeItemAction } from 'store/actions/native';\nimport { IndexBadge } from 'components/IndexBadge/IndexBadge';\nimport { BadgeType } from 'components/Badge/Badge';\n\nconst throttleTimeoutMs = 150;\nconst cardBorderRadiusPx = 20;\n\nconst StyledListItem = styled.div`\n    position: relative;\n    border-radius: ${cardBorderRadiusPx}px;\n    background-color: rgba(255, 255, 255, 0.06);\n    color: #fff;\n`;\n\ninterface StyledThumbProps {\n    imageUrl: string;\n}\n\nconst StyledThumb = styled.div<StyledThumbProps>`\n    display: block;\n    width: 100%;\n    height: 168px;\n\n    background-image: url('${({ imageUrl }) => imageUrl}');\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n\n    border-top-left-radius: ${cardBorderRadiusPx}px;\n    border-top-right-radius: ${cardBorderRadiusPx}px;\n`;\n\nconst StyledIndexBadge = styled(IndexBadge)`\n    top: 8px;\n    right: 8px;\n    color: #fff;\n`;\n\ntype StyledIconProps = {\n    icon: string;\n};\n\nconst StyledIcon = styled.div<StyledIconProps>`\n    height: 12px;\n    width: 12px;\n\n    background-image: url(${({ icon }) => icon});\n    background-repeat: no-repeat;\n    background-size: contain;\n`;\n\nconst StyledDescription = styled.div`\n    padding: 8px 16px 0;\n`;\n\nconst StyledButtonsContainer = styled.div`\n    padding: 12px;\n    margin-top: 6px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`;\n\nconst StyledName = styled.div`\n    color: #fff;\n    font-size: 14px;\n    height: 36px;\n\n    display: block;\n    display: -webkit-box;\n\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    text-overflow: ellipsis;\n`;\n\ntype StyledTouchButtonProps = {\n    disabled?: boolean;\n};\n\nconst StyledTouchButton = styled.div<StyledTouchButtonProps>`\n    cursor: pointer;\n    padding: 11px 20px;\n    text-align: center;\n    font-size: 14px;\n    background-color: rgba(255, 255, 255, 0.06);\n    border-radius: 12px;\n    width: 100%;\n    opacity: ${({ disabled }) => (disabled ? 0.2 : 1)};\n`;\n\nconst StyledCountTouchButton = styled.div`\n    cursor: pointer;\n    background-color: rgba(255, 255, 255, 0.06);\n    border-radius: 12px;\n    display: flex;\n    width: 40px;\n    height: 40px;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    font-size: 14px;\n`;\n\nconst StyledCount = styled.div`\n    font-size: 16px;\n`;\n\ninterface CatalogListItemTouchProps {\n    id: string;\n}\n\nexport interface CatalogListItemTouchViewProps {\n    imageUrl: string;\n    count: number;\n    name: string;\n    index: number;\n    price: number;\n    badge?: BadgeType;\n    disabled?: boolean;\n    buttonDisabled?: boolean;\n}\n\nexport const CatalogListItemTouch: React.FC<CatalogListItemTouchProps> = ({ id }) => {\n    const dispatch = useDispatch();\n    const { imageUrl, count, index, name, price, disabled } = useSelector(\n        ({ catalogPageTouch }) => catalogPageTouch.itemsMap[id],\n    );\n    const isPossibleChangeCountActive = count > 0;\n\n    const handleClickAdd = useThrottledFn(\n        () => {\n            if (!disabled) {\n                dispatch(addItemAction({ item: id, count: '1' }));\n            }\n        },\n        throttleTimeoutMs,\n        undefined,\n        [dispatch, id, disabled],\n    );\n\n    const handleClickRemove = useThrottledFn(\n        () => {\n            if (!disabled) {\n                dispatch(removeItemAction({ item: id, count: '1' }));\n            }\n        },\n        throttleTimeoutMs,\n        undefined,\n        [dispatch, id, disabled],\n    );\n\n    return (\n        <StyledListItem tabIndex={0}>\n            <StyledThumb imageUrl={imageUrl} />\n            <StyledIndexBadge size=\"xs\" index={index} />\n            <StyledDescription>\n                <StyledName>{name}</StyledName>\n            </StyledDescription>\n            <StyledButtonsContainer>\n                {isPossibleChangeCountActive ? (\n                    <>\n                        <StyledCountTouchButton onClick={handleClickRemove}>\n                            <StyledIcon icon={RemoveIcon} />\n                        </StyledCountTouchButton>\n                        <StyledCount>{count}</StyledCount>\n                        <StyledCountTouchButton onClick={handleClickAdd}>\n                            <StyledIcon icon={AddIcon} />\n                        </StyledCountTouchButton>\n                    </>\n                ) : (\n                    <StyledTouchButton onClick={handleClickAdd} disabled={disabled}>\n                        {price} ₽\n                    </StyledTouchButton>\n                )}\n            </StyledButtonsContainer>\n        </StyledListItem>\n    );\n};\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'hooks/useSelector';\n\nimport { CatalogListItemTouch } from '../ListItem/CatalogListItem@touch';\n\nconst StyledCatalogList = styled.div`\n    width: 100%;\n    height: 100%;\n    overflow-y: auto;\n    padding: 6px 14px;\n    box-sizing: border-box;\n`;\n\nconst StyledScrollableCatalogContainer = styled.div`\n    display: grid;\n    grid-gap: 9px;\n    grid-template-columns: 1fr 1fr;\n`;\n\nexport const CatalogListTouch: React.FC = () => {\n    const itemIds = useSelector(({ catalogPageTouch }) => catalogPageTouch.order);\n    const itemsList = React.useMemo(() => itemIds.map((itemId) => <CatalogListItemTouch key={itemId} id={itemId} />), [\n        itemIds,\n    ]);\n\n    return (\n        <StyledCatalogList>\n            <StyledScrollableCatalogContainer>{itemsList}</StyledScrollableCatalogContainer>\n        </StyledCatalogList>\n    );\n};\n","import React from 'react';\n\nimport { CatalogListTouch } from './List/CatalogList@touch';\n\nexport const CatalogTouch: React.FC = () => {\n    return <CatalogListTouch />;\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { Switch, Route } from 'react-router';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { store, history } from 'store';\nimport { ROUTES } from 'store/constants/router';\nimport { AppLayoutTouch } from 'components/AppLayout/AppLayout@touch';\nimport { CatalogTouch } from 'pages/Catalog/Catalog@touch';\n\nconst StyledContainer = styled.div`\n    overflow: hidden;\n    width: 100%;\n    height: 100vh;\n    outline: none;\n    font-family: 'SB Sans Text', Helvetica, Arial, sans-serif;\n    background: #000;\n`;\n\nconst preventScroll = (event: React.SyntheticEvent<HTMLDivElement>) => {\n    event.currentTarget.scrollTop = 0;\n};\n\nexport const RootTouch: React.FC = () => (\n    <ReduxProvider store={store}>\n        <ConnectedRouter history={history}>\n            <StyledContainer onScroll={preventScroll}>\n                <AppLayoutTouch>\n                    <Switch>\n                        <Route path={ROUTES.CATALOG}>\n                            <CatalogTouch />\n                        </Route>\n                    </Switch>\n                </AppLayoutTouch>\n            </StyledContainer>\n        </ConnectedRouter>\n    </ReduxProvider>\n);\n","import { mobileDetect } from 'tools/browser';\n\nimport { RootDesktop } from './Root@desktop';\nimport { RootTouch } from './Root@touch';\n\nconst isMobile = mobileDetect();\n\nexport const Root = isMobile ? RootTouch : RootDesktop;\n","import 'core-js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Sentry from '@sentry/react';\nimport { Root } from 'components/Root/Root';\n\nimport 'tools/new-spatial-navigation';\n\nif (process.env.REACT_APP_ENVIRONMENT === 'production') {\n    Sentry.init({ dsn: 'https://b33b53e4a61946f1a44139076cefb598@o414705.ingest.sentry.io/5304676' });\n}\n\nexport const renderApp = (App: React.FC) => {\n    ReactDOM.render(<App />, document.getElementById('application_root'));\n};\n\nrenderApp(Root);\n\nif (process.env.REACT_APP_ENVIRONMENT !== 'production' && module.hot) {\n    module.hot.accept('./components/Root/Root', () => {\n        // eslint-disable-next-line\n        const { Root } = require('./components/Root/Root.tsx');\n        renderApp(Root);\n    });\n}\n\n// eslint-disable-next-line no-console\nconsole.log('rev', process.env.REACT_APP_REV);\n","module.exports = __webpack_public_path__ + \"static/media/add.6f87e0cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/address.786915f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/cart.2c4b0c43.svg\";","module.exports = __webpack_public_path__ + \"static/media/chevron-left.88658df7.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.1072bc0d.svg\";","module.exports = __webpack_public_path__ + \"static/media/remove.856b6a95.svg\";"],"sourceRoot":""}