{"version":3,"sources":["components/HeaderAddress/address.svg","components/HeaderCart/cart.svg","components/Header/chevron-right.svg","components/Header/logo.svg","assets/icons/minus.svg","pages/Status/figure-2.svg","pages/Status/figure-3.svg","pages/Status/figure-4.svg","pages/Status/figure-6.svg","pages/Status/figure-7.svg","pages/Status/figure-8.svg","pages/Status/figure-9.svg","pages/NoArea/Badge/face.svg","tools/new-spatial-navigation.js","store/constants/router.tsx","store/constants/index.tsx","store/reducers/model/cart.ts","store/reducers/data/products.ts","store/reducers/data/user.ts","store/reducers/view/catalogPage.ts","tools/index.tsx","store/reducers/view/cartPage.ts","hooks/useFocusOnMount.tsx","hooks/useInterval.tsx","hooks/useDispatch.tsx","hooks/useSelector.tsx","tools/action-creator.tsx","store/actions/native.tsx","store/actions/server.tsx","pages/AddressSimple/SuggestItem/AddressSimpleSuggestItem.tsx","store/actions/addressSimplePage.tsx","store/reducers/view/addressSimplePage.tsx","store/reducers/view/header.ts","store/index.tsx","store/reducers/index.tsx","store/reducers/model/router.ts","components/HeaderAddress/HeaderAddress.tsx","components/HeaderCart/HeaderCart.tsx","components/Header/Header.tsx","components/Badge/Badge.tsx","pages/Catalog/ListItem/CatalogListItem.tsx","store/actions/catalogPage.tsx","pages/Catalog/List/CatalogList.tsx","components/Skeleton/Skeleton.tsx","tools/bem.ts","hoc/withBem.tsx","pages/Catalog/Skeleton/CatalogSkeleton.tsx","pages/Catalog/Catalog.tsx","components/Button/Button.tsx","pages/Cart/Info/CartInfo.tsx","store/actions/user.tsx","pages/Cart/ListItem/CartListItem.tsx","store/actions/cartPage.tsx","pages/Cart/List/CartList.tsx","pages/Cart/Cart.tsx","pages/Status/Status.tsx","pages/Promo/Promo.tsx","pages/NoArea/Badge/Badge.tsx","pages/NoArea/NoArea.tsx","pages/ScreenSaver/ScreenSaver.tsx","components/Input/Input.tsx","tools/request.tsx","pages/AddressSimple/AddressSimple.tsx","tools/2gis.tsx","components/Root/Root.tsx","index.tsx","assets/icons/plus.svg","assets/images/map.png","pages/Status/figure-1.svg"],"names":["module","exports","window","ARROW_KEY_CODE","37","38","39","40","mapOfBoundRect","startingPoint","savedSearchOrigin","element","rect","spatialNavigationHandler","addEventListener","e","currentKeyMode","parent","__spatialNavigation__","keyMode","eventTarget","document","activeElement","dir","keyCode","shiftKey","ctrlKey","metaKey","altKey","defaultPrevented","focusNavigableArrowKey","left","up","right","down","nodeName","startPosition","selectionStart","endPosition","selectionEnd","undefined","includes","getAttribute","value","length","handlingEditableElement","preventDefault","Map","navigate","x","clientX","y","clientY","target","getBoundingClientRect","searchOrigin","body","querySelector","elementStyle","getComputedStyle","invisibleStyle","disabled","getPropertyValue","documentElement","height","width","top","bottom","isVisibleInScroller","scroller","getScrollContainer","findSearchOrigin","console","log","elementFromPosition","elementFromPoint","isFocusable","isContainer","getSpatialNavigationContainer","container","contentDocument","bestInsideCandidate","spatialNavigationSearch","candidates","getSpatialNavigationCandidates","mode","focusingController","parentContainer","parentElement","location","navigateChain","bestCandidate","createSpatNavEvents","focus","preventScroll","scrollingController","isScrollable","isScrollBoundary","moveScroll","isHTMLScrollBoundary","ownerDocument","option","childElementCount","getElementsByTagName","children","elem","isDelegableContainer","push","concat","filter","isVisible","getFilteredSpatialNavigationCandidates","targetElement","filteredCandidates","args","this","bestTarget","internalCandidates","externalCandidates","insideOverlappedCandidates","focusableAreas","overlappedCandidates","forEach","isEntirelyVisible","getOverlappedCandidates","defaultContainer","defaultCandidates","contains","candidate","fullyOverlapped","overlappedByParent","map","elm","flat","currentElm","getClosestElement","getDistanceFromPoint","getInnerDistance","selectBestCandidateFromEdge","selectBestCandidate","innerTarget","descendantsBest","splice","indexOf","originalContainer","eventTargetRect","candidateRect","candidateBody","isOutside","isInside","spatialNavigationFunction","currentTargetRect","distanceFunction","alignedCandidates","isAligned","getAbsoluteDistance","getDistance","frameElement","minDistance","Number","POSITIVE_INFINITY","minDistanceElements","i","distance","getEuclideanDistance","scrollContainer","isScrollContainer","focusables","Array","prototype","call","eventType","containerElement","currentElement","direction","triggeredEvent","CustomEvent","bubbles","cancelable","detail","causedTarget","dispatchEvent","readCssVar","varName","trim","currentOption","nextContainer","offset","scrollLeft","scrollTop","isCSSSpatNavContain","overflowX","overflowY","isOverflow","scrollWidth","clientWidth","scrollHeight","clientHeight","result","winScrollY","winScrollX","Math","abs","elementRect","nearestScroller","scrollerRect","DOMRect","innerWidth","innerHeight","tabIndex","tagName","isAtagWithoutHref","isActuallyDisabled","inert","isExpresslyInert","isVisibleStyleProperty","style","opacity","isBeingRendered","offsetX","parseInt","offsetWidth","offsetY","offsetHeight","isNaN","hitTestPoint","middle","leftTop","rightBottom","point","elemFromPoint","hitTest","containerRect","thisVisibility","childRect","rightEdgeCheck","leftEdgeCheck","topEdgeCheck","bottomEdgeCheck","rect1","rect2","isRightSide","isBelow","points","getEntryAndExitPoints","P1","entryPoint","exitPoint","P2","sqrt","pow","baseEdge","orthogonalBias","alignBias","A","B","C","intersectionRect","intersection_rect","area","new_location","max","new_max_point","min","getIntersectionRect","D","get","boundingClientRect","toFixed","set","enableExperimentalAPIs","getInitialAPIs","Object","assign","canScroll","findTarget","findCandidate","bestNextTarget","isArray","findCandidates","bind","findNextTarget","getDistanceFromTarget","candidateElement","getExperimentalAPI","seal","_keymode","setStartingPoint","__getSpatNavState","searchOriginRect","Element","CSS","registerProperty","name","syntax","inherits","initialValue","HTMLElement","requestAnimationFrame","async","scrollIntoView","behavior","block","inline","event","HTMLButtonElement","click","ROUTES","initialState","cart","minimalPrice","itemsMap","order","totalCount","totalPrice","orderId","products","router","user","customer_name","phone_num","address","latitude","longitude","address_string","city","street","house","building","floor","entrance","apartment","door_code","confirmed","catalogPage","selectedItemId","screenIndex","wrapperXShift","listIndexOffset","cartPage","wrapperYShift","selectedItemIndex","topGradientHidden","bottomGradientHidden","toMinimumPrice","isOrderStatusWaiting","makePurchaseButton","header","title","text","count","price","isBackButtonVisible","addressSimplePage","deviceLocation","inputValue","suggestsRaw","suggests","selectedSuggestItemIndex","suggestListContainerYShift","isInputFocused","isSubmitButtonDisabled","getTotalCount","values","reduce","acc","item","getTotalPrice","itemId","productItem","cartModel","store","action","type","countString","payload","maxCount","quantityLeft","cartItem","shouldRemoveMention","cartItemId","clear","order_id","normalizeProducts","productsMaps","keys","id","guid","quantity_left","imageUrl","images_urls","productsData","state","stock","userData","suggestItem","address_name","full_name","addressComponent","components","number","split","String","lat","lon","updateUserAddressBasedOnBuilding","SCREEN_ITEM_COUNT","getScreenIndex","fill","_","index","prepareBadge","calculateCount","calculateButtonDisabled","prepareCatalogItemsMap","shouldFocusOnMount","ceil","badge","buttonDisabled","prepareItem","catalogPageView","firstItemId","catalogItem","getListIndexOffset","CARD_WIDTH","CARD_GAP","getWrapperXShift","splitByThousands","data","reduceRight","arr","throttle","callback","timeout","timeoutId","setTimeout","getWrapperYShift","relatedIndex","prepareCartPageItem","selectProductById","selectCartItemById","moreButtonDisabled","prepareMakePurchaseButtonProps","prepareToMinimumPrice","prepareTotalPrice","cartPageView","cartPageItem","prepareTopGradientHidden","prepareBottomGradientHidden","useFocusOnMount","ref","React","useRef","useEffect","current","useDispatch","useReduxDispatch","useSelector","mapStateToProps","useReduxSelector","createAction","createEmptyAction","addItem","removeItem","askForOrderStatus","StyledRoot","styled","div","AddressSimpleSuggestListItem","dispatch","memoizedOnClick","useCallback","memoizedOnFocus","onClick","onFocus","addressSimplePageView","clickedSuggestItem","input","prefix","prepareSuggestItems","prepareSuggestListContainerYShift","prepareIsSubmitButtonDisabled","routeTitleMap","CATALOG","CART","STATUS","NO_AREA","headerView","pathname","getTitle","getAddress","getCart","Boolean","history","createHashHistory","middlewares","routerMiddleware","next","AssistantClient","sendData","action_id","createReduxStore","routerModel","changeRouter","connectRouter","getRouterModel","produce","draft","reducer","getRootReducer","compose","applyMiddleware","dispatchToReduxStore","smart_app_data","command","actions","PROMO","ADDRESS_SIMPLE","goBack","onStart","process","onData","message","AssistantHost","JSON","stringify","onRequestState","getState","foodtech","currentScreen","substring","quantity","discountValue","castFromStore","stateString","updateState","ready","StyledAddress","StyledAddressIcon","addressIcon","StyledAddressText","HeaderAddress","StyledHeaderCart","StyledIcon","cartIcon","StyledBadge","span","StyledPrice","HeaderCart","StyledHeader","StyledBackButton","backButtonIcon","StyledSection","StyledLogo","logoIcon","StyledTitle","Header","contentMap","sale","backgroundMap","props","StyledDescription","StyledName","StyledPriceContainer","StyledCount","StyledThumb","StyledIndexBadge","visible","css","StyledButton","plusIcon","CatalogListItemBadge","StyledCatalogListItem","CatalogListItem","memoizedThrottledOnClick","onMountRef","currentTarget","StyledCatalogList","StyledContainer","StyledWrapper","XShift","CatalogList","items","useMemo","onScroll","key","Skeleton","itemWidth","itemHeight","borderRadius","rowCount","columnCount","paddingBetweenColumns","paddingBetweenRows","list","from","columnIndex","rowIndex","rx","ry","PREFIX","cssPrefix","blockName","delimeter","modDelimeter","renderer","elements","join","mod","modVal","modify","conditions","elemToModify","entries","predicate","all","Component","componentName","context","bem","Bem","CatalogSkeleton","withBem","className","viewBox","backgroundColor","foregroundColor","speed","Catalog","button","Button","forwardRef","mountFocusRef","StyledCartInfo","StyledBadgeBody","StyledBadgeName","StyledBadgeDescription","StyledBadgeKernel","StyledBadgeShadowBig","StyledBadgeShadowSmall","StyledPersonal","StyledPersonalLocation","StyledPersonalPhoneNumber","StyledPersonalName","StyledAskPersonal","CartInfoButton","CartInfo","phoneNumber","addressString","StyledInfo","oneLine","StyledSoldOut","StyledSelector","focused","StyledSelectorValue","CartListItemRemoveButton","StyledSelectorButton","view","minusIcon","StyledCartListItem","CartListItem","memoizedThrottledOnLessClick","memoizedThrottledOnMoreClick","memoizedThrottledOnRemoveClick","aria-label","StyledCartList","YShift","StyledTotalPrice","StyledMinimalPrice","StyledGradient","hidden","CartList","StyledBackground","mapImage","StyledOverlap","Cart","StatusButton","StatusContainer","StatusOrderNumber","StatusOrderTime","StatusFigure","StatusFirstFigure","FirstFigureIcon","StatusSecondFigure","SecondFigureIcon","StatusThirdFigure","ThirdFigureIcon","StatusFourthFigure","FourthFigureIcon","StatusFifthFigure","StatusSixthFigure","SixthFigureIcon","StatusSeventhFigure","SeventhFigureIcon","StatusEighthFigure","EighthFigureIcon","StatusNinthFigure","NinthFigureIcon","Status","Promo","currentIndex","setIndex","useState","memoizedOnClickSubmitButton","faceIcon","Badge","StyledNoArea","StyledSubtitle","backgroundImage","NoArea","ScreenSaver","StyledInput","isFocused","Input","onSubmit","setFocus","inputRef","memoizedOnRootFocus","memoizedOnRootBlur","memoizedOnInputKeyPress","memoizedOnRootKeyPress","onBlur","onKeyPress","makeRequest","url","params","fetch","then","response","ok","statusText","json","StyledInputContainer","AddressSimpleButton","StyledSuggestList","StyledSuggestListContainer","AddressSimple","submitButtonRef","isKeyboardExpanded","setIsKeyboardExpanded","onResize","removeEventListener","memoizedOnInputChange","memoizedOnInputSubmit","memoizedOnClickButton","q","Promise","resolve","local","fields","viewpoint1","viewpoint2","is_viewport_change","meta","code","error","getSuggests","onChange","renderApp","App","ReactDOM","render","getElementById","path","SCREEN_SAVER"],"mappings":"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","file":"static/js/main.7949292e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/address.b8697603.svg\";","module.exports = __webpack_public_path__ + \"static/media/cart.4441295b.svg\";","module.exports = __webpack_public_path__ + \"static/media/chevron-right.74fb921a.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.1072bc0d.svg\";","module.exports = __webpack_public_path__ + \"static/media/minus.b31f8712.svg\";","module.exports = __webpack_public_path__ + \"static/media/figure-2.a3044c99.svg\";","module.exports = __webpack_public_path__ + \"static/media/figure-3.7084a68e.svg\";","module.exports = __webpack_public_path__ + \"static/media/figure-4.74f25c1b.svg\";","module.exports = __webpack_public_path__ + \"static/media/figure-6.1cf5f7c7.svg\";","module.exports = __webpack_public_path__ + \"static/media/figure-7.ef978761.svg\";","module.exports = __webpack_public_path__ + \"static/media/figure-8.dcc5e538.svg\";","module.exports = __webpack_public_path__ + \"static/media/figure-9.fb8b47f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/face.a76f8cbf.svg\";","/* eslint-disable */\n\n/* Spatial Navigation Polyfill\n *\n * It follows W3C official specification\n * https://drafts.csswg.org/css-nav-1/\n *\n * Copyright (c) 2018-2019 LG Electronics Inc.\n * https://github.com/WICG/spatial-navigation/polyfill\n *\n * Licensed under the MIT license (MIT)\n */\n\n(function () {\n    // The polyfill must not be executed, if it's already enabled via browser engine or browser extensions.\n    if ('navigate' in window) {\n        return;\n    }\n\n    const ARROW_KEY_CODE = { 37: 'left', 38: 'up', 39: 'right', 40: 'down' };\n    const TAB_KEY_CODE = 9;\n    let mapOfBoundRect = null;\n    let startingPoint = null; // Saves spatial navigation starting point\n    let savedSearchOrigin = { element: null, rect: null }; // Saves previous search origin\n    let searchOriginRect = null; // Rect of current search origin\n\n    window.__getSpatNavState = () => {\n        return {\n            mapOfBoundRect,\n            startingPoint,\n            savedSearchOrigin,\n            searchOriginRect,\n        };\n    };\n\n    /**\n     * Initiate the spatial navigation features of the polyfill.\n     * @function initiateSpatialNavigation\n     */\n    function initiateSpatialNavigation() {\n        /*\n         * Bind the standards APIs to be exposed to the window object for authors\n         */\n        window.navigate = navigate;\n        window.Element.prototype.spatialNavigationSearch = spatialNavigationSearch;\n        window.Element.prototype.focusableAreas = focusableAreas;\n        window.Element.prototype.getSpatialNavigationContainer = getSpatialNavigationContainer;\n\n        /*\n         * CSS.registerProperty() from the Properties and Values API\n         * Reference: https://drafts.css-houdini.org/css-properties-values-api/#the-registerproperty-function\n         */\n        if (window.CSS && CSS.registerProperty) {\n            if (\n                window.getComputedStyle(document.documentElement).getPropertyValue('--spatial-navigation-contain') ===\n                ''\n            ) {\n                CSS.registerProperty({\n                    name: '--spatial-navigation-contain',\n                    syntax: 'auto | contain',\n                    inherits: false,\n                    initialValue: 'auto',\n                });\n            }\n\n            if (\n                window.getComputedStyle(document.documentElement).getPropertyValue('--spatial-navigation-action') === ''\n            ) {\n                CSS.registerProperty({\n                    name: '--spatial-navigation-action',\n                    syntax: 'auto | focus | scroll',\n                    inherits: false,\n                    initialValue: 'auto',\n                });\n            }\n\n            if (\n                window.getComputedStyle(document.documentElement).getPropertyValue('--spatial-navigation-function') ===\n                ''\n            ) {\n                CSS.registerProperty({\n                    name: '--spatial-navigation-function',\n                    syntax: 'normal | grid',\n                    inherits: false,\n                    initialValue: 'normal',\n                });\n            }\n        }\n    }\n\n    /**\n     * Add event handlers for the spatial navigation behavior.\n     * This function defines which input methods trigger the spatial navigation behavior.\n     * @function spatialNavigationHandler\n     */\n    function spatialNavigationHandler() {\n        /*\n         * keydown EventListener :\n         * If arrow key pressed, get the next focusing element and send it to focusing controller\n         */\n        window.addEventListener('keydown', (e) => {\n            const currentKeyMode =\n                (parent && parent.__spatialNavigation__.keyMode) || window.__spatialNavigation__.keyMode;\n            const eventTarget = document.activeElement;\n            const dir = ARROW_KEY_CODE[e.keyCode];\n\n            if (e.keyCode === TAB_KEY_CODE) {\n                startingPoint = null;\n            }\n\n            if (\n                !currentKeyMode ||\n                currentKeyMode === 'NONE' ||\n                (currentKeyMode === 'SHIFTARROW' && !e.shiftKey) ||\n                (currentKeyMode === 'ARROW' && e.shiftKey) ||\n                e.ctrlKey ||\n                e.metaKey ||\n                e.altKey\n            )\n                return;\n\n            if (!e.defaultPrevented) {\n                let focusNavigableArrowKey = {\n                    left: true,\n                    up: true,\n                    right: true,\n                    down: true,\n                };\n\n                // Edge case (text input, area) : Don't move focus, just navigate cursor in text area\n                if (eventTarget.nodeName === 'INPUT' || eventTarget.nodeName === 'TEXTAREA') {\n                    focusNavigableArrowKey = handlingEditableElement(e);\n                }\n\n                if (focusNavigableArrowKey[dir]) {\n                    e.preventDefault();\n                    mapOfBoundRect = new Map();\n\n                    navigate(dir);\n\n                    mapOfBoundRect = null;\n                    startingPoint = null;\n                }\n            }\n        });\n\n        /*\n         * mouseup EventListener :\n         * If the mouse click a point in the page, the point will be the starting point.\n         * NOTE: Let UA set the spatial navigation starting point based on click\n         */\n        document.addEventListener('mouseup', (e) => {\n            startingPoint = { x: e.clientX, y: e.clientY };\n        });\n\n        /*\n         * focusin EventListener :\n         * When the element get the focus, save it and its DOMRect for resetting the search origin\n         * if it disappears.\n         */\n        window.addEventListener('focusin', (e) => {\n            if (e.target !== window) {\n                savedSearchOrigin.element = e.target;\n                savedSearchOrigin.rect = e.target.getBoundingClientRect();\n            }\n        });\n    }\n\n    /**\n     * Enable the author to trigger spatial navigation programmatically, as if the user had done so manually.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#dom-window-navigate}\n     * @function navigate\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     */\n    function navigate(dir) {\n        // spatial navigation steps\n\n        // 1\n        const searchOrigin = findSearchOrigin();\n        console.log(searchOrigin);\n        let eventTarget = searchOrigin;\n        let elementFromPosition = null;\n\n        // 2 Optional step, UA defined starting point\n        if (startingPoint) {\n            // if there is a starting point, set eventTarget as the element from position for getting the spatnav container\n            elementFromPosition = document.elementFromPoint(startingPoint.x, startingPoint.y);\n\n            // Use starting point if the starting point isn't inside the focusable element (but not container)\n            // * Starting point is meaningfull when:\n            // 1) starting point is inside the spatnav container\n            // 2) starting point is inside the non-focusable element\n            if (elementFromPosition === null) {\n                elementFromPosition = document.body;\n            }\n            if (isFocusable(elementFromPosition) && !isContainer(elementFromPosition)) {\n                startingPoint = null;\n            } else if (isContainer(elementFromPosition)) {\n                eventTarget = elementFromPosition;\n            } else {\n                eventTarget = elementFromPosition.getSpatialNavigationContainer();\n            }\n        }\n\n        // 4\n        if (eventTarget === window || eventTarget === document || eventTarget === document.documentElement) {\n            eventTarget = document.body || document.documentElement;\n        }\n\n        // 5\n        // At this point, spatialNavigationSearch can be applied.\n        // If startingPoint is either a scroll container or the document,\n        // find the best candidate within startingPoint\n        let container = null;\n        if ((isContainer(eventTarget) || eventTarget.nodeName === 'BODY') && !(eventTarget.nodeName === 'INPUT')) {\n            if (eventTarget.nodeName === 'IFRAME') {\n                eventTarget = eventTarget.contentDocument.documentElement;\n            }\n\n            container = container === window ? document.body : eventTarget;\n            let bestInsideCandidate = null;\n\n            // 5-2\n            if (\n                document.activeElement === searchOrigin ||\n                (document.activeElement === document.body && searchOrigin === document.documentElement)\n            ) {\n                if (getCSSSpatNavAction(eventTarget) === 'scroll') {\n                    if (scrollingController(eventTarget, dir)) return;\n                } else if (getCSSSpatNavAction(eventTarget) === 'focus') {\n                    bestInsideCandidate = eventTarget.spatialNavigationSearch(dir, {\n                        container: eventTarget,\n                        candidates: getSpatialNavigationCandidates(eventTarget, {\n                            mode: 'all',\n                        }),\n                    });\n                    if (focusingController(bestInsideCandidate, dir)) return;\n                } else if (getCSSSpatNavAction(eventTarget) === 'auto') {\n                    bestInsideCandidate = eventTarget.spatialNavigationSearch(dir, {\n                        container: eventTarget,\n                    });\n                    if (focusingController(bestInsideCandidate, dir) || scrollingController(eventTarget, dir)) return;\n                }\n            } else {\n                // when the previous search origin became offscreen\n                container = container.getSpatialNavigationContainer();\n            }\n        }\n\n        // 6\n        // Let container be the nearest ancestor of eventTarget\n        container = eventTarget.getSpatialNavigationContainer();\n        let parentContainer = container.parentElement ? container.getSpatialNavigationContainer() : null;\n\n        // When the container is the viewport of a browsing context\n        if (!parentContainer && window.location !== window.parent.location) {\n            parentContainer = window.parent.document.documentElement;\n        }\n\n        if (getCSSSpatNavAction(container) === 'scroll') {\n            if (scrollingController(container, dir)) return;\n        } else if (getCSSSpatNavAction(container) === 'focus') {\n            navigateChain(eventTarget, container, parentContainer, dir, 'all');\n        } else if (getCSSSpatNavAction(container) === 'auto') {\n            navigateChain(eventTarget, container, parentContainer, dir, 'visible');\n        }\n    }\n\n    /**\n     * Move the focus to the best candidate or do nothing.\n     * @function focusingController\n     * @param bestCandidate {Node} - The best candidate of the spatial navigation\n     * @param dir {SpatialNavigationDirection}- The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {boolean}\n     */\n    function focusingController(bestCandidate, dir) {\n        // 10 & 11\n        // When bestCandidate is found\n        if (bestCandidate) {\n            // When bestCandidate is a focusable element and not a container : move focus\n            /*\n             * [event] navbeforefocus : Fired before spatial or sequential navigation changes the focus.\n             */\n            if (!createSpatNavEvents('beforefocus', bestCandidate, null, dir)) return true;\n\n            const container = bestCandidate.getSpatialNavigationContainer();\n\n            if (container !== window && getCSSSpatNavAction(container) === 'focus') {\n                bestCandidate.focus();\n            } else {\n                bestCandidate.focus({ preventScroll: true });\n            }\n\n            startingPoint = null;\n            return true;\n        }\n\n        // When bestCandidate is not found within the scrollport of a container: Nothing\n        return false;\n    }\n\n    /**\n     * Directionally scroll the scrollable spatial navigation container if it can be manually scrolled more.\n     * @function scrollingController\n     * @param container {Node} - The spatial navigation container which can scroll\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {boolean}\n     */\n    function scrollingController(container, dir) {\n        // If there is any scrollable area among parent elements and it can be manually scrolled, scroll the document\n        if (isScrollable(container, dir) && !isScrollBoundary(container, dir)) {\n            moveScroll(container, dir);\n            return true;\n        }\n\n        // If the spatnav container is document and it can be scrolled, scroll the document\n        if (!container.parentElement && !isHTMLScrollBoundary(container, dir)) {\n            moveScroll(container.ownerDocument.documentElement, dir);\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Find the candidates within a spatial navigation container include delegable container.\n     * This function does not search inside delegable container or focusable container.\n     * In other words, this return candidates set is not included focusable elements inside delegable container or focusable container.\n     *\n     * @function getSpatialNavigationCandidates\n     * @param container {Node} - The spatial navigation container\n     * @param option {FocusableAreasOptions} - 'mode' attribute takes 'visible' or 'all' for searching the boundary of focusable elements.\n     *                                          Default value is 'visible'.\n     * @returns {sequence<Node>} candidate elements within the container\n     */\n    function getSpatialNavigationCandidates(container, option = { mode: 'visible' }) {\n        let candidates = [];\n\n        if (container.childElementCount > 0) {\n            if (!container.parentElement) {\n                container = container.getElementsByTagName('body')[0] || document.body;\n            }\n            const children = container.children;\n            for (const elem of children) {\n                if (isDelegableContainer(elem)) {\n                    candidates.push(elem);\n                } else if (isFocusable(elem)) {\n                    candidates.push(elem);\n\n                    if (!isContainer(elem) && elem.childElementCount) {\n                        candidates = candidates.concat(getSpatialNavigationCandidates(elem, { mode: 'all' }));\n                    }\n                } else if (elem.childElementCount) {\n                    candidates = candidates.concat(getSpatialNavigationCandidates(elem, { mode: 'all' }));\n                }\n            }\n        }\n\n        //   console.log(candidates)\n        return option.mode === 'all' ? candidates : candidates.filter(isVisible);\n    }\n\n    /**\n     * Find the candidates among focusable elements within a spatial navigation container from the search origin (currently focused element)\n     * depending on the directional information.\n     * @function getFilteredSpatialNavigationCandidates\n     * @param element {Node} - The currently focused element which is defined as 'search origin' in the spec\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @param candidates {sequence<Node>} - The candidates for spatial navigation without the directional information\n     * @param container {Node} - The spatial navigation container\n     * @returns {Node} The candidates for spatial navigation considering the directional information\n     */\n    function getFilteredSpatialNavigationCandidates(element, dir, candidates, container) {\n        const targetElement = element;\n        // Removed below line due to a bug. (iframe body rect is sometime weird.)\n        // const targetElement = (element.nodeName === 'IFRAME') ? element.contentDocument.body : element;\n        // If the container is unknown, get the closest container from the element\n        container = container || targetElement.getSpatialNavigationContainer();\n\n        // If the candidates is unknown, find candidates\n        // 5-1\n        candidates = !candidates || candidates.length <= 0 ? getSpatialNavigationCandidates(container) : candidates;\n        return filteredCandidates(targetElement, candidates, dir, container);\n    }\n\n    /**\n     * Find the best candidate among the candidates within the container from the search origin (currently focused element)\n     * @see {@link https://drafts.csswg.org/css-nav-1/#dom-element-spatialnavigationsearch}\n     * @function spatialNavigationSearch\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @param candidates {sequence<Node>} - The candidates for spatial navigation\n     * @param container {Node} - The spatial navigation container\n     * @returns {Node} The best candidate which will gain the focus\n     */\n    function spatialNavigationSearch(dir, args) {\n        const targetElement = this;\n        let internalCandidates = [];\n        let externalCandidates = [];\n        let insideOverlappedCandidates = getOverlappedCandidates(targetElement);\n        let bestTarget;\n\n        // Set default parameter value\n        if (!args) args = {};\n\n        const defaultContainer = targetElement.getSpatialNavigationContainer();\n        let defaultCandidates = getSpatialNavigationCandidates(defaultContainer);\n        const container = args.container || defaultContainer;\n        if (args.container && defaultContainer.contains(args.container)) {\n            defaultCandidates = defaultCandidates.concat(getSpatialNavigationCandidates(container));\n        }\n        const candidates =\n            args.candidates && args.candidates.length > 0\n                ? args.candidates.filter((candidate) => container.contains(candidate))\n                : defaultCandidates.filter((candidate) => container.contains(candidate) && container !== candidate);\n\n        // Find the best candidate\n        // 5\n        // If startingPoint is either a scroll container or the document,\n        // find the best candidate within startingPoint\n        if (candidates && candidates.length > 0) {\n            // Divide internal or external candidates\n            candidates.forEach((candidate) => {\n                if (candidate !== targetElement) {\n                    (targetElement.contains(candidate) && targetElement !== candidate\n                            ? internalCandidates\n                            : externalCandidates\n                    ).push(candidate);\n                }\n            });\n\n            // include overlapped element to the internalCandidates\n            let fullyOverlapped = insideOverlappedCandidates.filter(\n                (candidate) => !internalCandidates.includes(candidate),\n            );\n            let overlappedContainer = candidates.filter(\n                (candidate) => isContainer(candidate) && isEntirelyVisible(targetElement, candidate),\n            );\n            let overlappedByParent = overlappedContainer\n                .map((elm) => elm.focusableAreas())\n                .flat()\n                .filter((candidate) => candidate !== targetElement);\n\n            internalCandidates = internalCandidates\n                .concat(fullyOverlapped)\n                .filter((candidate) => container.contains(candidate));\n            externalCandidates = externalCandidates\n                .concat(overlappedByParent)\n                .filter((candidate) => container.contains(candidate));\n\n            // Filter external Candidates\n            if (externalCandidates.length > 0) {\n                externalCandidates = getFilteredSpatialNavigationCandidates(\n                    targetElement,\n                    dir,\n                    externalCandidates,\n                    container,\n                );\n            }\n\n            // If there isn't search origin element but search orgin rect exist  (search origin isn't in the layout case)\n            if (searchOriginRect) {\n                bestTarget = selectBestCandidate(\n                    targetElement,\n                    getFilteredSpatialNavigationCandidates(targetElement, dir, internalCandidates, container),\n                    dir,\n                );\n            }\n\n            if (internalCandidates && internalCandidates.length > 0 && !(targetElement.nodeName === 'INPUT')) {\n                bestTarget = selectBestCandidateFromEdge(targetElement, internalCandidates, dir);\n            }\n\n            bestTarget = bestTarget || selectBestCandidate(targetElement, externalCandidates, dir);\n\n            if (bestTarget && isDelegableContainer(bestTarget)) {\n                // if best target is delegable container, then find descendants candidate inside delegable container.\n                const innerTarget = getSpatialNavigationCandidates(bestTarget, {\n                    mode: 'all',\n                });\n                const descendantsBest =\n                    innerTarget.length > 0\n                        ? targetElement.spatialNavigationSearch(dir, {\n                            candidates: innerTarget,\n                            container: bestTarget,\n                        })\n                        : null;\n                if (descendantsBest) {\n                    bestTarget = descendantsBest;\n                } else if (!isFocusable(bestTarget)) {\n                    // if there is no target inside bestTarget and delegable container is not focusable,\n                    // then try to find another best target without curren best target.\n                    candidates.splice(candidates.indexOf(bestTarget), 1);\n                    bestTarget = candidates.length\n                        ? targetElement.spatialNavigationSearch(dir, {\n                            candidates: candidates,\n                            container: container,\n                        })\n                        : null;\n                }\n            }\n            return bestTarget;\n        }\n\n        return null;\n    }\n\n    /**\n     * Get the filtered candidate among candidates.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#select-the-best-candidate}\n     * @function filteredCandidates\n     * @param currentElm {Node} - The currently focused element which is defined as 'search origin' in the spec\n     * @param candidates {sequence<Node>} - The candidates for spatial navigation\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @param container {Node} - The spatial navigation container\n     * @returns {sequence<Node>} The filtered candidates which are not the search origin and not in the given spatial navigation direction from the search origin\n     */\n    // TODO: Need to fix filtering the candidates with more clean code\n    function filteredCandidates(currentElm, candidates, dir, container) {\n        const originalContainer = currentElm.getSpatialNavigationContainer();\n        let eventTargetRect;\n\n        // If D(dir) is null, let candidates be the same as visibles\n        if (dir === undefined) return candidates;\n\n        // Offscreen handling when originalContainer is not <HTML>\n        if (originalContainer.parentElement && container !== originalContainer && !isVisible(currentElm)) {\n            eventTargetRect = getBoundingClientRect(originalContainer);\n        } else {\n            eventTargetRect = searchOriginRect || getBoundingClientRect(currentElm);\n        }\n\n        /*\n         * Else, let candidates be the subset of the elements in visibles\n         * whose principal box’s geometric center is within the closed half plane\n         * whose boundary goes through the geometric center of starting point and is perpendicular to D.\n         */\n        if ((isContainer(currentElm) || currentElm.nodeName === 'BODY') && !(currentElm.nodeName === 'INPUT')) {\n            return candidates.filter((candidate) => {\n                const candidateRect = getBoundingClientRect(candidate);\n                return (\n                    container.contains(candidate) &&\n                    ((currentElm.contains(candidate) &&\n                        isInside(eventTargetRect, candidateRect) &&\n                        candidate !== currentElm) ||\n                        isOutside(candidateRect, eventTargetRect, dir))\n                );\n            });\n        } else {\n            return candidates.filter((candidate) => {\n                const candidateRect = getBoundingClientRect(candidate);\n                const candidateBody = candidate.nodeName === 'IFRAME' ? candidate.contentDocument.body : null;\n                return (\n                    container.contains(candidate) &&\n                    candidate !== currentElm &&\n                    candidateBody !== currentElm &&\n                    isOutside(candidateRect, eventTargetRect, dir) &&\n                    !isInside(eventTargetRect, candidateRect)\n                );\n            });\n        }\n    }\n\n    /**\n     * Select the best candidate among given candidates.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#select-the-best-candidate}\n     * @function selectBestCandidate\n     * @param currentElm {Node} - The currently focused element which is defined as 'search origin' in the spec\n     * @param candidates {sequence<Node>} - The candidates for spatial navigation\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {Node} The best candidate which will gain the focus\n     */\n    function selectBestCandidate(currentElm, candidates, dir) {\n        const container = currentElm.getSpatialNavigationContainer();\n        const spatialNavigationFunction = getComputedStyle(container).getPropertyValue('--spatial-navigation-function');\n        const currentTargetRect = searchOriginRect || getBoundingClientRect(currentElm);\n        let distanceFunction;\n        let alignedCandidates;\n\n        switch (spatialNavigationFunction) {\n            case 'grid':\n                alignedCandidates = candidates.filter((elm) =>\n                    isAligned(currentTargetRect, getBoundingClientRect(elm), dir),\n                );\n                if (alignedCandidates.length > 0) {\n                    candidates = alignedCandidates;\n                }\n                distanceFunction = getAbsoluteDistance;\n                break;\n            default:\n                distanceFunction = getDistance;\n                break;\n        }\n        return getClosestElement(currentElm, candidates, dir, distanceFunction);\n    }\n\n    /**\n     * Select the best candidate among candidates by finding the closet candidate from the edge of the currently focused element (search origin).\n     * @see {@link https://drafts.csswg.org/css-nav-1/#select-the-best-candidate (Step 5)}\n     * @function selectBestCandidateFromEdge\n     * @param currentElm {Node} - The currently focused element which is defined as 'search origin' in the spec\n     * @param candidates {sequence<Node>} - The candidates for spatial navigation\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {Node} The best candidate which will gain the focus\n     */\n    function selectBestCandidateFromEdge(currentElm, candidates, dir) {\n        if (startingPoint) return getClosestElement(currentElm, candidates, dir, getDistanceFromPoint);\n        else return getClosestElement(currentElm, candidates, dir, getInnerDistance);\n    }\n\n    /**\n     * Select the closest candidate from the currently focused element (search origin) among candidates by using the distance function.\n     * @function getClosestElement\n     * @param currentElm {Node} - The currently focused element which is defined as 'search origin' in the spec\n     * @param candidates {sequence<Node>} - The candidates for spatial navigation\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @param distanceFunction {function} - The distance function which measures the distance from the search origin to each candidate\n     * @returns {Node} The candidate which is the closest one from the search origin\n     */\n    function getClosestElement(currentElm, candidates, dir, distanceFunction) {\n        let eventTargetRect = null;\n        if (\n            window.location !== window.parent.location &&\n            (currentElm.nodeName === 'BODY' || currentElm.nodeName === 'HTML')\n        ) {\n            // If the eventTarget is iframe, then get rect of it based on its containing document\n            // Set the iframe's position as (0,0) because the rects of elements inside the iframe don't know the real iframe's position.\n            eventTargetRect = window.frameElement.getBoundingClientRect();\n            eventTargetRect.x = 0;\n            eventTargetRect.y = 0;\n        } else {\n            eventTargetRect = searchOriginRect || currentElm.getBoundingClientRect();\n        }\n\n        let minDistance = Number.POSITIVE_INFINITY;\n        let minDistanceElements = [];\n\n        if (candidates) {\n            for (let i = 0; i < candidates.length; i++) {\n                const distance = distanceFunction(eventTargetRect, getBoundingClientRect(candidates[i]), dir);\n\n                // If the same distance, the candidate will be selected in the DOM order\n                if (distance < minDistance) {\n                    minDistance = distance;\n                    minDistanceElements = [candidates[i]];\n                } else if (distance === minDistance) {\n                    minDistanceElements.push(candidates[i]);\n                }\n            }\n        }\n        if (minDistanceElements.length === 0) return null;\n\n        return minDistanceElements.length > 1 && distanceFunction === getAbsoluteDistance\n            ? getClosestElement(currentElm, minDistanceElements, dir, getEuclideanDistance)\n            : minDistanceElements[0];\n    }\n\n    /**\n     * Get container of an element.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#dom-element-getspatialnavigationcontainer}\n     * @module Element\n     * @function getSpatialNavigationContainer\n     * @returns {Node} The spatial navigation container\n     */\n    function getSpatialNavigationContainer() {\n        let container = this;\n\n        do {\n            if (!container.parentElement) {\n                if (window.location !== window.parent.location) {\n                    container = window.parent.document.documentElement;\n                } else {\n                    container = window.document.documentElement;\n                }\n                break;\n            } else {\n                container = container.parentElement;\n            }\n\n            // console.log(container, isContainer(container));\n        } while (!isContainer(container));\n        return container;\n    }\n\n    /**\n     * Get nearest scroll container of an element.\n     * @function getScrollContainer\n     * @param Element\n     * @returns {Node} The spatial navigation container\n     */\n    function getScrollContainer(element) {\n        let scrollContainer = element;\n\n        do {\n            if (!scrollContainer.parentElement) {\n                if (window.location !== window.parent.location) {\n                    scrollContainer = window.parent.document.documentElement;\n                } else {\n                    scrollContainer = window.document.documentElement;\n                }\n                break;\n            } else {\n                scrollContainer = scrollContainer.parentElement;\n            }\n        } while (!isScrollContainer(scrollContainer) || !isVisible(scrollContainer));\n\n        if (scrollContainer === document || scrollContainer === document.documentElement) {\n            scrollContainer = window;\n        }\n\n        return scrollContainer;\n    }\n\n    /**\n     * Find focusable elements within the spatial navigation container.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#dom-element-focusableareas}\n     * @function focusableAreas\n     * @param option {FocusableAreasOptions} - 'mode' attribute takes 'visible' or 'all' for searching the boundary of focusable elements.\n     *                                          Default value is 'visible'.\n     * @returns {sequence<Node>} All focusable elements or only visible focusable elements within the container\n     */\n    function focusableAreas(option = { mode: 'visible' }) {\n        const container = this.parentElement ? this : document.body;\n        const focusables = Array.prototype.filter.call(container.getElementsByTagName('*'), isFocusable);\n        return option.mode === 'all' ? focusables : focusables.filter(isVisible);\n    }\n\n    /**\n     * Create the NavigationEvent: navbeforefocus, navnotarget\n     * @see {@link https://drafts.csswg.org/css-nav-1/#events-navigationevent}\n     * @function createSpatNavEvents\n     * @param option {string} - Type of the navigation event (beforefocus, notarget)\n     * @param element {Node} - The target element of the event\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     */\n    function createSpatNavEvents(eventType, containerElement, currentElement, direction) {\n        if (['beforefocus', 'notarget'].includes(eventType)) {\n            const data = {\n                causedTarget: currentElement,\n                dir: direction,\n            };\n            const triggeredEvent = new CustomEvent('nav' + eventType, {\n                bubbles: true,\n                cancelable: true,\n                detail: data,\n            });\n            return containerElement.dispatchEvent(triggeredEvent);\n        }\n    }\n\n    /**\n     * Get the value of the CSS custom property of the element\n     * @function readCssVar\n     * @param element {Node}\n     * @param varName {string} - The name of the css custom property without '--'\n     * @returns {string} The value of the css custom property\n     */\n    function readCssVar(element, varName) {\n        return getComputedStyle(element).getPropertyValue(`--${varName}`).trim();\n    }\n\n    /**\n     * Decide whether or not the 'contain' value is given to 'spatial-navigation-contain' css property of an element\n     * @function isCSSSpatNavContain\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isCSSSpatNavContain(element) {\n        return readCssVar(element, 'spatial-navigation-contain') === 'contain';\n    }\n\n    /**\n     * Return the value of 'spatial-navigation-action' css property of an element\n     * @function getCSSSpatNavAction\n     * @param element {Node} - would be the spatial navigation container\n     * @returns {string} auto | focus | scroll\n     */\n    function getCSSSpatNavAction(element) {\n        return 'focus';\n        //   return readCssVar(element, 'spatial-navigation-action') || 'auto';\n    }\n\n    /**\n     * Only move the focus with spatial navigation. Manually scrolling isn't available.\n     * @function navigateChain\n     * @param eventTarget {Node} - currently focused element\n     * @param container {SpatialNavigationContainer} - container\n     * @param parentContainer {SpatialNavigationContainer} - parent container\n     * @param option - visible || all\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     */\n    function navigateChain(eventTarget, container, parentContainer, dir, option) {\n        let currentOption = {\n            candidates: getSpatialNavigationCandidates(container, { mode: option }),\n            container,\n        };\n        //   console.log(currentOption)\n\n        while (parentContainer) {\n            if (focusingController(eventTarget.spatialNavigationSearch(dir, currentOption), dir)) {\n                return;\n            } else {\n                if (option === 'visible' && scrollingController(container, dir)) return;\n                else {\n                    if (!createSpatNavEvents('notarget', container, eventTarget, dir)) return;\n\n                    // find the container\n                    if (container === document || container === document.documentElement) {\n                        if (window.location !== window.parent.location) {\n                            // The page is in an iframe. eventTarget needs to be reset because the position of the element in the iframe\n                            eventTarget = window.frameElement;\n                            container = eventTarget.ownerDocument.documentElement;\n                        }\n                    } else {\n                        container = parentContainer;\n                    }\n                    currentOption = {\n                        candidates: getSpatialNavigationCandidates(container, {\n                            mode: option,\n                        }),\n                        container,\n                    };\n                    let nextContainer = container.getSpatialNavigationContainer();\n\n                    if (nextContainer !== container) {\n                        parentContainer = nextContainer;\n                    } else {\n                        parentContainer = null;\n                    }\n                }\n            }\n        }\n\n        currentOption = {\n            candidates: getSpatialNavigationCandidates(container, { mode: option }),\n            container,\n        };\n\n        // Behavior after 'navnotarget' - Getting out from the current spatnav container\n        if (\n            !parentContainer &&\n            container &&\n            focusingController(eventTarget.spatialNavigationSearch(dir, currentOption), dir)\n        )\n            return;\n\n        if (!createSpatNavEvents('notarget', currentOption.container, eventTarget, dir)) return;\n\n        if (getCSSSpatNavAction(container) === 'auto' && option === 'visible') {\n            if (scrollingController(container, dir)) return;\n        }\n    }\n\n    /**\n     * Find search origin\n     * @see {@link https://drafts.csswg.org/css-nav-1/#nav}\n     * @function findSearchOrigin\n     * @returns {Node} The search origin for the spatial navigation\n     */\n    function findSearchOrigin() {\n        let searchOrigin = document.activeElement;\n\n        if (!searchOrigin || (searchOrigin === document.body && !document.querySelector(':focus'))) {\n            // When the previous search origin lost its focus by blur: (1) disable attribute (2) visibility: hidden\n            if (savedSearchOrigin.element && searchOrigin !== savedSearchOrigin.element) {\n                const elementStyle = window.getComputedStyle(savedSearchOrigin.element, null);\n                const invisibleStyle = ['hidden', 'collapse'];\n\n                if (\n                    savedSearchOrigin.element.disabled ||\n                    invisibleStyle.includes(elementStyle.getPropertyValue('visibility'))\n                ) {\n                    searchOrigin = savedSearchOrigin.element;\n                    return searchOrigin;\n                }\n            }\n            searchOrigin = document.documentElement;\n        }\n        // When the previous search origin lost its focus by blur: (1) display:none () element size turned into zero\n        if (\n            savedSearchOrigin.element &&\n            (getBoundingClientRect(savedSearchOrigin.element).height === 0 ||\n                getBoundingClientRect(savedSearchOrigin.element).width === 0)\n        ) {\n            (startingPoint = (savedSearchOrigin.left + savedSearchOrigin.right) / 2),\n            (savedSearchOrigin.top + savedSearchOrigin.bottom) / 2;\n            // searchOriginRect = savedSearchOrigin.rect;\n        }\n\n        if (!isVisibleInScroller(searchOrigin)) {\n            const scroller = getScrollContainer(searchOrigin);\n            if (scroller && (scroller === window || getCSSSpatNavAction(scroller) === 'auto')) return scroller;\n        }\n        return searchOrigin;\n    }\n\n    /**\n     * Move the scroll of an element depending on the given spatial navigation directrion\n     * (Assume that User Agent defined distance is '40px')\n     * @see {@link https://drafts.csswg.org/css-nav-1/#directionally-scroll-an-element}\n     * @function moveScroll\n     * @param element {Node} - The scrollable element\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @param offset {Number} - The explicit amount of offset for scrolling. Default value is 0.\n     */\n    function moveScroll(element, dir, offset = 0) {\n        if (element) {\n            switch (dir) {\n                case 'left':\n                    element.scrollLeft -= 40 + offset;\n                    break;\n                case 'right':\n                    element.scrollLeft += 40 + offset;\n                    break;\n                case 'up':\n                    element.scrollTop -= 40 + offset;\n                    break;\n                case 'down':\n                    element.scrollTop += 40 + offset;\n                    break;\n            }\n        }\n    }\n\n    /**\n     * Decide whether an element is container or not.\n     * @function isContainer\n     * @param element {Node} element\n     * @returns {boolean}\n     */\n    function isContainer(element) {\n        return (\n            !element.parentElement ||\n            element.nodeName === 'IFRAME' ||\n            isScrollContainer(element) ||\n            isCSSSpatNavContain(element)\n        );\n    }\n\n    /**\n     * Decide whether an element is delegable container or not.\n     * NOTE: THIS IS NON-NORMATIVE API.\n     * @function isDelegableContainer\n     * @param element {Node} element\n     * @returns {boolean}\n     */\n    function isDelegableContainer(element) {\n        return readCssVar(element, 'spatial-navigation-contain') === 'delegable';\n    }\n\n    /**\n     * Decide whether an element is a scrollable container or not.\n     * @see {@link https://drafts.csswg.org/css-overflow-3/#scroll-container}\n     * @function isScrollContainer\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isScrollContainer(element) {\n        const elementStyle = window.getComputedStyle(element, null);\n        const overflowX = elementStyle.getPropertyValue('overflow-x');\n        const overflowY = elementStyle.getPropertyValue('overflow-y');\n\n        return (overflowX !== 'visible' && overflowX !== 'clip' && isOverflow(element, 'left')) ||\n        (overflowY !== 'visible' && overflowY !== 'clip' && isOverflow(element, 'down'))\n            ? true\n            : false;\n    }\n\n    /**\n     * Decide whether this element is scrollable or not.\n     * NOTE: If the value of 'overflow' is given to either 'visible', 'clip', or 'hidden', the element isn't scrollable.\n     *       If the value is 'hidden', the element can be only programmically scrollable. (https://drafts.csswg.org/css-overflow-3/#valdef-overflow-hidden)\n     * @function isScrollable\n     * @param element {Node}\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {boolean}\n     */\n    function isScrollable(element, dir) {\n        // element, dir\n        if (element && typeof element === 'object') {\n            if (dir && typeof dir === 'string') {\n                // parameter: dir, element\n                if (isOverflow(element, dir)) {\n                    // style property\n                    const elementStyle = window.getComputedStyle(element, null);\n                    const overflowX = elementStyle.getPropertyValue('overflow-x');\n                    const overflowY = elementStyle.getPropertyValue('overflow-y');\n\n                    switch (dir) {\n                        case 'left':\n                        /* falls through */\n                        case 'right':\n                            return overflowX !== 'visible' && overflowX !== 'clip' && overflowX !== 'hidden';\n                        case 'up':\n                        /* falls through */\n                        case 'down':\n                            return overflowY !== 'visible' && overflowY !== 'clip' && overflowY !== 'hidden';\n                    }\n                }\n                return false;\n            } else {\n                // parameter: element\n                return (\n                    element.nodeName === 'HTML' ||\n                    element.nodeName === 'BODY' ||\n                    (isScrollContainer(element) && isOverflow(element))\n                );\n            }\n        }\n    }\n\n    /**\n     * Decide whether an element is overflow or not.\n     * @function isOverflow\n     * @param element {Node}\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {boolean}\n     */\n    function isOverflow(element, dir) {\n        if (element && typeof element === 'object') {\n            if (dir && typeof dir === 'string') {\n                // parameter: element, dir\n                switch (dir) {\n                    case 'left':\n                    /* falls through */\n                    case 'right':\n                        return element.scrollWidth > element.clientWidth;\n                    case 'up':\n                    /* falls through */\n                    case 'down':\n                        return element.scrollHeight > element.clientHeight;\n                }\n            } else {\n                // parameter: element\n                return element.scrollWidth > element.clientWidth || element.scrollHeight > element.clientHeight;\n            }\n            return false;\n        }\n    }\n\n    /**\n     * Decide whether the scrollbar of the browsing context reaches to the end or not.\n     * @function isHTMLScrollBoundary\n     * @param element {Node} - The top browsing context\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {boolean}\n     */\n    function isHTMLScrollBoundary(element, dir) {\n        let result = false;\n        switch (dir) {\n            case 'left':\n                result = element.scrollLeft === 0;\n                break;\n            case 'right':\n                result = element.scrollWidth - element.scrollLeft - element.clientWidth === 0;\n                break;\n            case 'up':\n                result = element.scrollTop === 0;\n                break;\n            case 'down':\n                result = element.scrollHeight - element.scrollTop - element.clientHeight === 0;\n                break;\n        }\n        return result;\n    }\n\n    /**\n     * Decide whether the scrollbar of an element reaches to the end or not.\n     * @function isScrollBoundary\n     * @param element {Node}\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {boolean}\n     */\n    function isScrollBoundary(element, dir) {\n        if (isScrollable(element, dir)) {\n            const winScrollY = element.scrollTop;\n            const winScrollX = element.scrollLeft;\n\n            const height = element.scrollHeight - element.clientHeight;\n            const width = element.scrollWidth - element.clientWidth;\n\n            switch (dir) {\n                case 'left':\n                    return winScrollX === 0;\n                case 'right':\n                    return Math.abs(winScrollX - width) <= 1;\n                case 'up':\n                    return winScrollY === 0;\n                case 'down':\n                    return Math.abs(winScrollY - height) <= 1;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Decide whether an element is inside the scorller viewport or not\n     *\n     * @function isVisibleInScroller\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isVisibleInScroller(element) {\n        const elementRect = element.getBoundingClientRect();\n        let nearestScroller = getScrollContainer(element);\n\n        let scrollerRect = null;\n        if (nearestScroller !== window) {\n            scrollerRect = getBoundingClientRect(nearestScroller);\n        } else {\n            scrollerRect = new DOMRect(0, 0, window.innerWidth, window.innerHeight);\n        }\n\n        if (isInside(scrollerRect, elementRect, 'left') && isInside(scrollerRect, elementRect, 'down')) return true;\n        else return false;\n    }\n\n    /**\n     * Decide whether an element is focusable for spatial navigation.\n     * 1. If element is the browsing context (document, iframe), then it's focusable,\n     * 2. If the element is scrollable container (regardless of scrollable axis), then it's focusable,\n     * 3. The value of tabIndex >= 0, then it's focusable,\n     * 4. If the element is disabled, it isn't focusable,\n     * 5. If the element is expressly inert, it isn't focusable,\n     * 6. Whether the element is being rendered or not.\n     *\n     * @function isFocusable\n     * @param element {Node}\n     * @returns {boolean}\n     *\n     * @see {@link https://html.spec.whatwg.org/multipage/interaction.html#focusable-area}\n     */\n    function isFocusable(element) {\n        if (\n            element.tabIndex < 0 ||\n            isAtagWithoutHref(element) ||\n            isActuallyDisabled(element) ||\n            isExpresslyInert(element) ||\n            !isBeingRendered(element)\n        )\n            return false;\n        else if (!element.parentElement || (isScrollable(element) && isOverflow(element)) || element.tabIndex >= 0)\n            return true;\n    }\n\n    /**\n     * Decide whether an element is a tag without href attribute or not.\n     *\n     * @function isAtagWithoutHref\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isAtagWithoutHref(element) {\n        return (\n            element.tagName === 'A' &&\n            element.getAttribute('href') === null &&\n            element.getAttribute('tabIndex') === null\n        );\n    }\n\n    /**\n     * Decide whether an element is actually disabled or not.\n     *\n     * @function isActuallyDisabled\n     * @param element {Node}\n     * @returns {boolean}\n     *\n     * @see {@link https://html.spec.whatwg.org/multipage/semantics-other.html#concept-element-disabled}\n     */\n    function isActuallyDisabled(element) {\n        if (['BUTTON', 'INPUT', 'SELECT', 'TEXTAREA', 'OPTGROUP', 'OPTION', 'FIELDSET'].includes(element.tagName))\n            return element.disabled;\n        else return false;\n    }\n\n    /**\n     * Decide whether the element is expressly inert or not.\n     * @see {@link https://html.spec.whatwg.org/multipage/interaction.html#expressly-inert}\n     * @function isExpresslyInert\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isExpresslyInert(element) {\n        return element.inert && !element.ownerDocument.documentElement.inert;\n    }\n\n    /**\n     * Decide whether the element is being rendered or not.\n     * 1. If an element has the style as \"visibility: hidden | collapse\" or \"display: none\", it is not being rendered.\n     * 2. If an element has the style as \"opacity: 0\", it is not being rendered.(that is, invisible).\n     * 3. If width and height of an element are explicitly set to 0, it is not being rendered.\n     * 4. If a parent element is hidden, an element itself is not being rendered.\n     * (CSS visibility property and display property are inherited.)\n     * @see {@link https://html.spec.whatwg.org/multipage/rendering.html#being-rendered}\n     * @function isBeingRendered\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isBeingRendered(element) {\n        if (!isVisibleStyleProperty(element.parentElement)) return false;\n        if (\n            !isVisibleStyleProperty(element) ||\n            element.style.opacity === '0' ||\n            window.getComputedStyle(element).height === '0px' ||\n            window.getComputedStyle(element).width === '0px'\n        )\n            return false;\n        return true;\n    }\n\n    /**\n     * Decide whether this element is partially or completely visible to user agent.\n     * @function isVisible\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isVisible(element) {\n        return !element.parentElement || (isVisibleStyleProperty(element) && hitTest(element));\n    }\n\n    /**\n     * Decide whether this element is completely visible in this viewport for the arrow direction.\n     * @function isEntirelyVisible\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isEntirelyVisible(element, container) {\n        const rect = getBoundingClientRect(element);\n        const containerElm = container || element.getSpatialNavigationContainer();\n        const containerRect = getBoundingClientRect(containerElm);\n\n        // FIXME: when element is bigger than container?\n        const entirelyVisible = !(\n            rect.left < containerRect.left ||\n            rect.right > containerRect.right ||\n            rect.top < containerRect.top ||\n            rect.bottom > containerRect.bottom\n        );\n\n        return entirelyVisible;\n    }\n\n    /**\n     * Decide the style property of this element is specified whether it's visible or not.\n     * @function isVisibleStyleProperty\n     * @param element {CSSStyleDeclaration}\n     * @returns {boolean}\n     */\n    function isVisibleStyleProperty(element) {\n        const elementStyle = window.getComputedStyle(element, null);\n        const thisVisibility = elementStyle.getPropertyValue('visibility');\n        const thisDisplay = elementStyle.getPropertyValue('display');\n        const invisibleStyle = ['hidden', 'collapse'];\n\n        return thisDisplay !== 'none' && !invisibleStyle.includes(thisVisibility);\n    }\n\n    /**\n     * Decide whether this element is entirely or partially visible within the viewport.\n     * @function hitTest\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function hitTest(element) {\n        const elementRect = getBoundingClientRect(element);\n        if (\n            element.nodeName !== 'IFRAME' &&\n            (elementRect.top < 0 ||\n                elementRect.left < 0 ||\n                elementRect.top > element.ownerDocument.documentElement.clientHeight ||\n                elementRect.left > element.ownerDocument.documentElement.clientWidth)\n        )\n            return false;\n\n        let offsetX = parseInt(element.offsetWidth) / 10;\n        let offsetY = parseInt(element.offsetHeight) / 10;\n\n        offsetX = isNaN(offsetX) ? 1 : offsetX;\n        offsetY = isNaN(offsetY) ? 1 : offsetY;\n\n        const hitTestPoint = {\n            // For performance, just using the three point(middle, leftTop, rightBottom) of the element for hit testing\n            middle: [(elementRect.left + elementRect.right) / 2, (elementRect.top + elementRect.bottom) / 2],\n            leftTop: [elementRect.left + offsetX, elementRect.top + offsetY],\n            rightBottom: [elementRect.right - offsetX, elementRect.bottom - offsetY],\n        };\n\n        for (const point in hitTestPoint) {\n            const elemFromPoint = element.ownerDocument.elementFromPoint(...hitTestPoint[point]);\n            if (element === elemFromPoint || element.contains(elemFromPoint)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Decide whether a child element is entirely or partially Included within container visually.\n     * @function isInside\n     * @param containerRect {DOMRect}\n     * @param childRect {DOMRect}\n     * @returns {boolean}\n     */\n    function isInside(containerRect, childRect) {\n        const rightEdgeCheck = containerRect.left < childRect.right && containerRect.right >= childRect.right;\n        const leftEdgeCheck = containerRect.left <= childRect.left && containerRect.right > childRect.left;\n        const topEdgeCheck = containerRect.top <= childRect.top && containerRect.bottom > childRect.top;\n        const bottomEdgeCheck = containerRect.top < childRect.bottom && containerRect.bottom >= childRect.bottom;\n        return (rightEdgeCheck || leftEdgeCheck) && (topEdgeCheck || bottomEdgeCheck);\n    }\n\n    /**\n     * Decide whether this element is entirely or partially visible within the viewport.\n     * Note: rect1 is outside of rect2 for the dir\n     * @function isOutside\n     * @param rect1 {DOMRect}\n     * @param rect2 {DOMRect}\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {boolean}\n     */\n    function isOutside(rect1, rect2, dir) {\n        switch (dir) {\n            case 'left':\n                return isRightSide(rect2, rect1);\n            case 'right':\n                return isRightSide(rect1, rect2);\n            case 'up':\n                return isBelow(rect2, rect1);\n            case 'down':\n                return isBelow(rect1, rect2);\n            default:\n                return false;\n        }\n    }\n\n    /* rect1 is right of rect2 */\n    function isRightSide(rect1, rect2) {\n        return (\n            rect1.left >= rect2.right ||\n            (rect1.left >= rect2.left &&\n                rect1.right > rect2.right &&\n                rect1.bottom > rect2.top &&\n                rect1.top < rect2.bottom)\n        );\n    }\n\n    /* rect1 is below of rect2 */\n    function isBelow(rect1, rect2) {\n        return (\n            rect1.top >= rect2.bottom ||\n            (rect1.top >= rect2.top &&\n                rect1.bottom > rect2.bottom &&\n                rect1.left < rect2.right &&\n                rect1.right > rect2.left)\n        );\n    }\n\n    /* rect1 is completely aligned or partially aligned for the direction */\n    function isAligned(rect1, rect2, dir) {\n        switch (dir) {\n            case 'left':\n            /* falls through */\n            case 'right':\n                return rect1.bottom > rect2.top && rect1.top < rect2.bottom;\n            case 'up':\n            /* falls through */\n            case 'down':\n                return rect1.right > rect2.left && rect1.left < rect2.right;\n            default:\n                return false;\n        }\n    }\n\n    /**\n     * Get distance between the search origin and a candidate element along the direction when candidate element is inside the search origin.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#find-the-shortest-distance}\n     * @function getDistanceFromPoint\n     * @param point {Point} - The search origin\n     * @param element {DOMRect} - A candidate element\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {Number} The euclidian distance between the spatial navigation container and an element inside it\n     */\n    function getDistanceFromPoint(point, element, dir) {\n        point = startingPoint;\n        // Get exit point, entry point -> {x: '', y: ''};\n        const points = getEntryAndExitPoints(dir, point, element);\n\n        // Find the points P1 inside the border box of starting point and P2 inside the border box of candidate\n        // that minimize the distance between these two points\n        const P1 = Math.abs(points.entryPoint.x - points.exitPoint.x);\n        const P2 = Math.abs(points.entryPoint.y - points.exitPoint.y);\n\n        // The result is euclidian distance between P1 and P2.\n        return Math.sqrt(Math.pow(P1, 2) + Math.pow(P2, 2));\n    }\n\n    /**\n     * Get distance between the search origin and a candidate element along the direction when candidate element is inside the search origin.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#find-the-shortest-distance}\n     * @function getInnerDistance\n     * @param rect1 {DOMRect} - The search origin\n     * @param rect2 {DOMRect} - A candidate element\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {Number} The euclidean distance between the spatial navigation container and an element inside it\n     */\n    function getInnerDistance(rect1, rect2, dir) {\n        const baseEdgeForEachDirection = {\n            left: 'right',\n            right: 'left',\n            up: 'bottom',\n            down: 'top',\n        };\n        const baseEdge = baseEdgeForEachDirection[dir];\n\n        return Math.abs(rect1[baseEdge] - rect2[baseEdge]);\n    }\n\n    /**\n     * Get the distance between the search origin and a candidate element considering the direction.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#calculating-the-distance}\n     * @function getDistance\n     * @param searchOrigin {DOMRect | Point} - The search origin\n     * @param candidateRect {DOMRect} - A candidate element\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {Number} The distance scoring between two elements\n     */\n    function getDistance(searchOrigin, candidateRect, dir) {\n        const kOrthogonalWeightForLeftRight = 30;\n        const kOrthogonalWeightForUpDown = 2;\n\n        let orthogonalBias = 0;\n        let alignBias = 0;\n        const alignWeight = 5.0;\n\n        // Get exit point, entry point -> {x: '', y: ''};\n        const points = getEntryAndExitPoints(dir, searchOrigin, candidateRect);\n\n        // Find the points P1 inside the border box of starting point and P2 inside the border box of candidate\n        // that minimize the distance between these two points\n        const P1 = Math.abs(points.entryPoint.x - points.exitPoint.x);\n        const P2 = Math.abs(points.entryPoint.y - points.exitPoint.y);\n\n        // A: The euclidean distance between P1 and P2.\n        const A = Math.sqrt(Math.pow(P1, 2) + Math.pow(P2, 2));\n        let B, C;\n\n        // B: The absolute distance in the direction which is orthogonal to dir between P1 and P2, or 0 if dir is null.\n        // C: The intersection edges between a candidate and the starting point.\n\n        // D: The square root of the area of intersection between the border boxes of candidate and starting point\n        const intersectionRect = getIntersectionRect(searchOrigin, candidateRect);\n        const D = intersectionRect.area;\n\n        switch (dir) {\n            case 'left':\n            /* falls through */\n            case 'right':\n                // If two elements are aligned, add align bias\n                // else, add orthogonal bias\n                if (isAligned(searchOrigin, candidateRect, dir))\n                    alignBias = Math.min(intersectionRect.height / searchOrigin.height, 1);\n                else orthogonalBias = searchOrigin.height / 2;\n\n                B = (P2 + orthogonalBias) * kOrthogonalWeightForLeftRight;\n                C = alignWeight * alignBias;\n                break;\n\n            case 'up':\n            /* falls through */\n            case 'down':\n                // If two elements are aligned, add align bias\n                // else, add orthogonal bias\n                if (isAligned(searchOrigin, candidateRect, dir))\n                    alignBias = Math.min(intersectionRect.width / searchOrigin.width, 1);\n                else orthogonalBias = searchOrigin.width / 2;\n\n                B = (P1 + orthogonalBias) * kOrthogonalWeightForUpDown;\n                C = alignWeight * alignBias;\n                break;\n\n            default:\n                B = 0;\n                C = 0;\n                break;\n        }\n\n        return A + B - C - D;\n    }\n\n    /**\n     * Get the euclidean distance between the search origin and a candidate element considering the direction.\n     * @function getEuclideanDistance\n     * @param rect1 {DOMRect} - The search origin\n     * @param rect2 {DOMRect} - A candidate element\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {Number} The distance scoring between two elements\n     */\n    function getEuclideanDistance(rect1, rect2, dir) {\n        // Get exit point, entry point\n        const points = getEntryAndExitPoints(dir, rect1, rect2);\n\n        // Find the points P1 inside the border box of starting point and P2 inside the border box of candidate\n        // that minimize the distance between these two points\n        const P1 = Math.abs(points.entryPoint.x - points.exitPoint.x);\n        const P2 = Math.abs(points.entryPoint.y - points.exitPoint.y);\n\n        // Return the euclidean distance between P1 and P2.\n        return Math.sqrt(Math.pow(P1, 2) + Math.pow(P2, 2));\n    }\n\n    /**\n     * Get the absolute distance between the search origin and a candidate element considering the direction.\n     * @function getAbsoluteDistance\n     * @param rect1 {DOMRect} - The search origin\n     * @param rect2 {DOMRect} - A candidate element\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {Number} The distance scoring between two elements\n     */\n    function getAbsoluteDistance(rect1, rect2, dir) {\n        // Get exit point, entry point\n        const points = getEntryAndExitPoints(dir, rect1, rect2);\n\n        // Return the absolute distance in the dir direction between P1 and P.\n        return dir === 'left' || dir === 'right'\n            ? Math.abs(points.entryPoint.x - points.exitPoint.x)\n            : Math.abs(points.entryPoint.y - points.exitPoint.y);\n    }\n\n    /**\n     * Get entry point and exit point of two elements considering the direction.\n     * @function getEntryAndExitPoints\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD). Default value for dir is 'down'.\n     * @param searchOrigin {DOMRect | Point} - The search origin which contains the exit point\n     * @param candidateRect {DOMRect} - One of candidates which contains the entry point\n     * @returns {Points} The exit point from the search origin and the entry point from a candidate\n     */\n    function getEntryAndExitPoints(dir = 'down', searchOrigin, candidateRect) {\n        /**\n         * User type definition for Point\n         * @typeof {Object} Points\n         * @property {Point} Points.entryPoint\n         * @property {Point} Points.exitPoint\n         */\n        const points = { entryPoint: { x: 0, y: 0 }, exitPoint: { x: 0, y: 0 } };\n\n        if (startingPoint) {\n            points.exitPoint = searchOrigin;\n\n            switch (dir) {\n                case 'left':\n                    points.entryPoint.x = candidateRect.right;\n                    break;\n                case 'up':\n                    points.entryPoint.y = candidateRect.bottom;\n                    break;\n                case 'right':\n                    points.entryPoint.x = candidateRect.left;\n                    break;\n                case 'down':\n                    points.entryPoint.y = candidateRect.top;\n                    break;\n            }\n\n            // Set orthogonal direction\n            switch (dir) {\n                case 'left':\n                case 'right':\n                    if (startingPoint.y <= candidateRect.top) {\n                        points.entryPoint.y = candidateRect.top;\n                    } else if (startingPoint.y < candidateRect.bottom) {\n                        points.entryPoint.y = startingPoint.y;\n                    } else {\n                        points.entryPoint.y = candidateRect.bottom;\n                    }\n                    break;\n\n                case 'up':\n                case 'down':\n                    if (startingPoint.x <= candidateRect.left) {\n                        points.entryPoint.x = candidateRect.left;\n                    } else if (startingPoint.x < candidateRect.right) {\n                        points.entryPoint.x = startingPoint.x;\n                    } else {\n                        points.entryPoint.x = candidateRect.right;\n                    }\n                    break;\n            }\n        } else {\n            // Set direction\n            switch (dir) {\n                case 'left':\n                    points.exitPoint.x = searchOrigin.left;\n                    points.entryPoint.x =\n                        candidateRect.right < searchOrigin.left ? candidateRect.right : searchOrigin.left;\n                    break;\n                case 'up':\n                    points.exitPoint.y = searchOrigin.top;\n                    points.entryPoint.y =\n                        candidateRect.bottom < searchOrigin.top ? candidateRect.bottom : searchOrigin.top;\n                    break;\n                case 'right':\n                    points.exitPoint.x = searchOrigin.right;\n                    points.entryPoint.x =\n                        candidateRect.left > searchOrigin.right ? candidateRect.left : searchOrigin.right;\n                    break;\n                case 'down':\n                    points.exitPoint.y = searchOrigin.bottom;\n                    points.entryPoint.y =\n                        candidateRect.top > searchOrigin.bottom ? candidateRect.top : searchOrigin.bottom;\n                    break;\n            }\n\n            // Set orthogonal direction\n            switch (dir) {\n                case 'left':\n                case 'right':\n                    if (isBelow(searchOrigin, candidateRect)) {\n                        points.exitPoint.y = searchOrigin.top;\n                        points.entryPoint.y =\n                            candidateRect.bottom < searchOrigin.top ? candidateRect.bottom : searchOrigin.top;\n                    } else if (isBelow(candidateRect, searchOrigin)) {\n                        points.exitPoint.y = searchOrigin.bottom;\n                        points.entryPoint.y =\n                            candidateRect.top > searchOrigin.bottom ? candidateRect.top : searchOrigin.bottom;\n                    } else {\n                        points.exitPoint.y = Math.max(searchOrigin.top, candidateRect.top);\n                        points.entryPoint.y = points.exitPoint.y;\n                    }\n                    break;\n\n                case 'up':\n                case 'down':\n                    if (isRightSide(searchOrigin, candidateRect)) {\n                        points.exitPoint.x = searchOrigin.left;\n                        points.entryPoint.x =\n                            candidateRect.right < searchOrigin.left ? candidateRect.right : searchOrigin.left;\n                    } else if (isRightSide(candidateRect, searchOrigin)) {\n                        points.exitPoint.x = searchOrigin.right;\n                        points.entryPoint.x =\n                            candidateRect.left > searchOrigin.right ? candidateRect.left : searchOrigin.right;\n                    } else {\n                        points.exitPoint.x = Math.max(searchOrigin.left, candidateRect.left);\n                        points.entryPoint.x = points.exitPoint.x;\n                    }\n                    break;\n            }\n        }\n\n        return points;\n    }\n\n    /**\n     * Find focusable elements within the container\n     * @see {@link https://drafts.csswg.org/css-nav-1/#find-the-shortest-distance}\n     * @function getIntersectionRect\n     * @param rect1 {DOMRect} - The search origin which contains the exit point\n     * @param rect2 {DOMRect} - One of candidates which contains the entry point\n     * @returns {IntersectionArea} The intersection area between two elements.\n     *\n     * @typeof {Object} IntersectionArea\n     * @property {Number} IntersectionArea.width\n     * @property {Number} IntersectionArea.height\n     */\n    function getIntersectionRect(rect1, rect2) {\n        const intersection_rect = { width: 0, height: 0, area: 0 };\n\n        const new_location = [Math.max(rect1.left, rect2.left), Math.max(rect1.top, rect2.top)];\n        const new_max_point = [Math.min(rect1.right, rect2.right), Math.min(rect1.bottom, rect2.bottom)];\n\n        intersection_rect.width = Math.abs(new_location[0] - new_max_point[0]);\n        intersection_rect.height = Math.abs(new_location[1] - new_max_point[1]);\n\n        if (!(new_location[0] >= new_max_point[0] || new_location[1] >= new_max_point[1])) {\n            // intersecting-cases\n            intersection_rect.area = Math.sqrt(intersection_rect.width * intersection_rect.height);\n        }\n\n        return intersection_rect;\n    }\n\n    /**\n     * Handle the spatial navigation behavior for HTMLInputElement, HTMLTextAreaElement\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input|HTMLInputElement (MDN)}\n     * @function handlingEditableElement\n     * @param e {Event} - keydownEvent\n     * @returns {boolean}\n     */\n    function handlingEditableElement(e) {\n        const SPINNABLE_INPUT_TYPES = ['email', 'date', 'month', 'number', 'time', 'week'],\n            TEXT_INPUT_TYPES = ['password', 'text', 'search', 'tel', 'url', null];\n        const eventTarget = document.activeElement;\n        const startPosition = eventTarget.selectionStart;\n        const endPosition = eventTarget.selectionEnd;\n        const focusNavigableArrowKey = {\n            left: false,\n            up: false,\n            right: false,\n            down: false,\n        };\n\n        const dir = ARROW_KEY_CODE[e.keyCode];\n        if (dir === undefined) {\n            return focusNavigableArrowKey;\n        }\n\n        if (SPINNABLE_INPUT_TYPES.includes(eventTarget.getAttribute('type')) && (dir === 'up' || dir === 'down')) {\n            focusNavigableArrowKey[dir] = true;\n        } else if (TEXT_INPUT_TYPES.includes(eventTarget.getAttribute('type')) || eventTarget.nodeName === 'TEXTAREA') {\n            if (startPosition === endPosition) {\n                // if there isn't any selected text\n                if (startPosition === 0) {\n                    focusNavigableArrowKey.left = true;\n                    focusNavigableArrowKey.up = true;\n                }\n                if (endPosition === eventTarget.value.length) {\n                    focusNavigableArrowKey.right = true;\n                    focusNavigableArrowKey.down = true;\n                }\n            }\n        } else {\n            // HTMLDataListElement, HTMLSelectElement, HTMLOptGroup\n            focusNavigableArrowKey[dir] = true;\n        }\n\n        return focusNavigableArrowKey;\n    }\n\n    /**\n     * Get the DOMRect of an element\n     * @function getBoundingClientRect\n     * @param {Node} element\n     * @returns {DOMRect}\n     */\n    function getBoundingClientRect(element) {\n        // memoization\n        let rect = mapOfBoundRect && mapOfBoundRect.get(element);\n        if (!rect) {\n            const boundingClientRect = element.getBoundingClientRect();\n            rect = {\n                top: Number(boundingClientRect.top.toFixed(2)),\n                right: Number(boundingClientRect.right.toFixed(2)),\n                bottom: Number(boundingClientRect.bottom.toFixed(2)),\n                left: Number(boundingClientRect.left.toFixed(2)),\n                width: Number(boundingClientRect.width.toFixed(2)),\n                height: Number(boundingClientRect.height.toFixed(2)),\n            };\n            mapOfBoundRect && mapOfBoundRect.set(element, rect);\n        }\n        return rect;\n    }\n\n    /**\n     * Get the candidates which is fully inside the target element in visual\n     * @param {Node} targetElement\n     * @returns {sequence<Node>}  overlappedCandidates\n     */\n    function getOverlappedCandidates(targetElement) {\n        const container = targetElement.getSpatialNavigationContainer();\n        const candidates = container.focusableAreas();\n        const overlappedCandidates = [];\n\n        candidates.forEach((element) => {\n            if (targetElement !== element && isEntirelyVisible(element, targetElement)) {\n                overlappedCandidates.push(element);\n            }\n        });\n\n        return overlappedCandidates;\n    }\n\n    /**\n     * Get the list of the experimental APIs\n     * @function getExperimentalAPI\n     */\n    function getExperimentalAPI() {\n        function canScroll(container, dir) {\n            return (\n                (isScrollable(container, dir) && !isScrollBoundary(container, dir)) ||\n                (!container.parentElement && !isHTMLScrollBoundary(container, dir))\n            );\n        }\n\n        function findTarget(findCandidate, element, dir, option) {\n            let eventTarget = element;\n            let bestNextTarget = null;\n\n            // 4\n            if (eventTarget === document || eventTarget === document.documentElement) {\n                eventTarget = document.body || document.documentElement;\n            }\n\n            // 5\n            // At this point, spatialNavigationSearch can be applied.\n            // If startingPoint is either a scroll container or the document,\n            // find the best candidate within startingPoint\n            if ((isContainer(eventTarget) || eventTarget.nodeName === 'BODY') && !(eventTarget.nodeName === 'INPUT')) {\n                if (eventTarget.nodeName === 'IFRAME') eventTarget = eventTarget.contentDocument.body;\n\n                const candidates = getSpatialNavigationCandidates(eventTarget, option);\n\n                // 5-2\n                if (Array.isArray(candidates) && candidates.length > 0) {\n                    return findCandidate\n                        ? getFilteredSpatialNavigationCandidates(eventTarget, dir, candidates)\n                        : eventTarget.spatialNavigationSearch(dir, { candidates });\n                }\n                if (canScroll(eventTarget, dir)) {\n                    return findCandidate ? [] : eventTarget;\n                }\n            }\n\n            // 6\n            // Let container be the nearest ancestor of eventTarget\n            let container = eventTarget.getSpatialNavigationContainer();\n            let parentContainer = container.parentElement ? container.getSpatialNavigationContainer() : null;\n\n            // When the container is the viewport of a browsing context\n            if (!parentContainer && window.location !== window.parent.location) {\n                parentContainer = window.parent.document.documentElement;\n            }\n\n            // 7\n            while (parentContainer) {\n                const candidates = filteredCandidates(\n                    eventTarget,\n                    getSpatialNavigationCandidates(container, option),\n                    dir,\n                    container,\n                );\n\n                if (Array.isArray(candidates) && candidates.length > 0) {\n                    bestNextTarget = eventTarget.spatialNavigationSearch(dir, {\n                        candidates,\n                        container,\n                    });\n                    if (bestNextTarget) {\n                        return findCandidate ? candidates : bestNextTarget;\n                    }\n                }\n\n                    // If there isn't any candidate and the best candidate among candidate:\n                    // 1) Scroll or 2) Find candidates of the ancestor container\n                // 8 - if\n                else if (canScroll(container, dir)) {\n                    return findCandidate ? [] : eventTarget;\n                } else if (container === document || container === document.documentElement) {\n                    container = window.document.documentElement;\n\n                    // The page is in an iframe\n                    if (window.location !== window.parent.location) {\n                        // eventTarget needs to be reset because the position of the element in the IFRAME\n                        // is unuseful when the focus moves out of the iframe\n                        eventTarget = window.frameElement;\n                        container = window.parent.document.documentElement;\n                        if (container.parentElement) parentContainer = container.getSpatialNavigationContainer();\n                        else {\n                            parentContainer = null;\n                            break;\n                        }\n                    }\n                } else {\n                    // avoiding when spatnav container with tabindex=-1\n                    if (isFocusable(container)) {\n                        eventTarget = container;\n                    }\n\n                    container = parentContainer;\n                    if (container.parentElement) parentContainer = container.getSpatialNavigationContainer();\n                    else {\n                        parentContainer = null;\n                        break;\n                    }\n                }\n            }\n\n            if (!parentContainer && container) {\n                // Getting out from the current spatnav container\n                const candidates = filteredCandidates(\n                    eventTarget,\n                    getSpatialNavigationCandidates(container, option),\n                    dir,\n                    container,\n                );\n\n                // 9\n                if (Array.isArray(candidates) && candidates.length > 0) {\n                    bestNextTarget = eventTarget.spatialNavigationSearch(dir, {\n                        candidates,\n                        container,\n                    });\n                    if (bestNextTarget) {\n                        return findCandidate ? candidates : bestNextTarget;\n                    }\n                }\n            }\n\n            if (canScroll(container, dir)) {\n                bestNextTarget = eventTarget;\n                return bestNextTarget;\n            }\n        }\n\n        return {\n            isContainer,\n            isScrollContainer,\n            isVisibleInScroller,\n            findCandidates: findTarget.bind(null, true),\n            findNextTarget: findTarget.bind(null, false),\n            getDistanceFromTarget: (element, candidateElement, dir) => {\n                if ((isContainer(element) || element.nodeName === 'BODY') && !(element.nodeName === 'INPUT')) {\n                    if (getSpatialNavigationCandidates(element).includes(candidateElement)) {\n                        return getInnerDistance(\n                            getBoundingClientRect(element),\n                            getBoundingClientRect(candidateElement),\n                            dir,\n                        );\n                    }\n                }\n                return getDistance(getBoundingClientRect(element), getBoundingClientRect(candidateElement), dir);\n            },\n        };\n    }\n\n    /**\n     * Makes to use the experimental APIs.\n     * @function enableExperimentalAPIs\n     * @param option {boolean} - If it is true, the experimental APIs can be used or it cannot.\n     */\n    function enableExperimentalAPIs(option) {\n        const currentKeyMode = window.__spatialNavigation__ && window.__spatialNavigation__.keyMode;\n        window.__spatialNavigation__ =\n            option === false ? getInitialAPIs() : Object.assign(getInitialAPIs(), getExperimentalAPI());\n        window.__spatialNavigation__.keyMode = currentKeyMode;\n        Object.seal(window.__spatialNavigation__);\n    }\n\n    /**\n     * Set the environment for using the spatial navigation polyfill.\n     * @function getInitialAPIs\n     */\n    function getInitialAPIs() {\n        return {\n            enableExperimentalAPIs,\n            get keyMode() {\n                return this._keymode ? this._keymode : 'ARROW';\n            },\n            set keyMode(mode) {\n                this._keymode = ['SHIFTARROW', 'ARROW', 'NONE'].includes(mode) ? mode : 'ARROW';\n            },\n            setStartingPoint: function (x, y) {\n                startingPoint = x && y ? { x, y } : null;\n            },\n        };\n    }\n\n    initiateSpatialNavigation();\n    enableExperimentalAPIs(true);\n\n    window.addEventListener('load', () => {\n        spatialNavigationHandler();\n    });\n})();\n\nlet currentSpatialNavigationContainer = null;\n\ndocument.addEventListener('navbeforefocus', (e) => {\n    if (e.target instanceof HTMLElement) {\n        e.preventDefault();\n\n        let { target } = e;\n\n        // focus on the first element when changing spatnav container\n        // const nextSpatialNavigationContainer = target.getSpatialNavigationContainer();\n        //\n        // if (currentSpatialNavigationContainer && currentSpatialNavigationContainer !== nextSpatialNavigationContainer) {\n        //     if (nextSpatialNavigationContainer.__lastElementFocused) {\n        //         target = nextSpatialNavigationContainer.__lastElementFocused;\n        //     } else {\n        //         [target] = nextSpatialNavigationContainer.focusableAreas({ mode: 'all' });\n        //     }\n        //     // target.focus();\n        // }\n        //\n        // currentSpatialNavigationContainer = nextSpatialNavigationContainer;\n        // currentSpatialNavigationContainer.__lastElementFocused = target;\n\n        requestAnimationFrame(async () => {\n            target.scrollIntoView({ behavior: 'smooth', block: 'center', inline: 'nearest' });\n            // if (isElementInViewport(target)) {\n            //     target.focus();\n            // }\n\n            // await new Promise((resolve) => {\n            //     const intersectionObserver = new IntersectionObserver(\n            //         ([entry]) => {\n            //             if (entry.isIntersecting) {\n            //                 resolve();\n            //             }\n            //         },\n            //         {\n            //             threshold: 1,\n            //         },\n            //     );\n            //     intersectionObserver.observe(target);\n            // });\n\n            target.focus();\n        });\n    }\n});\n\ndocument.addEventListener('keyup', (event) => {\n    if (event.keyCode === 13) {\n        event.preventDefault();\n        if (document.activeElement && !(document.activeElement instanceof HTMLButtonElement)) {\n            document.activeElement.click();\n        }\n    }\n});\n\n// console.log('1');\n\n// let isIntersecting = false;\n// const intersectionObserver = new IntersectionObserver(([entry]) => {\n// console.log('2');\n//   isIntersecting = entry.isIntersecting;\n// }, {\n//   threshold: 1\n// });\n// intersectionObserver.observe($0)\n// console.log('3');\n\n// start observing\n// intersectionObserver.observe());\n\nfunction isElementInViewport(el) {\n    const rect = el.getBoundingClientRect();\n    return (\n        rect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n    );\n}\n","export enum ROUTES {\n    CATALOG = '/catalog',\n    CART = '/cart',\n    STATUS = '/status',\n    ADDRESS_SIMPLE = '/address-simple',\n    PROMO = '/promo',\n    NO_AREA = '/no-area',\n    SCREEN_SAVER = '/screen-saver',\n}\n","import { LocationState } from 'history';\nimport { Dispatch } from 'redux';\nimport * as DG from '2gis-maps';\nimport { RouterState, RouterAction } from 'connected-react-router';\nimport { CatalogListItemProps } from 'pages/Catalog/ListItem/CatalogListItem';\nimport { CartListItemViewProps } from 'pages/Cart/ListItem/CartListItem';\nimport { AddressSimpleSuggestItemView } from 'pages/AddressSimple/SuggestItem/AddressSimpleSuggestItem';\nimport { ButtonProps } from 'components/Button/Button';\n\nimport * as actions from '../actions';\n\nimport { StoreProductItem } from './products';\nimport { User, Location } from './user';\n\nexport const initialState = {\n    cart: {\n        minimalPrice: 20000,\n        itemsMap: {} as Record<string, CartItem>,\n        order: [] as string[],\n        totalCount: 0,\n        // discount value?\n        totalPrice: 0, // в копейках\n        orderId: '',\n    },\n    products: {\n        itemsMap: {} as Record<string, StoreProductItem>,\n    },\n    // здесь важно поставить undefined, подробности смотри в редюсере роутера\n    router: (undefined as unknown) as RouterState<LocationState>,\n    user: {\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        customer_name: '',\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        phone_num: '',\n        address: {\n            // eslint-disable-next-line @typescript-eslint/camelcase\n            location: {\n                latitude: '',\n                longitude: '',\n            },\n            // eslint-disable-next-line @typescript-eslint/camelcase\n            address_string: '',\n            city: '',\n            street: '',\n            house: '',\n            building: '',\n            floor: '',\n            entrance: '',\n            apartment: '',\n            // eslint-disable-next-line @typescript-eslint/camelcase\n            door_code: '',\n            confirmed: '',\n        },\n    } as User,\n    catalogPage: {\n        selectedItemId: '',\n        order: [] as string[],\n        itemsMap: {} as Record<string, CatalogListItemProps>,\n        screenIndex: [] as number[],\n        wrapperXShift: 0,\n        listIndexOffset: 0,\n    },\n    cartPage: {\n        wrapperYShift: 0,\n        selectedItemIndex: 0,\n        topGradientHidden: true,\n        bottomGradientHidden: false,\n        order: [] as string[],\n        itemsMap: {} as Record<string, CartListItemViewProps>,\n        totalPrice: '',\n        toMinimumPrice: 0,\n        isOrderStatusWaiting: false,\n        makePurchaseButton: {\n            disabled: false,\n        } as ButtonProps,\n    },\n    header: {\n        title: '',\n        address: {\n            text: '',\n            isVisible: false,\n        },\n        cart: {\n            isVisible: false,\n            count: 0,\n            price: '0',\n        },\n        isBackButtonVisible: false,\n    },\n    addressSimplePage: {\n        deviceLocation: {\n            // latitude: '55.737209',\n            // longitude: '37.538145',\n            latitude: '59.84112819369227',\n            longitude: '30.25827884674072',\n        } as Location,\n        inputValue: '',\n        suggestsRaw: [] as DG.SuggestItem[],\n        suggests: [] as AddressSimpleSuggestItemView[],\n        selectedSuggestItemIndex: 0,\n        suggestListContainerYShift: 0,\n        isInputFocused: false,\n        isSubmitButtonDisabled: false,\n    },\n};\n\nexport type AppState = typeof initialState;\n\nexport type ActionTypes = typeof actions;\nexport type BaseAction = ReturnType<ActionTypes[keyof ActionTypes]>;\nexport type AppAction = BaseAction | RouterAction<LocationState>;\nexport type AppDispatch = Dispatch<AppAction>;\nexport type Reducer<T = AppAction> = (state: AppState, action: T) => void;\n\nexport interface CartItem {\n    itemId: string;\n    count: number;\n}\n","import { Reducer, AppState, initialState } from '../../constants';\n\n// TODO: запилить проверку остатков при подсчете общего количества\n// https://sbtatlas.sigma.sbrf.ru/jira/browse/FOODTECHUI-40\nconst getTotalCount = (cart: AppState['cart']) =>\n    Object.values(cart.itemsMap).reduce((acc, item) => {\n        acc += item.count;\n\n        return acc;\n    }, 0);\n\n// TODO: запилить проверку остатков при подсчете общей стоимости\n// https://sbtatlas.sigma.sbrf.ru/jira/browse/FOODTECHUI-40\nconst getTotalPrice = (cart: AppState['cart'], products: AppState['products']) =>\n    cart.order.reduce((acc, itemId) => {\n        const productItem = products.itemsMap[itemId];\n        const cartItem = cart.itemsMap[itemId];\n\n        acc += cartItem.count * Number(productItem.price);\n\n        return acc;\n    }, 0);\n\nexport const cartModel: Reducer = (store, action) => {\n    const { cart, products } = store;\n\n    switch (action.type) {\n        case 'ADD_ITEM': {\n            const { count: countString, item: itemId } = action.payload;\n            const count = Number(countString);\n            const productItem = products.itemsMap[itemId];\n            const maxCount = productItem.quantityLeft;\n\n            if (!productItem) {\n                return;\n            }\n\n            const cartItem = cart.itemsMap[itemId];\n\n            if (cartItem) {\n                cartItem.count = Math.min(maxCount, cartItem.count + count);\n            } else if (count <= maxCount) {\n                cart.itemsMap[itemId] = {\n                    itemId,\n                    count,\n                };\n\n                cart.order.push(itemId);\n            }\n\n            cart.totalCount = getTotalCount(cart);\n            cart.totalPrice = getTotalPrice(cart, products);\n\n            break;\n        }\n\n        case 'REMOVE_ITEM': {\n            const { item: itemId, count: countString, shouldRemoveMention } = action.payload;\n            const count = Number(countString);\n\n            const cartItem = cart.itemsMap[itemId];\n            const productItem = products.itemsMap[itemId];\n\n            if (!cartItem || !productItem) {\n                return;\n            }\n\n            cartItem.count = Math.max(0, cartItem.count - count);\n\n            cart.totalCount = getTotalCount(cart);\n            cart.totalPrice = getTotalPrice(cart, products);\n\n            if (!cartItem.count && shouldRemoveMention) {\n                delete cart.itemsMap[itemId];\n                cart.order = cart.order.filter((cartItemId) => cartItemId !== itemId);\n            }\n\n            break;\n        }\n\n        case 'REMOVE_ALL': {\n            store.cart = initialState.cart;\n\n            break;\n        }\n\n        case 'GO_TO_CATALOG': {\n            if (action.payload.clear) {\n                store.cart = initialState.cart;\n            }\n\n            break;\n        }\n\n        case 'VALIDATION_OK': {\n            store.cart.orderId = action.payload.order_id;\n\n            break;\n        }\n\n        default:\n            break;\n    }\n};\n","import { Reducer } from '../../constants';\nimport { StoreProductItem, ProductItem } from '../../constants/products';\n\nconst normalizeProductItem = (productItem: ProductItem): StoreProductItem => ({\n    name: productItem.name,\n    id: productItem.guid,\n    price: Number(productItem.price),\n    quantityLeft: Number(productItem.quantity_left),\n    imageUrl: productItem.images_urls[0],\n});\n\nconst normalizeProducts = (productsMaps: Record<string, ProductItem>): Record<string, StoreProductItem> =>\n    Object.keys(productsMaps).reduce<Record<string, StoreProductItem>>((acc, itemId) => {\n        acc[itemId] = normalizeProductItem(productsMaps[itemId]);\n\n        return acc;\n    }, {});\n\nexport const productsData: Reducer = (state, action) => {\n    switch (action.type) {\n        case 'SHOW_ITEMS': {\n            state.products.itemsMap = normalizeProducts(action.payload.stock);\n            break;\n        }\n\n        default:\n            break;\n    }\n};\n","import * as DG from '2gis-maps';\n\nimport { Reducer, initialState, AppState } from '../../constants';\n\nconst updateUserAddressBasedOnBuilding = ({ user }: AppState, building: DG.Building) => {\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    const { point, address, address_name, full_name } = building;\n    const [addressComponent] = address.components;\n    const { street, number } = addressComponent;\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    const [city] = full_name.split(', ');\n\n    user.address.city = city;\n    user.address.street = street;\n    user.address.house = number;\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    user.address.address_string = address_name;\n    user.address.location.latitude = String(point.lat);\n    user.address.location.longitude = String(point.lon);\n};\n\nexport const userData: Reducer = (state, action) => {\n    const { addressSimplePage, user } = state;\n\n    switch (action.type) {\n        case 'UPDATE_USER': {\n            state.user = { ...state.user, ...action.payload };\n\n            break;\n        }\n\n        case 'GO_TO_CATALOG': {\n            state.user = action.payload.address;\n\n            break;\n        }\n\n        case 'address/CHANGE_INPUT_VALUE': {\n            user.address = initialState.user.address;\n\n            // user.address.city = '';\n            // user.address.street = '';\n            // user.address.house = '';\n            // // eslint-disable-next-line @typescript-eslint/camelcase\n            // user.address.address_string = '';\n            // user.address.location.latitude = '';\n            // user.address.location.longitude = '';\n\n            break;\n        }\n\n        case 'address/CLICK_SUGGEST_ITEM': {\n            const suggestItem = addressSimplePage.suggestsRaw[action.payload];\n\n            if (suggestItem.type !== 'building') {\n                break;\n            }\n\n            updateUserAddressBasedOnBuilding(state, suggestItem);\n\n            break;\n        }\n\n        case 'address/SET_SUGGESTS': {\n            // const { suggestsRaw, inputValue } = addressSimplePage;\n            // const [suggestItem] = suggestsRaw.filter(\n            //     (suggestItem) => suggestItem.name === inputValue && suggestItem.type === 'building',\n            // );\n            //\n            // if (!suggestItem || suggestItem.type !== 'building') {\n            //     break;\n            // }\n            //\n            // updateUserAddressBasedOnBuilding(state, suggestItem);\n\n            break;\n        }\n\n        default:\n            break;\n    }\n};\n","import { CatalogListItemProps } from 'pages/Catalog/ListItem/CatalogListItem';\n\nimport { AppState, Reducer } from '../../constants';\n\nconst SCREEN_WIDTH = 1920;\nconst CARD_WIDTH = 392;\nconst CARD_GAP = 32;\n\nconst SCREEN_ITEM_COUNT = Math.floor(SCREEN_WIDTH / (CARD_WIDTH + CARD_GAP));\n\nconst LIST_OFFSET = (-1 * (SCREEN_WIDTH % (CARD_WIDTH + CARD_GAP))) / 2;\n\nconst ITEM_WIDTH = CARD_WIDTH + CARD_GAP;\n\nconst getListIndexOffset = ({ catalogPage: { selectedItemId, order, listIndexOffset } }: AppState) => {\n    const selectedItemIndex = order.indexOf(selectedItemId);\n\n    if (selectedItemIndex === -1) {\n        return 0;\n    }\n\n    const scrollPageSize = 1;\n\n    if (selectedItemIndex <= listIndexOffset) {\n        return Math.max(0, listIndexOffset - scrollPageSize);\n    }\n\n    if (selectedItemIndex >= listIndexOffset + SCREEN_ITEM_COUNT - 1) {\n        return Math.min(listIndexOffset + scrollPageSize, order.length - SCREEN_ITEM_COUNT);\n    }\n\n    return listIndexOffset;\n};\n\nconst getWrapperXShift = ({ catalogPage: { listIndexOffset } }: AppState) =>\n    LIST_OFFSET + listIndexOffset * ITEM_WIDTH - CARD_GAP / 2;\n\nconst getScreenIndex = ({ catalogPage: { listIndexOffset } }: AppState): number[] =>\n    new Array(SCREEN_ITEM_COUNT).fill(0).reduce((result, _, index) => {\n        result[index + 1] = index + listIndexOffset + 1;\n\n        return result;\n    }, [] as number[]);\n\nconst preparePrice = (price: number) => Math.ceil(price / 100);\n\nconst prepareBadge = ({ cart, products }: AppState, itemId: string): CatalogListItemProps['badge'] => {\n    const cartItem = cart.itemsMap[itemId];\n    const productItem = products.itemsMap[itemId];\n\n    if (productItem.quantityLeft === 0) {\n        return { type: 'sold-out' };\n    }\n\n    if (cartItem && cartItem.count === productItem.quantityLeft) {\n        return { type: 'few-left' };\n    }\n\n    return undefined;\n};\n\nconst calculateCount = ({ cart }: AppState, itemId: string) => {\n    const cartItem = cart.itemsMap[itemId];\n\n    return cartItem ? cartItem.count : 0;\n};\n\nconst calculateButtonDisabled = ({ cart, products }: AppState, itemId: string) => {\n    const productItem = products.itemsMap[itemId];\n    const cartItem = cart.itemsMap[itemId];\n\n    return cartItem && cartItem.count === productItem.quantityLeft;\n};\n\nconst prepareItem = (state: AppState, itemId: string, index: number) => {\n    const { products, cart, catalogPage } = state;\n    const productItem = products.itemsMap[itemId];\n    const cartItem = cart.itemsMap[itemId];\n\n    return {\n        shouldFocusOnMount: catalogPage.selectedItemId === itemId,\n        imageUrl: productItem.imageUrl,\n        name: productItem.name,\n        id: itemId,\n        price: preparePrice(productItem.price),\n        index: index + 1,\n        quantityLeft: productItem.quantityLeft,\n        count: cartItem && cartItem.count,\n        badge: prepareBadge(state, itemId),\n        buttonDisabled: calculateButtonDisabled(state, itemId),\n        disabled: productItem.quantityLeft === 0,\n    };\n};\n\nconst prepareCatalogItemsMap = (state: AppState) => {\n    const { products } = state;\n\n    return Object.keys(products.itemsMap).reduce((acc, itemId, index) => {\n        acc[itemId] = prepareItem(state, itemId, index);\n\n        return acc;\n    }, {} as AppState['catalogPage']['itemsMap']);\n};\n\nexport const catalogPageView: Reducer = (state, action) => {\n    const { products, catalogPage } = state;\n\n    switch (action.type) {\n        case 'SHOW_ITEMS': {\n            catalogPage.order = Object.keys(products.itemsMap);\n\n            const [firstItemId] = catalogPage.order;\n            catalogPage.selectedItemId = firstItemId;\n\n            catalogPage.itemsMap = prepareCatalogItemsMap(state);\n            catalogPage.screenIndex = getScreenIndex(state);\n\n            break;\n        }\n\n        case 'ADD_ITEM': {\n            const { item: itemId } = action.payload;\n            const catalogItem = catalogPage.itemsMap[itemId];\n\n            catalogItem.count = calculateCount(state, itemId);\n            catalogItem.buttonDisabled = calculateButtonDisabled(state, itemId);\n            catalogItem.badge = prepareBadge(state, itemId);\n\n            break;\n        }\n\n        case 'REMOVE_ITEM': {\n            const { item: itemId } = action.payload;\n            const catalogItem = catalogPage.itemsMap[itemId];\n\n            catalogItem.count = calculateCount(state, itemId);\n            catalogItem.buttonDisabled = calculateButtonDisabled(state, itemId);\n            catalogItem.badge = prepareBadge(state, itemId);\n\n            break;\n        }\n\n        case 'REMOVE_ALL': {\n            catalogPage.itemsMap = prepareCatalogItemsMap(state);\n\n            break;\n        }\n\n        case 'catalog/SELECT_ITEM': {\n            catalogPage.selectedItemId = action.payload;\n            catalogPage.listIndexOffset = getListIndexOffset(state);\n            catalogPage.wrapperXShift = getWrapperXShift(state);\n            catalogPage.screenIndex = getScreenIndex(state);\n\n            break;\n        }\n\n        default:\n            break;\n    }\n};\n","export const splitByThousands = (data: number) =>\n    String(data)\n        .split('')\n        .reduceRight((acc, item, index, arr) => {\n            const indexFromEnd = index - (arr.length - 1);\n\n            if (indexFromEnd % 3 === 0) {\n                acc = ` ${acc}`;\n            }\n\n            return item + acc;\n        }, '');\n\nexport const throttle = (callback: any, timeout: number) => {\n    let timeoutId = 0;\n\n    return () => {\n        if (timeoutId) {\n            return;\n        }\n\n        timeoutId = setTimeout(() => {\n            timeoutId = 0;\n            callback();\n        }, timeout);\n    };\n};\n","import { CartListItemViewProps } from 'pages/Cart/ListItem/CartListItem';\nimport { ButtonProps } from 'components/Button/Button';\nimport { splitByThousands } from 'tools';\n\nimport { Reducer, AppState, initialState } from '../../constants';\n\nconst selectProductById = (state: AppState, itemId: string) => state.products.itemsMap[itemId];\nconst selectCartItemById = (state: AppState, itemId: string) => state.cart.itemsMap[itemId];\n\nconst ITEM_HEIGHT = 152;\n\nconst getWrapperYShift = ({ cartPage: { selectedItemIndex, order } }: AppState) => {\n    if (selectedItemIndex === -1) {\n        return 0;\n    }\n\n    // так как индекс начинается с 0, то расчеты бы имели смысл начиная\n    // со второго элемента (индекс = 1), но нам нужно начинать скролл с\n    // 3-го элемента, поэтому сдвигаем значение на 1\n    let relatedIndex = Math.max(0, selectedItemIndex - 1);\n\n    // ограничиваем максимальное значение индекса\n    relatedIndex = Math.min(Math.max(0, order.length - 4), relatedIndex);\n\n    // домножаем отступ на коэффициент высоты айтема\n    return relatedIndex * ITEM_HEIGHT;\n};\n\nconst prepareCartPageItem = (state: AppState, itemId: string): CartListItemViewProps | undefined => {\n    const { imageUrl, name, price, quantityLeft } = selectProductById(state, itemId);\n    const cartItem = selectCartItemById(state, itemId);\n\n    if (!cartItem) {\n        return;\n    }\n\n    return {\n        imageUrl,\n        name,\n        price: Math.ceil(price / 100),\n        count: cartItem.count,\n        disabled: quantityLeft === 0,\n        moreButtonDisabled: quantityLeft === cartItem.count,\n    };\n};\n\nconst prepareMakePurchaseButtonProps = (store: AppState): ButtonProps => {\n    const {\n        cart: { totalPrice, minimalPrice },\n        cartPage: { isOrderStatusWaiting },\n    } = store;\n\n    return {\n        disabled: isOrderStatusWaiting || totalPrice < minimalPrice,\n    };\n};\n\nconst prepareToMinimumPrice = ({ cart: { minimalPrice, totalPrice } }: AppState) =>\n    Math.max(0, Math.ceil((minimalPrice - totalPrice) / 100));\n\nconst prepareTotalPrice = ({ cart: { totalPrice } }: AppState) => splitByThousands(Math.ceil(totalPrice / 100));\n\nconst prepareTopGradientHidden = ({ cartPage: { selectedItemIndex } }: AppState) => selectedItemIndex === 0;\n\nconst prepareBottomGradientHidden = ({ cartPage: { selectedItemIndex, order } }: AppState) =>\n    selectedItemIndex === order.length - 1;\n\nexport const cartPageView: Reducer = (state, action) => {\n    const { cart, cartPage } = state;\n\n    switch (action.type) {\n        case 'ADD_ITEM': {\n            const { item: itemId } = action.payload;\n            const cartPageItem = prepareCartPageItem(state, itemId);\n\n            if (cartPageItem) {\n                cartPage.itemsMap[itemId] = cartPageItem;\n            }\n\n            cartPage.order = cart.order;\n            cartPage.totalPrice = prepareTotalPrice(state);\n            cartPage.toMinimumPrice = prepareToMinimumPrice(state);\n\n            break;\n        }\n\n        case 'REMOVE_ITEM': {\n            const { item: itemId } = action.payload;\n            const cartPageItem = prepareCartPageItem(state, itemId);\n\n            if (cartPageItem) {\n                cartPage.itemsMap[itemId] = cartPageItem;\n            } else {\n                delete cartPage.itemsMap[itemId];\n            }\n\n            cartPage.order = cart.order;\n            cartPage.totalPrice = prepareTotalPrice(state);\n            cartPage.toMinimumPrice = prepareToMinimumPrice(state);\n            cartPage.wrapperYShift = getWrapperYShift(state);\n            cartPage.makePurchaseButton = prepareMakePurchaseButtonProps(state);\n\n            break;\n        }\n\n        case 'REMOVE_ALL': {\n            state.cartPage = initialState.cartPage;\n            cartPage.makePurchaseButton = prepareMakePurchaseButtonProps(state);\n\n            break;\n        }\n\n        case 'cart/SELECT_ITEM': {\n            cartPage.selectedItemIndex = cartPage.order.indexOf(action.payload);\n\n            cartPage.wrapperYShift = getWrapperYShift(state);\n            cartPage.topGradientHidden = prepareTopGradientHidden(state);\n            cartPage.bottomGradientHidden = prepareBottomGradientHidden(state);\n\n            break;\n        }\n\n        case 'GO_TO_WAIT': {\n            cartPage.isOrderStatusWaiting = true;\n\n            cartPage.makePurchaseButton = prepareMakePurchaseButtonProps(state);\n            break;\n        }\n\n        case 'VALIDATION_OK': {\n            cartPage.isOrderStatusWaiting = false;\n\n            cartPage.makePurchaseButton = prepareMakePurchaseButtonProps(state);\n\n            break;\n        }\n\n        default:\n            break;\n    }\n};\n","import React from 'react';\n\nexport function useFocusOnMount<T>() {\n    const ref = React.useRef<T>(null);\n\n    React.useEffect(() => {\n        if (ref.current instanceof HTMLElement) {\n            ref.current.focus();\n        }\n    }, []);\n\n    return ref;\n}\n","import React from 'react';\n\nexport const useInterval = (callback: (...args: any[]) => void, timeout: number) =>\n    React.useEffect(() => {\n        const intervalId = setInterval(callback, timeout);\n\n        return () => clearInterval(intervalId);\n    });\n","import { useDispatch as useReduxDispatch } from 'react-redux';\nimport { AppDispatch } from 'store/constants';\n\nexport const useDispatch = () => useReduxDispatch<AppDispatch>();\n","import { useSelector as useReduxSelector } from 'react-redux';\nimport { AppState } from 'store/constants';\n\nexport function useSelector<T = unknown>(mapStateToProps: (state: AppState) => T) {\n    return useReduxSelector<AppState, T>(mapStateToProps);\n}\n","export function createAction<T extends string, P>(type: T, payload: P) {\n    return {\n        type,\n        payload,\n    };\n}\n\nexport function createEmptyAction<T extends string>(type: T) {\n    return {\n        type,\n    };\n}\n","import { createAction, createEmptyAction } from 'tools/action-creator';\n\nimport {\n    ShowItemsCommandPayload,\n    AddItemCommandPayload,\n    RemoveItemCommandPayload,\n    RemoveAllCommandPayload,\n    GoToCatalogCommandPayload,\n    GoToWaitCommandPayload,\n    AskForAgainStatusOrderCommandPayload,\n    ValidationOkCommandPayload,\n    GoBackCommandPayload,\n    AddressInputPayload,\n    AddressInputAddPayload,\n} from '../constants/native';\n\nexport const showItems = (payload: ShowItemsCommandPayload) => createAction('SHOW_ITEMS', payload);\n\nexport const addItem = (payload: AddItemCommandPayload) => createAction('ADD_ITEM', payload);\n\ninterface RemoveItemCommandPayloadExtended extends RemoveItemCommandPayload {\n    shouldRemoveMention?: boolean;\n}\nexport const removeItem = (payload: RemoveItemCommandPayloadExtended) => createAction('REMOVE_ITEM', payload);\n\nexport const removeAll = (payload: RemoveAllCommandPayload) => createEmptyAction('REMOVE_ALL');\n\nexport const goToCatalog = (payload: GoToCatalogCommandPayload) => createAction('GO_TO_CATALOG', payload);\n\nexport const goBack = (payload: GoBackCommandPayload) => createEmptyAction('GO_BACK');\n\nexport const goToWait = (payload: GoToWaitCommandPayload) => createEmptyAction('GO_TO_WAIT');\n\nexport const validationOk = (payload: ValidationOkCommandPayload) => createAction('VALIDATION_OK', payload);\n\nexport const addressInput = (payload: AddressInputPayload) => createAction('ADDRESS_INPUT', payload);\n\nexport const addressInputAdd = (payload: AddressInputAddPayload) => createAction('ADDRESS_INPUT_ADD', payload);\n\nexport const askAgainForOrderStatus = (payload: AskForAgainStatusOrderCommandPayload) =>\n    createEmptyAction('ASK_AGAIN_FOR_ORDER_STATUS');\n","import { createEmptyAction } from 'tools/action-creator';\n\nexport const askForStock = () => createEmptyAction('ASK_FOR_STOCK');\n\nexport const makePurchase = () => createEmptyAction('MAKE_PURCHASE');\n\nexport const goToCart = () => createEmptyAction('GO_TO_CART');\n\nexport const askForOrderStatus = () => createEmptyAction('ASK_FOR_ORDER_STATUS');\n\nexport const addressSubmit = () => createEmptyAction('ADDRESS_SUBMIT');\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'hooks';\nimport { addressSelectSuggestItem, addressClickSuggestItem } from 'store/actions';\n\nexport const SUGGEST_ITEM_HEIGHT = 112;\nexport const SUGGEST_ITEM_MARGIN = 24;\n\nconst StyledRoot = styled.div`\n    margin-top: ${SUGGEST_ITEM_MARGIN}px;\n\n    display: flex;\n    align-items: center;\n    height: ${SUGGEST_ITEM_HEIGHT}px;\n    width: 900px;\n    padding: 36px 32px;\n    border: 4px solid transparent;\n    box-sizing: border-box;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n\n    border-radius: 24px;\n    font-weight: 500;\n    font-size: 32px;\n    color: #fff;\n    background: #1a1a1a;\n\n    transition: border 0.2s ease-in-out;\n\n    &:focus {\n        border-color: #68ea68;\n    }\n`;\n\ninterface SuggestListItemProps {\n    index: number;\n}\n\nexport interface AddressSimpleSuggestItemView {\n    id: string;\n    name: string;\n}\n\nexport const AddressSimpleSuggestListItem: React.FC<SuggestListItemProps> = ({ index }) => {\n    const { name } = useSelector(({ addressSimplePage: { suggests } }) => suggests[index]);\n    const dispatch = useDispatch();\n    const memoizedOnClick = React.useCallback(() => {\n        dispatch(addressClickSuggestItem(index));\n    }, [dispatch, index]);\n    const memoizedOnFocus = React.useCallback(() => {\n        dispatch(addressSelectSuggestItem(index));\n    }, [dispatch, index]);\n\n    return (\n        <StyledRoot tabIndex={0} onClick={memoizedOnClick} onFocus={memoizedOnFocus}>\n            {name}\n        </StyledRoot>\n    );\n};\n","import DG from '2gis-maps';\nimport { createAction, createEmptyAction } from 'tools/action-creator';\n\nexport const addressFocusInput = () => createEmptyAction('address/FOCUS_INPUT');\n\nexport const addressChangeInputValue = (payload: string) => createAction('address/CHANGE_INPUT_VALUE', payload);\n\nexport const addressSetSuggests = (payload: DG.SuggestItem[]) => createAction('address/SET_SUGGESTS', payload);\n\nexport const addressSelectSuggestItem = (payload: number) => createAction('address/SELECT_SUGGEST_ITEM', payload);\n\nexport const addressClickSuggestItem = (payload: number) => createAction('address/CLICK_SUGGEST_ITEM', payload);\n\nexport const addressBlurInput = () => createEmptyAction('address/BLUR_INPUT');\n","import {\n    SUGGEST_ITEM_HEIGHT,\n    SUGGEST_ITEM_MARGIN,\n    AddressSimpleSuggestItemView,\n} from 'pages/AddressSimple/SuggestItem/AddressSimpleSuggestItem';\n\nimport { Reducer, AppState, initialState } from '../../constants';\n\nconst prepareSuggestItems = (state: AppState) => {\n    const {\n        addressSimplePage: { inputValue, suggestsRaw },\n    } = state;\n\n    return suggestsRaw.reduce<AddressSimpleSuggestItemView[]>((result, suggestItem) => {\n        const { name, id } = suggestItem;\n\n        if (name !== inputValue) {\n            result.push({\n                id,\n                name,\n            });\n        }\n\n        return result;\n    }, []);\n};\n\nconst prepareIsSubmitButtonDisabled = ({ user }: AppState) => {\n    return (\n        !user.address.street ||\n        !user.address.house ||\n        !user.address.city ||\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        !user.address.address_string ||\n        !user.address.location.latitude ||\n        !user.address.location.longitude\n    );\n};\n\nconst prepareSuggestListContainerYShift = ({ addressSimplePage: { selectedSuggestItemIndex, suggests } }: AppState) => {\n    return (\n        (SUGGEST_ITEM_HEIGHT + SUGGEST_ITEM_MARGIN) *\n        Math.min(suggests.length - 3, Math.max(0, selectedSuggestItemIndex - 1))\n    );\n};\n\nexport const addressSimplePageView: Reducer = (state, action) => {\n    const { addressSimplePage } = state;\n\n    switch (action.type) {\n        case 'address/CHANGE_INPUT_VALUE': {\n            addressSimplePage.inputValue = action.payload;\n            addressSimplePage.selectedSuggestItemIndex = initialState.addressSimplePage.selectedSuggestItemIndex;\n\n            break;\n        }\n\n        case 'address/SET_SUGGESTS': {\n            addressSimplePage.suggestsRaw = action.payload;\n\n            break;\n        }\n\n        case 'address/SELECT_SUGGEST_ITEM': {\n            addressSimplePage.selectedSuggestItemIndex = action.payload;\n\n            break;\n        }\n\n        case 'address/CLICK_SUGGEST_ITEM': {\n            const clickedSuggestItem = addressSimplePage.suggests[action.payload];\n\n            addressSimplePage.inputValue = clickedSuggestItem.name;\n            addressSimplePage.selectedSuggestItemIndex = initialState.addressSimplePage.selectedSuggestItemIndex;\n\n            break;\n        }\n\n        case 'address/FOCUS_INPUT': {\n            addressSimplePage.isInputFocused = true;\n\n            break;\n        }\n\n        case 'address/BLUR_INPUT': {\n            addressSimplePage.isInputFocused = false;\n\n            break;\n        }\n\n        case 'ADDRESS_INPUT': {\n            // TODO: проверить\n            addressSimplePage.inputValue = action.payload.input || '';\n            // addressSimplePage.deviceLocation = action.payload.device_location;\n\n            break;\n        }\n\n        case 'ADDRESS_INPUT_ADD': {\n            const lastSymbol = addressSimplePage.inputValue[addressSimplePage.inputValue.length - 1];\n            const prefix = lastSymbol === ' ' ? '' : ' ';\n\n            addressSimplePage.inputValue += `${prefix}${action.payload.input} `;\n\n            break;\n        }\n\n        default:\n            break;\n    }\n\n    addressSimplePage.suggests = prepareSuggestItems(state);\n    addressSimplePage.suggestListContainerYShift = prepareSuggestListContainerYShift(state);\n    addressSimplePage.isSubmitButtonDisabled = prepareIsSubmitButtonDisabled(state);\n};\n","import { splitByThousands } from 'tools';\n\nimport { AppState, Reducer } from '../../constants';\nimport { ROUTES } from '../../constants/router';\n\nconst routeTitleMap: Record<string, string> = {\n    [ROUTES.CATALOG]: 'Самокат',\n    [ROUTES.CART]: 'Корзина',\n    [ROUTES.STATUS]: 'Самокат',\n    [ROUTES.NO_AREA]: 'Адрес доставки',\n};\n\nconst getTitle = ({\n    router: {\n        location: { pathname },\n    },\n}: AppState) => routeTitleMap[pathname] || '';\n\nconst getAddress = ({\n    router: {\n        location: { pathname },\n    },\n    user: { address },\n}: AppState) => ({\n    text: address.address_string,\n    isVisible: pathname === ROUTES.CATALOG,\n});\n\nconst getCart = ({\n    router: {\n        location: { pathname },\n    },\n    cart: { totalCount, totalPrice },\n}: AppState) => ({\n    isVisible: totalCount > 0 && pathname === ROUTES.CATALOG,\n    count: totalCount,\n    price: splitByThousands(Math.ceil(totalPrice / 100)),\n});\n\nexport const headerView: Reducer = (state) => {\n    const { header } = state;\n\n    header.title = getTitle(state);\n\n    header.address = getAddress(state);\n    header.cart = getCart(state);\n    header.isBackButtonVisible = Boolean(window.history.length);\n};\n","/* eslint-disable no-underscore-dangle */\n/* eslint-disable @typescript-eslint/camelcase */\nimport { createStore as createReduxStore, Middleware, applyMiddleware, compose, StoreEnhancer, AnyAction } from 'redux';\nimport { routerMiddleware, push, goBack } from 'connected-react-router';\nimport { createHashHistory } from 'history';\n\nimport { USER_MOCK } from '../mocks';\n\nimport { AssistantSdkCommand } from './constants/native';\nimport { AssistantSdkServerAction } from './constants/server';\nimport { ROUTES } from './constants/router';\nimport { AppState, AppAction, AppDispatch } from './constants';\nimport { getRootReducer } from './reducers';\nimport * as actions from './actions';\n\nconst serverActionMiddleware: Middleware<{}, AppState, AppDispatch> = () => (next) => (action: AppAction) => {\n    switch (action.type) {\n        case 'ASK_FOR_STOCK': {\n            window.AssistantClient.sendData({ action_id: action.type });\n            break;\n        }\n        case 'ADDRESS_SUBMIT': {\n            window.AssistantClient.sendData({ action_id: action.type });\n            break;\n        }\n        case 'ASK_FOR_ORDER_STATUS': {\n            window.AssistantClient.sendData({ action_id: action.type });\n\n            // эмуляция ответа бэка для отладки в браузере\n            if (process.env.REACT_APP_ENVIRONMENT === 'development') {\n                window.AssistantClient.onData({\n                    type: 'smart_app_data',\n                    // eslint-disable-next-line @typescript-eslint/camelcase\n                    smart_app_data: {\n                        command: 'VALIDATION_OK',\n                        status: true,\n                        // eslint-disable-next-line @typescript-eslint/camelcase\n                        order_id: '364528',\n                    },\n                });\n            }\n\n            break;\n        }\n        case 'MAKE_PURCHASE': {\n            window.AssistantClient.sendData({ action_id: action.type });\n\n            // эмуляция ответа бэка для отладки в браузере\n            if (process.env.REACT_APP_ENVIRONMENT === 'development') {\n                window.AssistantClient.onData({\n                    type: 'smart_app_data',\n                    // eslint-disable-next-line @typescript-eslint/camelcase\n                    smart_app_data: {\n                        command: 'ASK_AGAIN_FOR_ORDER_STATUS',\n                    },\n                });\n            }\n\n            break;\n        }\n        case 'GO_TO_CART':\n            window.AssistantClient.sendData({ action_id: action.type });\n            break;\n        default:\n            break;\n    }\n\n    return next(action);\n};\n\nexport const history = createHashHistory();\nconst enhancers: StoreEnhancer[] = [];\nconst middlewares: Middleware[] = [routerMiddleware(history), serverActionMiddleware];\n\nif (process.env.NODE_ENV !== 'production') {\n    if (typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION__) {\n        enhancers.push(window.__REDUX_DEVTOOLS_EXTENSION__());\n    }\n}\n\n// TODO: научиться инитить приложение на основе рекавери стейта\n// https://sbtatlas.sigma.sbrf.ru/jira/browse/FOODTECHUI-42\nexport const store = createReduxStore<AppState, AppAction, {}, {}>(\n    getRootReducer(history),\n    compose(applyMiddleware(...middlewares), ...enhancers),\n);\nconst { dispatch } = store;\n\nif (process.env.NODE_ENV !== 'production') {\n    window.__store = store;\n}\n\nexport const dispatchToReduxStore = ({ smart_app_data }: AssistantSdkCommand) => {\n    switch (smart_app_data.command) {\n        case 'SHOW_ITEMS':\n            dispatch(actions.showItems(smart_app_data));\n            break;\n        case 'ADD_ITEM':\n            dispatch(actions.addItem(smart_app_data));\n            break;\n        case 'REMOVE_ALL':\n            dispatch(actions.removeAll(smart_app_data));\n            break;\n        case 'REMOVE_ITEM':\n            dispatch(actions.removeItem({ ...smart_app_data, shouldRemoveMention: true }));\n            break;\n        case 'GO_TO_CATALOG':\n            dispatch(actions.goToCatalog(smart_app_data));\n\n            // чтобы при перезагрузке страницы постоянно не переходить в каталог\n            // TODO: вертануть в зад\n            // if (process.env.REACT_APP_ENVIRONMENT !== 'development') {\n            dispatch(push(ROUTES.CATALOG));\n            // }\n            break;\n        case 'GO_TO_NO_AREA': {\n            dispatch(push(ROUTES.NO_AREA));\n            break;\n        }\n        case 'GO_TO_VALIDATION': {\n            dispatch(push(ROUTES.CART));\n            break;\n        }\n        case 'GO_TO_PROMO': {\n            dispatch(push(ROUTES.PROMO));\n            break;\n        }\n        case 'GO_TO_ADDRESS_SIMPLE': {\n            dispatch(push(ROUTES.ADDRESS_SIMPLE));\n            break;\n        }\n        case 'VALIDATION_OK': {\n            dispatch(actions.validationOk(smart_app_data));\n            dispatch(push(ROUTES.STATUS));\n            break;\n        }\n        case 'ADDRESS_INPUT': {\n            dispatch(actions.addressInput(smart_app_data));\n            dispatch(push(ROUTES.ADDRESS_SIMPLE));\n            break;\n        }\n        case 'ADDRESS_INPUT_ADD': {\n            dispatch(actions.addressInputAdd(smart_app_data));\n            break;\n        }\n        case 'GO_TO_WAIT': {\n            dispatch(actions.goToWait(smart_app_data));\n            dispatch(actions.askForOrderStatus());\n            break;\n        }\n        case 'GO_BACK': {\n            dispatch(actions.goBack(smart_app_data));\n            dispatch(goBack());\n            break;\n        }\n        case 'ASK_AGAIN_FOR_ORDER_STATUS': {\n            dispatch(actions.askAgainForOrderStatus(smart_app_data));\n            setTimeout(() => dispatch(actions.askForOrderStatus()), 2000);\n            break;\n        }\n        default:\n            break;\n    }\n};\n\nif (process.env.REACT_APP_ENVIRONMENT !== 'production' && module.hot) {\n    module.hot.accept('./reducers', () => {\n        // eslint-disable-next-line\n        const { getRootReducer } = require('./reducers');\n        const rootReducer = getRootReducer(history);\n\n        store.replaceReducer(rootReducer);\n    });\n}\n\nconst castFromStore = (): AppStateInterface => {\n    const { cart, user, router } = store.getState();\n\n    return {\n        foodtech: {\n            currentScreen: router.location.pathname.substring(1),\n            products: Object.keys(cart.itemsMap).map((itemId) => ({\n                id: itemId,\n                quantity: cart.itemsMap[itemId].count,\n            })),\n            totalPrice: {\n                value: cart.totalPrice,\n                discountValue: cart.totalPrice,\n            },\n            address: user.address,\n        },\n    };\n};\n\nwindow.AssistantClient = window.AssistantClient || {};\n\nif (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n    // eslint-disable-next-line no-underscore-dangle\n    window.__inbox = window.__inbox || [];\n    // eslint-disable-next-line no-underscore-dangle\n    window.__outbox = window.__outbox || [];\n}\n\n/**\n * Assistand SDK API implementation:\n */\nwindow.AssistantClient.onStart = function onStart() {\n    if (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n        console.log('invoke onStart callback');\n    }\n};\n\nwindow.AssistantClient.onData = function onData(command: AssistantSdkCommand) {\n    if (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n        // eslint-disable-next-line no-underscore-dangle\n        window.__inbox.push(command);\n    }\n\n    if (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n        console.log(`server command: ${JSON.stringify(command)}`);\n    }\n\n    dispatchToReduxStore(command);\n};\n\nwindow.AssistantClient.sendData = (message: AssistantSdkServerAction) => {\n    if (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n        // eslint-disable-next-line no-underscore-dangle\n        window.__outbox.push({ message, store: castFromStore() });\n    }\n\n    if (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n        console.log(`sendData: ${JSON.stringify(message)}`);\n    }\n\n    if (window.AssistantHost && typeof window.AssistantHost.sendData === 'function') {\n        window.AssistantHost.sendData(JSON.stringify(message), null);\n    }\n};\n\nwindow.AssistantClient.onRequestState = () => {\n    const state = castFromStore();\n    const stateString = JSON.stringify(state);\n\n    if (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n        console.log('invoke request state callback', stateString);\n    }\n\n    if (window.AssistantHost && typeof window.AssistantHost.updateState === 'function') {\n        window.AssistantHost.updateState(stateString);\n    }\n\n    // return stateString;\n};\n\nif (window.AssistantHost && typeof window.AssistantHost.ready === 'function') {\n    if (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n        console.log('call ready native method');\n    }\n\n    window.AssistantHost.ready();\n}\n\n// TODO: вертануть в зад\n// // эмуляция первой команды от бэка\n// if (process.env.REACT_APP_ENVIRONMENT === 'development') {\n//     setTimeout(() => {\n//         window.AssistantClient.onData({\n//             type: 'smart_app_data',\n//             // eslint-disable-next-line @typescript-eslint/camelcase\n//             smart_app_data: {\n//                 command: 'GO_TO_CATALOG',\n//                 // eslint-disable-next-line @typescript-eslint/camelcase\n//                 address: USER_MOCK,\n//             },\n//         });\n//     }, 100);\n// }\n","import { produce } from 'immer';\nimport { History } from 'history';\n\nimport { Reducer, initialState, AppAction } from '../constants';\n\nimport { getRouterModel } from './model/router';\nimport { cartModel } from './model/cart';\nimport { productsData } from './data/products';\nimport { userData } from './data/user';\nimport { catalogPageView } from './view/catalogPage';\nimport { cartPageView } from './view/cartPage';\nimport { addressSimplePageView } from './view/addressSimplePage';\nimport { headerView } from './view/header';\n\nexport const getRootReducer = (history: History) => {\n    const routerModel = getRouterModel(history);\n\n    return (state = initialState, action: AppAction) =>\n        produce(state, (draft) => {\n            [\n                // уровень данных\n                productsData,\n                userData,\n\n                // уровень бизнес логики\n                routerModel,\n                cartModel,\n\n                // уровень пропсов для для отрисовки компонентов\n                catalogPageView,\n                cartPageView,\n                addressSimplePageView,\n                headerView,\n            ].forEach((reducer: Reducer) => reducer(draft, action));\n        });\n};\n","import { History, LocationState } from 'history';\nimport { connectRouter, LocationChangeAction } from 'connected-react-router';\n\nimport { Reducer } from '../../constants';\n\nexport const getRouterModel = (history: History): Reducer => {\n    const changeRouter = connectRouter<LocationState>(history);\n\n    return (state, action) => {\n        /**\n         * @see https://github.com/supasate/connected-react-router/blob/master/src/reducer.js#L58\n         * Здесь костылим тип экшена, потому что в библиотеке\n         * криво написаны тайпинги. На самом деле, метод принимает любые экшены,\n         * но работает только LocationChangeAction (там стоит ифак на него).\n         *\n         * Проблема в том, что если не вызывать этот метод с другими экшенами,\n         * то по экшену @@INIT этот метод не вернет изначальное состояние router.\n         */\n        state.router = changeRouter(state.router, action as LocationChangeAction);\n    };\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'hooks';\nimport { ROUTES } from 'store/constants/router';\nimport { push } from 'connected-react-router';\nimport { throttle } from 'tools';\n\nimport addressIcon from './address.svg';\n\nconst StyledAddress = styled.div`\n    display: flex;\n    align-items: center;\n\n    text-decoration: none;\n    margin-left: 8px;\n\n    border-radius: 40px;\n    padding: 20px 40px;\n\n    height: 80px;\n    box-sizing: border-box;\n\n    transition: 0.2s ease-in-out;\n    will-change: background-color;\n\n    &:focus {\n        background: #08a652;\n    }\n`;\n\nconst StyledAddressIcon = styled.div`\n    width: 32px;\n    height: 38px;\n\n    background-image: url(${addressIcon});\n    background-repeat: no-repeat;\n    background-size: contain;\n`;\n\nconst StyledAddressText = styled.div`\n    margin-left: 20px;\n    height: 40px;\n    line-height: 40px;\n    color: #fff;\n    font-size: 32px;\n    font-weight: 600;\n`;\n\nexport const HeaderAddress: React.FC = () => {\n    const dispatch = useDispatch();\n    const { text, isVisible } = useSelector(({ header }) => header.address);\n\n    if (!isVisible) {\n        return null;\n    }\n\n    return (\n        <StyledAddress tabIndex={0} onClick={throttle(() => dispatch(push(ROUTES.ADDRESS_SIMPLE)), 200)}>\n            <StyledAddressIcon />\n            <StyledAddressText>{text}</StyledAddressText>\n        </StyledAddress>\n    );\n};\n","import React from 'react';\nimport { push } from 'connected-react-router';\nimport styled from 'styled-components';\nimport { goToCart } from 'store/actions';\nimport { AppState } from 'store/constants';\nimport { ROUTES } from 'store/constants/router';\nimport { throttle } from 'tools';\nimport { useDispatch, useSelector } from 'hooks';\n\nimport cartIcon from './cart.svg';\n\nconst StyledHeaderCart = styled.div`\n    display: flex;\n    align-items: center;\n    margin-left: 8px;\n    border-radius: 40px;\n    padding: 20px 40px;\n    height: 80px;\n    box-sizing: border-box;\n    transition: 0.2s ease-in-out;\n    will-change: background-color;\n\n    &:focus {\n        background: #08a652;\n    }\n`;\n\nconst StyledIcon = styled.div`\n    position: relative;\n    width: 40px;\n    height: 36px;\n    background-image: url('${cartIcon}');\n    background-repeat: no-repeat;\n    background-size: contain;\n`;\n\nconst StyledBadge = styled.span`\n    position: absolute;\n    top: -14px;\n    right: -12px;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    width: 32px;\n    height: 32px;\n    line-height: 28px;\n\n    font-size: 20px;\n\n    box-sizing: border-box;\n\n    color: #fff;\n    border-radius: 50%;\n    background: #08a652;\n\n    transition: 0.2s ease-in-out;\n    will-change: background-color;\n\n    ${StyledHeaderCart}:focus & {\n        color: #08a652;\n\n        background: #fff;\n        border: 2px solid #08a652;\n    }\n`;\n\nconst StyledPrice = styled.div`\n    height: 48px;\n    margin-left: 16px;\n    font-size: 32px;\n    font-weight: 600;\n    line-height: 50px;\n    color: #fff;\n`;\n\nexport const HeaderCart: React.FC = () => {\n    const dispatch = useDispatch();\n    const { count, price, isVisible } = useSelector(({ header }: AppState) => header.cart);\n\n    if (!isVisible) {\n        return null;\n    }\n\n    return (\n        <StyledHeaderCart\n            tabIndex={0}\n            onClick={throttle(() => {\n                dispatch(push(ROUTES.CART));\n                dispatch(goToCart());\n            }, 200)}\n        >\n            <StyledIcon>\n                <StyledBadge>{count}</StyledBadge>\n            </StyledIcon>\n            <StyledPrice>{price}&nbsp;₽</StyledPrice>\n        </StyledHeaderCart>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'hooks';\n\nimport { HeaderAddress } from '../HeaderAddress/HeaderAddress';\nimport { HeaderCart } from '../HeaderCart/HeaderCart';\n\nimport backButtonIcon from './chevron-right.svg';\nimport logoIcon from './logo.svg';\n\nconst StyledHeader = styled.div`\n    position: relative;\n\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    box-sizing: border-box;\n\n    --spatial-navigation-contain: contain;\n\n    height: 160px;\n\n    padding: 60px 88px 28px 128px;\n`;\n\nconst StyledBackButton = styled.span`\n    position: absolute;\n    top: 78px;\n    left: 56px;\n\n    width: 20px;\n    height: 36px;\n\n    background-image: url(${backButtonIcon});\n    background-repeat: no-repeat;\n    background-size: contain;\n\n    transition: transform 0.2s ease-in-out;\n`;\n\nconst StyledSection = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst StyledLogo = styled.div`\n    width: 72px;\n    height: 72px;\n    border-radius: 8px;\n\n    background-image: url(${logoIcon});\n    background-repeat: no-repeat;\n    background-size: contain;\n`;\n\nconst StyledTitle = styled.div`\n    display: inline-block;\n    margin-left: 24px;\n    height: 48px;\n    line-height: 44px;\n    font-size: 40px;\n    font-weight: bold;\n    color: #fff;\n`;\n\nexport const Header: React.FC = () => {\n    const { title, isBackButtonVisible } = useSelector(({ header }) => header);\n\n    return (\n        <StyledHeader>\n            {isBackButtonVisible && <StyledBackButton />}\n            <StyledSection>\n                <StyledLogo />\n                <StyledTitle>{title}</StyledTitle>\n            </StyledSection>\n            <StyledSection>\n                <HeaderAddress />\n                <HeaderCart />\n            </StyledSection>\n        </StyledHeader>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst contentMap = {\n    'sold-out': 'Раскупили',\n    'few-left': 'Осталось мало',\n    sale: 'Скидка',\n};\n\nconst backgroundMap = {\n    'sold-out': '#080808',\n    'few-left': '#F6650A',\n    sale: '#08A652',\n};\n\nconst StyledBadge = styled.div`\n    padding: 8px 16px;\n    font-weight: 500;\n    font-size: 24px;\n    line-height: 32px;\n    color: #fff;\n    border-radius: 16px;\n    background-color: ${(props: BadgeProps) => backgroundMap[props.type]};\n`;\n\nexport interface BadgeProps extends React.HTMLAttributes<HTMLDivElement> {\n    type: 'sold-out' | 'few-left' | 'sale';\n}\n\nexport const Badge: React.FC<BadgeProps> = ({ type, children, ...props }) => (\n    <StyledBadge type={type} {...props}>\n        {contentMap[type]} {children}\n    </StyledBadge>\n);\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { addItem, selectCatalogItem } from 'store/actions';\nimport { useDispatch, useFocusOnMount } from 'hooks';\nimport { throttle } from 'tools';\nimport { Badge, BadgeProps } from 'components/Badge/Badge';\nimport plusIcon from 'assets/icons/plus.svg';\n\nconst StyledDescription = styled.div`\n    position: relative;\n    padding: 32px 32px 36px;\n    box-sizing: border-box;\n    height: 200px;\n    background: rgba(255, 255, 255, 0.05);\n`;\n\nconst StyledName = styled.div`\n    height: 80px;\n    line-height: 40px;\n    font-size: 32px;\n    font-weight: 500;\n    color: #fff;\n\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 2;\n    overflow: hidden;\n`;\n\nconst StyledPriceContainer = styled.div`\n    margin-top: 12px;\n    display: flex;\n`;\n\nconst StyledPrice = styled.div`\n    height: 40px;\n    line-height: 40px;\n    font-size: 32px;\n    font-weight: 600;\n    color: #fff;\n`;\n\nconst StyledCount = styled.div`\n    height: 40px;\n    line-height: 40px;\n    margin-left: 8px;\n    font-size: 32px;\n    font-weight: 600;\n    color: #08a652;\n`;\n\ninterface StyledThumbProps {\n    imageUrl: string;\n}\nconst StyledThumb = styled.div<StyledThumbProps>`\n    display: block;\n    height: 392px;\n    width: 392px;\n\n    background-image: url('${(props) => props.imageUrl}');\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n`;\n\ninterface StyledIndexBadgeProps {\n    visible: boolean;\n}\n\nconst StyledIndexBadge = styled.div<StyledIndexBadgeProps>`\n    position: absolute;\n    left: 16px;\n    top: 16px;\n\n    height: 64px;\n    width: 64px;\n    text-align: center;\n    line-height: 64px;\n    font-size: 28px;\n    font-weight: 600;\n    color: rgba(0, 0, 0, 0.55);\n\n    background: #eaeaec;\n    border-radius: 40px;\n\n    transition: transform 0.2s ease-in-out, opacity 0.2s ease-in-out;\n\n    ${({ visible }) =>\n        visible\n            ? css`\n                  transform: scale(1);\n                  opacity: 1;\n              `\n            : css`\n                  transform: scale(0);\n                  opacity: 0;\n              `}\n`;\n\ninterface StyledButtonProps {\n    disabled?: boolean;\n}\nconst StyledButton = styled.div<StyledButtonProps>`\n    position: absolute;\n    top: -52px;\n    right: 24px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 72px;\n    height: 72px;\n    opacity: 0;\n    border-radius: 50%;\n    background: ${({ disabled }) => (disabled ? '#3b4b5e' : '#08a652')};\n    transition: opacity 0.2s ease-in-out;\n\n    &::before {\n        content: '';\n\n        display: block;\n\n        height: 32px;\n        width: 32px;\n\n        opacity: ${({ disabled }) => (disabled ? '0.5' : '1')};\n\n        transition: background 0.2s ease-in-out, opacity 0.2s ease-in-out;\n\n        background-image: url('${plusIcon}');\n        background-repeat: no-repeat;\n        background-size: contain;\n        background-position: center;\n    }\n`;\n\nconst CatalogListItemBadge = styled(Badge)`\n    position: absolute;\n    top: 16px;\n    right: 16px;\n    z-index: 1;\n`;\n\ninterface StyledCatalogListItemProps {\n    disabled?: boolean;\n}\nconst StyledCatalogListItem = styled.div<StyledCatalogListItemProps>`\n    position: relative;\n    width: 392px;\n    height: 592px;\n\n    margin-right: 32px;\n\n    display: flex;\n    flex-direction: column;\n    flex-shrink: 0;\n\n    overflow: hidden;\n    border-radius: 24px;\n    box-shadow: 0 16px 48px rgba(0, 0, 0, 0.1);\n\n    transition: 0.4s ease-in-out;\n    will-change: transform;\n    will-change: background-color;\n\n    &:focus {\n        transform: scale(1.08);\n\n        background-color: rgba(255, 255, 255, 0.1);\n\n        ${({ disabled }) =>\n            !disabled &&\n            css`\n                ${StyledButton} {\n                    opacity: 1;\n                }\n            `}\n    }\n\n    ${({ disabled }) =>\n        disabled &&\n        css`\n            ${StyledDescription},\n            ${StyledThumb} {\n                opacity: 0.5;\n            }\n        `}\n`;\n\nexport interface CatalogListItemProps {\n    shouldFocusOnMount: boolean;\n    imageUrl: string;\n    index: number;\n    count: number;\n    name: string;\n    id: string;\n    price: number;\n    badge?: BadgeProps;\n    disabled?: boolean;\n    buttonDisabled?: boolean;\n}\n\nexport const CatalogListItem: React.FC<CatalogListItemProps> = ({\n    shouldFocusOnMount,\n    imageUrl,\n    index,\n    count,\n    name,\n    id,\n    price,\n    badge,\n    disabled,\n    buttonDisabled,\n}) => {\n    const dispatch = useDispatch();\n    const memoizedThrottledOnClick = React.useCallback(\n        throttle(() => {\n            if (!disabled) {\n                dispatch(addItem({ item: id, count: '1' }));\n            }\n        }, 150),\n        [dispatch, id, disabled],\n    );\n    const memoizedOnFocus = React.useCallback(() => dispatch(selectCatalogItem(id)), [dispatch, id]);\n    const onMountRef = useFocusOnMount<HTMLDivElement>();\n\n    return (\n        <StyledCatalogListItem\n            ref={shouldFocusOnMount ? onMountRef : undefined}\n            tabIndex={0}\n            disabled={disabled}\n            onFocus={memoizedOnFocus}\n            onClick={memoizedThrottledOnClick}\n        >\n            {badge ? <CatalogListItemBadge {...badge} /> : ''}\n            <StyledIndexBadge visible={index > 0}>{index}</StyledIndexBadge>\n            <StyledThumb imageUrl={imageUrl} />\n            <StyledDescription>\n                <StyledButton disabled={buttonDisabled} />\n                <StyledName>{name}</StyledName>\n                <StyledPriceContainer>\n                    <StyledPrice>{price} ₽</StyledPrice>\n                    {count ? <StyledCount>×{count}</StyledCount> : ''}\n                </StyledPriceContainer>\n            </StyledDescription>\n        </StyledCatalogListItem>\n    );\n};\n","import { createAction } from 'tools/action-creator';\n\nexport const selectCatalogItem = (payload: string) => createAction('catalog/SELECT_ITEM', payload);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'hooks';\n\nimport { CatalogListItem } from '../ListItem/CatalogListItem';\n\nconst preventScroll = (e: React.UIEvent<HTMLDivElement>) => {\n    e.currentTarget.scrollLeft = 0;\n};\n\nconst StyledCatalogList = styled.div`\n    margin-top: 72px;\n    height: 640px;\n    overflow: hidden;\n`;\n\nconst StyledContainer = styled.div`\n    position: relative;\n    height: 660px;\n    overflow: hidden;\n    --spatial-navigation-contain: contain;\n`;\n\ninterface StyledWrapperProps {\n    XShift: number;\n}\nconst StyledWrapper = styled.div<StyledWrapperProps>`\n    display: flex;\n    white-space: nowrap;\n    padding: 24px 0 44px;\n    height: 660px;\n    box-sizing: border-box;\n    transition: transform 0.4s ease-in-out;\n    transform: translateX(${({ XShift }) => -1 * XShift}px);\n`;\n\nexport const CatalogList: React.FC = () => {\n    const { itemsMap, order, wrapperXShift, screenIndex } = useSelector(({ catalogPage }) => catalogPage);\n    const items = React.useMemo(() => order.map((itemId) => itemsMap[itemId]), [order, itemsMap]);\n\n    return (\n        <StyledCatalogList>\n            <StyledContainer onScroll={preventScroll}>\n                <StyledWrapper XShift={wrapperXShift}>\n                    {items.map((item) => (\n                        <CatalogListItem key={item.id} {...item} index={screenIndex.indexOf(item.index)} />\n                    ))}\n                </StyledWrapper>\n            </StyledContainer>\n        </StyledCatalogList>\n    );\n};\n","import React from 'react';\nimport ContentLoader, { IContentLoaderProps } from 'react-content-loader';\n\ninterface SkeletonProps extends IContentLoaderProps {\n    itemWidth: number;\n    itemHeight: number;\n    borderRadius: number;\n    rowCount: number;\n    columnCount: number;\n    paddingBetweenColumns: number;\n    paddingBetweenRows: number;\n}\n\nexport const Skeleton: React.FC<SkeletonProps> = ({\n    itemWidth,\n    itemHeight,\n    borderRadius,\n    rowCount,\n    columnCount,\n    paddingBetweenColumns,\n    paddingBetweenRows,\n    ...props\n}) => {\n    const list = Array.from(Array(columnCount)).map((_, columnIndex) =>\n        Array.from(Array(rowCount)).map((_, rowIndex) => (\n            <rect\n                key={`${columnIndex} ${rowIndex}`}\n                x={columnIndex * (itemWidth + paddingBetweenColumns)}\n                y={rowIndex * (itemHeight + paddingBetweenRows)}\n                width={itemWidth}\n                height={itemHeight}\n                rx={borderRadius}\n                ry={borderRadius}\n            />\n        )),\n    );\n\n    return <ContentLoader {...props}>{list}</ContentLoader>;\n};\n","import packageJSON from '../../package.json';\n\nconst PREFIX = packageJSON.cssPrefix;\n\ninterface ConfitionsInterface<T> {\n    T?: boolean;\n}\n\nexport default (blockName: string, delimeter = '__', modDelimeter = '_'): BemRenderer => {\n    function renderer(...elements: string[]): string {\n        if (!elements.length) {\n            return PREFIX + blockName;\n        }\n\n        return elements.map((element) => PREFIX + blockName + delimeter + element).join(' ');\n    }\n\n    renderer.elem = (element: string, mod: string, modVal?: string): string =>\n        PREFIX + blockName + delimeter + element + modDelimeter + mod + (modVal ? modDelimeter + modVal : '');\n\n    renderer.mod = (mod: string, modVal?: string): string =>\n        PREFIX + blockName + modDelimeter + mod + (modVal ? modDelimeter + modVal : '');\n\n    renderer.modify = (conditions: ConfitionsInterface<string> = {}, elem?: string): string => {\n        const elemToModify = elem ? blockName + delimeter + elem : blockName;\n\n        return [\n            PREFIX,\n            elemToModify,\n            ' ',\n            Object.entries(conditions)\n                .map(([mod, predicate]) => Boolean(predicate) && PREFIX + elemToModify + modDelimeter + mod)\n                .filter(Boolean)\n                .join(' '),\n        ].join('');\n    };\n\n    renderer.all = (...values: string[]): string => values.join(' ');\n\n    return renderer;\n};\n","import React from 'react';\nimport Bem from 'tools/bem';\n\nexport default (Component: React.FC<any>, componentName?: string) => (props?: any, context?: any) => (\n    <Component {...props} context={context} bem={Bem(componentName || Component.name)} />\n);\n","import React from 'react';\nimport { Skeleton } from 'components/Skeleton/Skeleton';\nimport withBem from 'hoc/withBem';\n\nimport './CatalogSkeleton.scss';\n\ntype CatalogSkeletonProps = BemProps;\n\nconst itemWidth = 392;\nconst itemHeight = 592;\nconst columnCount = 5;\nconst paddingBetween = 32;\n\nexport const Component: React.FC<CatalogSkeletonProps> = ({ bem }) => (\n    <div className={bem()}>\n        <Skeleton\n            viewBox={`0 0 ${itemWidth * columnCount + paddingBetween * (columnCount - 1)} ${itemHeight}`}\n            width=\"100%\"\n            height=\"100%\"\n            backgroundColor=\"#262828\"\n            foregroundColor=\"#414545\"\n            itemWidth={itemWidth}\n            itemHeight={itemHeight}\n            borderRadius={24}\n            rowCount={2}\n            columnCount={5}\n            paddingBetweenRows={paddingBetween}\n            paddingBetweenColumns={paddingBetween}\n            speed={2}\n        />\n    </div>\n);\n\nexport const CatalogSkeleton = withBem(Component, 'CatalogSkeleton');\n","import React from 'react';\nimport { useSelector, useDispatch } from 'hooks';\nimport { SHOW_ITEMS_MOCK } from 'mocks';\nimport { askForStock } from 'store/actions';\nimport { Header } from 'components/Header/Header';\n\nimport { CatalogList } from './List/CatalogList';\nimport { CatalogSkeleton } from './Skeleton/CatalogSkeleton';\n\nexport const Catalog: React.FC = () => {\n    const dispatch = useDispatch();\n    const { order } = useSelector(({ catalogPage }) => catalogPage);\n\n    React.useEffect(() => {\n        dispatch(askForStock());\n    }, [dispatch]);\n\n    React.useEffect(() => {\n        // TODO: вертануть в зад\n        // if (process.env.REACT_APP_ENVIRONMENT === 'development') {\n        //     window.AssistantClient.onData({\n        //         type: 'smart_app_data',\n        //         // eslint-disable-next-line\n        //         smart_app_data: {\n        //             command: 'SHOW_ITEMS',\n        //             stock: SHOW_ITEMS_MOCK,\n        //         },\n        //     });\n        //\n        //     window.AssistantClient.onData({\n        //         type: 'smart_app_data',\n        //         // eslint-disable-next-line\n        //         smart_app_data: {\n        //             command: 'ADD_ITEM',\n        //             item: '21ff407a-fa98-11e8-80c5-0cc47a817925',\n        //             count: '2',\n        //         },\n        //     });\n        // }\n    }, []);\n\n    return (\n        <>\n            <Header />\n            {order.length ? <CatalogList /> : <CatalogSkeleton />}\n        </>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useFocusOnMount } from 'hooks';\n\nconst StyledButton = styled.button`\n    padding: 20px 40px;\n    border-radius: 40px;\n    display: flex;\n    border: none;\n    color: #fff;\n    font-weight: 600;\n    font-size: 32px;\n    align-items: center;\n    justify-content: center;\n    background-color: rgba(255, 255, 255, 0.1);\n    transition: background-color 0.3s ease-in-out;\n\n    &:focus {\n        background-color: #08a652;\n    }\n\n    &[disabled] {\n        opacity: 0.5;\n    }\n`;\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n    shouldFocusOnMount?: boolean;\n    forwardRef?: React.RefObject<unknown>;\n}\n\nexport const Button: React.FC<ButtonProps> = ({ className, shouldFocusOnMount, forwardRef, ...props }) => {\n    const mountFocusRef = useFocusOnMount<HTMLButtonElement>();\n    const ref = forwardRef || shouldFocusOnMount ? mountFocusRef : null;\n\n    return <StyledButton className={className} ref={ref} type=\"button\" {...props} />;\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { throttle } from 'tools';\nimport { updateUser, makePurchase } from 'store/actions';\nimport { useDispatch, useSelector } from 'hooks';\nimport { Button } from 'components/Button/Button';\n\nconst StyledCartInfo = styled.div`\n    position: relative;\n    display: flex;\n    padding-top: 48px;\n    box-sizing: border-box;\n    flex-direction: column;\n    align-items: center;\n    width: 776px;\n`;\n\nconst StyledBadge = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 132px;\n    height: 124px;\n`;\n\nconst StyledBadgeBody = styled.div`\n    position: relative;\n    width: 132px;\n    height: 86px;\n    background: #e12d39;\n    border-radius: 108px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst StyledBadgeName = styled.div`\n    color: #fff;\n    height: 34px;\n    font-size: 32px;\n    font-weight: 600;\n    line-height: 34px;\n    text-align: center;\n`;\n\nconst StyledBadgeDescription = styled.div`\n    height: 20px;\n    color: rgba(255, 255, 255, 0.8);\n    font-size: 24px;\n    font-weight: 500;\n    line-height: 20px;\n    text-align: center;\n`;\n\nconst StyledBadgeKernel = styled.div`\n    height: 34px;\n    width: 4px;\n    background: #e12d39;\n    border-bottom-left-radius: 2px;\n    border-bottom-right-radius: 2px;\n`;\n\nconst StyledBadgeShadowBig = styled.div`\n    margin-top: -2px;\n    width: 74px;\n    height: 6px;\n    background: #06182e;\n    filter: blur(6px);\n    display: flex;\n    justify-content: center;\n`;\n\nconst StyledBadgeShadowSmall = styled.div`\n    margin-top: -4px;\n    width: 50px;\n    height: 4px;\n    background: #06182e;\n    filter: blur(4px);\n`;\n\nconst StyledAddress = styled.div`\n    margin-top: 48px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: 56px;\n    font-weight: 600;\n    font-size: 48px;\n    line-height: 56px;\n    color: #fff;\n`;\n\nconst StyledPersonal = styled.div`\n    margin-top: 8px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nconst StyledPersonalLocation = styled.div`\n    margin-top: 8px;\n    height: 40px;\n    font-size: 32px;\n    font-weight: 500;\n    line-height: 40px;\n    color: #fff;\n`;\n\nconst StyledPersonalPhoneNumber = styled.div`\n    margin-top: 60px;\n    height: 56px;\n    font-weight: 600;\n    font-size: 48px;\n    line-height: 56px;\n    color: #fff;\n`;\n\nconst StyledPersonalName = styled.div`\n    margin-top: 8px;\n    height: 40px;\n    font-size: 32px;\n    font-weight: 500;\n    line-height: 40px;\n    color: #fff;\n`;\n\nconst StyledAskPersonal = styled.div`\n    margin-top: 14px;\n    text-align: center;\n    font-size: 32px;\n    line-height: 44px;\n    color: rgba(255, 255, 255, 0.74);\n`;\n\nconst CartInfoButton = styled(Button)`\n    margin-top: 64px;\n\n    padding: 20px 40px;\n    border-radius: 40px;\n\n    display: flex;\n\n    border: none;\n\n    color: #fff;\n\n    font-weight: 600;\n    font-size: 32px;\n\n    align-items: center;\n    justify-content: center;\n\n    background-color: rgba(255, 255, 255, 0.1);\n\n    transition: background-color 0.3s ease-in-out;\n\n    &:focus {\n        background-color: #08a652;\n    }\n`;\n\nexport const CartInfo: React.FC = () => {\n    const dispatch = useDispatch();\n    const {\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        phone_num,\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        address: { address_string, building, confirmed },\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        customer_name,\n    } = useSelector(({ user }) => user);\n    const { makePurchaseButton } = useSelector(({ cartPage }) => cartPage);\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    const phoneNumber = phone_num;\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    const name = customer_name;\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    const addressString = address_string;\n\n    return (\n        <StyledCartInfo>\n            <StyledBadge>\n                <StyledBadgeBody>\n                    <StyledBadgeName>15-30</StyledBadgeName>\n                    <StyledBadgeDescription>мин</StyledBadgeDescription>\n                </StyledBadgeBody>\n                <StyledBadgeKernel />\n                <StyledBadgeShadowBig />\n                <StyledBadgeShadowSmall />\n            </StyledBadge>\n            <StyledAddress>{addressString}</StyledAddress>\n            {confirmed ? (\n                <>\n                    <StyledPersonal>\n                        <StyledPersonalLocation>{building}</StyledPersonalLocation>\n                        <StyledPersonalPhoneNumber>{phoneNumber}</StyledPersonalPhoneNumber>\n                        <StyledPersonalName>{name}</StyledPersonalName>\n                    </StyledPersonal>\n                    <CartInfoButton\n                        {...makePurchaseButton}\n                        shouldFocusOnMount\n                        onClick={throttle(() => dispatch(makePurchase()), 200)}\n                    >\n                        Перейти к оплате\n                    </CartInfoButton>\n                </>\n            ) : (\n                <>\n                    <StyledAskPersonal>\n                        Чтобы сделать заказ, укажите квартиру, подъезд и другую дополнительную информацию\n                    </StyledAskPersonal>\n                    <CartInfoButton\n                        shouldFocusOnMount\n                        onClick={throttle(\n                            () =>\n                                dispatch(\n                                    updateUser({\n                                        location: 'подъезд 1, корпус Г',\n                                        phoneNumber: '+7 910 345 67 89',\n                                        name: 'Сергей',\n                                    }),\n                                ),\n                            200,\n                        )}\n                    >\n                        Дополнить адрес\n                    </CartInfoButton>\n                </>\n            )}\n        </StyledCartInfo>\n    );\n};\n","import { createAction } from 'tools/action-creator';\n\nexport const updateUser = (payload: any) => createAction('UPDATE_USER', payload);\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { useSelector, useDispatch } from 'hooks';\nimport { Button } from 'components/Button/Button';\nimport { addItem, removeItem, selectCartItem } from 'store/actions';\nimport { throttle } from 'tools';\nimport plusIcon from 'assets/icons/plus.svg';\nimport minusIcon from 'assets/icons/minus.svg';\n\nconst StyledIndexBadge = styled.div`\n    position: absolute;\n    left: 8px;\n    top: 8px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 64px;\n    width: 64px;\n    font-size: 28px;\n    font-weight: 600;\n    border-radius: 50%;\n    color: rgba(0, 0, 0, 0.55);\n    background-color: #eaeaec;\n`;\n\ninterface StyledThumbProps {\n    imageUrl: string;\n}\nconst StyledThumb = styled.div<StyledThumbProps>`\n    height: 120px;\n    width: 120px;\n    border-radius: 16px;\n    margin-right: 32px;\n    background-image: url('${({ imageUrl }) => imageUrl}');\n    background-size: contain;\n    background-position: center;\n    background-repeat: no-repeat;\n`;\n\nconst StyledInfo = styled.div`\n    width: 384px;\n    margin-right: 48px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`;\n\ninterface StyledNameProps {\n    oneLine?: boolean;\n}\nconst StyledName = styled.div<StyledNameProps>`\n    line-height: 40px;\n    font-size: 32px;\n    font-weight: 500;\n    color: #fff;\n\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 2;\n    overflow: hidden;\n\n    ${({ oneLine }) =>\n        oneLine &&\n        css`\n            -webkit-line-clamp: 1;\n        `}\n`;\n\nconst StyledPrice = styled.div`\n    margin-top: 4px;\n    height: 36px;\n    line-height: 36px;\n    font-size: 28px;\n    color: rgba(255, 255, 255, 0.47);\n`;\n\nconst StyledSoldOut = styled.div`\n    margin-top: 4px;\n    font-weight: 500;\n    font-size: 28px;\n    line-height: 36px;\n    color: #f6650a;\n`;\n\ninterface StyledSelectorProps {\n    focused?: boolean;\n}\nconst StyledSelector = styled.div<StyledSelectorProps>`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    padding: 8px;\n    box-sizing: border-box;\n\n    width: 216px;\n    height: 80px;\n    border-radius: 40px;\n\n    will-change: background-color;\n\n    transition: 0.2s ease-in-out;\n\n    ${({ focused }) =>\n        focused &&\n        css`\n            background: rgba(255, 255, 255, 0.05);\n        `}\n`;\n\nconst StyledSelectorValue = styled.div`\n    font-size: 32px;\n    line-height: 40px;\n    font-weight: 600;\n    color: #fff;\n`;\n\nconst CartListItemRemoveButton = styled(Button)`\n    background: rgba(255, 255, 255, 0.05);\n\n    &:focus {\n        background-color: #e12d39;\n    }\n`;\n\ninterface StyledSelectorButtonProps {\n    view: 'less' | 'more' | 'remove';\n}\nconst StyledSelectorButton = styled.button<StyledSelectorButtonProps>`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: rgba(255, 255, 255, 0.05);\n    border-radius: 32px;\n    height: 64px;\n    width: 64px;\n    border: none;\n    will-change: background-color;\n    transition: 0.2s ease-in-out;\n\n    &::before {\n        content: '';\n\n        height: 24px;\n        width: 24px;\n\n        background-repeat: no-repeat;\n        background-size: contain;\n        background-position: center;\n    }\n\n    &[disabled] {\n        opacity: 0.4;\n    }\n\n    ${({ view }) =>\n        view === 'less' &&\n        css`\n            &:focus {\n                background: #08a652;\n            }\n\n            &::before {\n                background-image: url('${minusIcon}');\n            }\n        `}\n\n    ${({ view }) =>\n        view === 'more' &&\n        css`\n            &:focus {\n                background: #08a652;\n            }\n\n            &::before {\n                background-image: url('${plusIcon}');\n            }\n        `}\n\n    ${({ view }) =>\n        view === 'remove' &&\n        css`\n            transform: rotate(45deg);\n\n            &:focus {\n                background-color: #e12d39;\n            }\n\n            &::before {\n                background-image: url('${plusIcon}');\n            }\n        `}\n`;\n\ninterface StyledCartListItemProps {\n    disabled?: boolean;\n}\nconst StyledCartListItem = styled.div<StyledCartListItemProps>`\n    position: relative;\n    display: flex;\n    height: 152px;\n    width: 832px;\n    align-items: center;\n    padding: 16px;\n    box-sizing: border-box;\n\n    ${({ disabled }) =>\n        disabled &&\n        css`\n            ${StyledIndexBadge}\n            ${StyledThumb}\n            ${StyledName}\n            ${StyledPrice} {\n                    opacity: .24;\n            }\n\n            ${StyledPrice} {\n                color: #fff;\n        `}\n`;\n\nexport interface CartListItemProps {\n    id: string;\n    index: number;\n}\n\nexport interface CartListItemViewProps {\n    imageUrl: string;\n    name: string;\n    price: number;\n    count: number;\n    disabled?: boolean;\n    moreButtonDisabled?: boolean;\n}\n\nexport const CartListItem: React.FC<CartListItemProps> = ({ index, id }) => {\n    const { imageUrl, name, price, count, disabled, moreButtonDisabled } = useSelector(\n        ({ cartPage: { itemsMap } }) => itemsMap[id],\n    );\n    const dispatch = useDispatch();\n\n    const memoizedThrottledOnLessClick = React.useCallback(\n        throttle(() => {\n            dispatch(\n                removeItem({\n                    item: id,\n                    count: '1',\n                    shouldRemoveMention: !count,\n                }),\n            );\n        }, 100),\n        [dispatch, id, count],\n    );\n    const memoizedThrottledOnMoreClick = React.useCallback(\n        throttle(() => {\n            dispatch(\n                addItem({\n                    item: id,\n                    count: '1',\n                }),\n            );\n        }, 100),\n        [dispatch, id],\n    );\n    const memoizedThrottledOnRemoveClick = React.useCallback(\n        throttle(() => {\n            dispatch(\n                removeItem({\n                    item: id,\n                    count: String(count),\n                    shouldRemoveMention: true,\n                }),\n            );\n        }, 100),\n        [dispatch, id, count],\n    );\n    const memoizedOnFocus = React.useCallback(() => dispatch(selectCartItem(id)), [dispatch, id]);\n\n    return (\n        <StyledCartListItem>\n            <StyledIndexBadge>{index}</StyledIndexBadge>\n            <StyledThumb imageUrl={imageUrl} />\n            <StyledInfo>\n                <StyledName>{name}</StyledName>\n                <StyledPrice>{price} ₽</StyledPrice>\n                {disabled ? <StyledSoldOut>Раскупили</StyledSoldOut> : ''}\n            </StyledInfo>\n            {disabled ? (\n                <CartListItemRemoveButton onFocus={memoizedOnFocus} onClick={memoizedThrottledOnRemoveClick}>\n                    Удалить\n                </CartListItemRemoveButton>\n            ) : (\n                <StyledSelector>\n                    <StyledSelectorButton\n                        type=\"button\"\n                        aria-label=\"less\"\n                        view={count ? 'less' : 'remove'}\n                        onFocus={memoizedOnFocus}\n                        onClick={memoizedThrottledOnLessClick}\n                    />\n                    <StyledSelectorValue>{count}</StyledSelectorValue>\n                    <StyledSelectorButton\n                        type=\"button\"\n                        aria-label=\"more\"\n                        view=\"more\"\n                        disabled={moreButtonDisabled}\n                        onFocus={memoizedOnFocus}\n                        onClick={memoizedThrottledOnMoreClick}\n                    />\n                </StyledSelector>\n            )}\n        </StyledCartListItem>\n    );\n};\n","import { createAction } from 'tools/action-creator';\n\nexport const selectCartItem = (payload: string) => createAction('cart/SELECT_ITEM', payload);\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { useSelector } from 'hooks';\nimport { SHOW_ITEMS_MOCK } from 'mocks';\n\nimport { CartListItem } from '../ListItem/CartListItem';\n\nconst preventScroll = (e: React.UIEvent<HTMLDivElement>) => {\n    e.currentTarget.scrollTop = 0;\n};\n\nconst StyledCartList = styled.div`\n    position: relative;\n    height: 792px;\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`;\n\nconst StyledContainer = styled.div`\n    position: relative;\n    width: 832px;\n    max-height: 608px;\n    overflow: hidden;\n    --spatial-navigation-contain: contain;\n`;\n\ninterface StyledWrapperProps {\n    YShift: number;\n}\nconst StyledWrapper = styled.div<StyledWrapperProps>`\n    overflow-x: hidden;\n    width: 832px;\n    padding-right: 10px;\n    will-change: transform;\n    transition: transform 0.5s ease-in-out;\n\n    transform: translateY(-${({ YShift }) => YShift}px);\n`;\n\nconst StyledTotalPrice = styled.div`\n    margin-top: 32px;\n    margin-left: 16px;\n    line-height: 56px;\n    font-size: 48px;\n    font-weight: 600;\n    color: #fff;\n`;\n\nconst StyledMinimalPrice = styled.div`\n    margin: 8px 0 0 16px;\n    font-weight: 500;\n    font-size: 32px;\n    line-height: 40px;\n    color: #f6650a;\n`;\n\ninterface StyledGradientProps {\n    view: 'top' | 'bottom';\n    hidden?: boolean;\n}\nconst StyledGradient = styled.div<StyledGradientProps>`\n    position: absolute;\n    left: 0;\n    right: 0;\n    height: 160px;\n    z-index: 1;\n    background: linear-gradient(0, #001124 0%, rgba(0, 17, 36, 0) 89.09%);\n    transition: opacity .2s ease-in-out;\n\n    ${({ view }) =>\n        view === 'top' &&\n        css`\n            top: -1px;\n\n            transform: rotate(180deg);\n        `}\n\n    ${({ view }) =>\n        view === 'bottom' &&\n        css`\n            bottom: -1px;\n        `}\n\n    opacity: ${({ hidden }) => (hidden ? '0' : '1')};\n`;\n\nexport const CartList: React.FC = () => {\n    const { order, totalPrice, toMinimumPrice, topGradientHidden, bottomGradientHidden, wrapperYShift } = useSelector(\n        ({ cartPage }) => cartPage,\n    );\n\n    React.useEffect(() => {\n        // TODO: вертануть в зад\n        // if (process.env.REACT_APP_ENVIRONMENT === 'development') {\n        //     window.AssistantClient.onData({\n        //         type: 'smart_app_data',\n        //         // eslint-disable-next-line\n        //         smart_app_data: {\n        //             command: 'SHOW_ITEMS',\n        //             stock: SHOW_ITEMS_MOCK,\n        //         },\n        //     });\n        //\n        //     Object.keys(SHOW_ITEMS_MOCK).forEach((itemId) => {\n        //         window.AssistantClient.onData({\n        //             type: 'smart_app_data',\n        //             // eslint-disable-next-line\n        //             smart_app_data: {\n        //                 command: 'ADD_ITEM',\n        //                 item: itemId,\n        //                 count: String(Math.max(1, Math.floor(Math.random() * 5))),\n        //             },\n        //         });\n        //     });\n        // }\n    }, []);\n\n    return (\n        <StyledCartList>\n            <StyledContainer onScroll={preventScroll}>\n                <StyledGradient view=\"top\" hidden={topGradientHidden} />\n                <StyledWrapper YShift={wrapperYShift}>\n                    {order.map((itemId, index) => (\n                        <CartListItem key={itemId} index={index + 1} id={itemId} />\n                    ))}\n                </StyledWrapper>\n                <StyledGradient view=\"bottom\" hidden={bottomGradientHidden} />\n            </StyledContainer>\n            <StyledTotalPrice>Сумма заказа {totalPrice} ₽</StyledTotalPrice>\n            {toMinimumPrice ? (\n                <StyledMinimalPrice>До минимального заказа еще {toMinimumPrice} ₽</StyledMinimalPrice>\n            ) : (\n                ''\n            )}\n        </StyledCartList>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'hooks';\nimport { Header } from 'components/Header/Header';\nimport mapImage from 'assets/images/map.png';\n\nimport { CartInfo } from './Info/CartInfo';\nimport { CartList } from './List/CartList';\n\nconst StyledBackground = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    background-image: url('${mapImage}');\n\n    &::before {\n        content: '';\n        position: absolute;\n        left: 0;\n        top: 0;\n        right: 0;\n        bottom: 0;\n\n        background: linear-gradient(90.98deg, #001124 50.03%, rgba(0, 17, 36, 0) 99.56%);\n    }\n`;\n\nconst StyledContainer = styled.div`\n    display: flex;\n    position: relative;\n    justify-content: space-between;\n    padding: 0 112px;\n`;\n\nconst StyledOverlap = styled.div`\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    background: rgba(0, 0, 0, 0.6);\n\n    &::before {\n        content: 'Здесь будет крутиться роскошный спиннер';\n        font-size: 56px;\n        color: #fff;\n    }\n`;\n\nexport const Cart: React.FC = () => {\n    const { isOrderStatusWaiting } = useSelector(({ cartPage }) => cartPage);\n\n    return (\n        <>\n            <StyledBackground />\n            <Header />\n            <StyledContainer>\n                <CartList />\n                <CartInfo />\n            </StyledContainer>\n            {isOrderStatusWaiting ? <StyledOverlap /> : ''}\n        </>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'hooks';\nimport { Header } from 'components/Header/Header';\nimport { Button } from 'components/Button/Button';\n\nimport FirstFigureIcon from './figure-1.svg';\nimport SecondFigureIcon from './figure-2.svg';\nimport ThirdFigureIcon from './figure-3.svg';\nimport FourthFigureIcon from './figure-4.svg';\nimport SixthFigureIcon from './figure-6.svg';\nimport SeventhFigureIcon from './figure-7.svg';\nimport EighthFigureIcon from './figure-8.svg';\nimport NinthFigureIcon from './figure-9.svg';\n\nconst StatusButton = styled(Button)`\n    margin-top: 60px;\n`;\n\nconst StatusContainer = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 206px 0 0;\n`;\n\nconst StatusOrderNumber = styled.div`\n    font-size: 32px;\n    font-weight: 600;\n    line-height: 44px;\n    color: rgba(255, 255, 255, 0.74);\n`;\n\nconst StatusOrderTime = styled.div`\n    margin-top: 16px;\n    font-weight: bold;\n    font-size: 64px;\n    line-height: 72px;\n    text-align: center;\n    color: #fff;\n`;\n\nconst StatusFigure = styled.div`\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: contain;\n`;\n\nconst StatusFirstFigure = styled(StatusFigure)`\n    position: absolute;\n    top: 92px;\n    left: 834px;\n\n    height: 61px;\n    width: 61px;\n\n    background-image: url('${FirstFigureIcon}');\n`;\n\nconst StatusSecondFigure = styled(StatusFigure)`\n    position: absolute;\n    top: 0;\n    left: 482px;\n\n    height: 61px;\n    width: 61px;\n\n    background-image: url('${SecondFigureIcon}');\n`;\n\nconst StatusThirdFigure = styled(StatusFigure)`\n    position: absolute;\n    top: 280px;\n    left: 236px;\n\n    height: 46px;\n    width: 46px;\n\n    background-image: url('${ThirdFigureIcon}');\n`;\n\nconst StatusFourthFigure = styled(StatusFigure)`\n    position: absolute;\n    top: 158px;\n    left: 1487px;\n\n    height: 53px;\n    width: 53px;\n\n    background-image: url('${FourthFigureIcon}');\n`;\n\nconst StatusFifthFigure = styled(StatusFigure)`\n    position: absolute;\n    top: 594px;\n    left: 340px;\n\n    height: 53px;\n    width: 53px;\n\n    transform: rotate(90deg);\n\n    background-image: url('${FirstFigureIcon}');\n`;\n\nconst StatusSixthFigure = styled(StatusFigure)`\n    position: absolute;\n    top: 500px;\n    left: 652px;\n\n    height: 60px;\n    width: 60px;\n\n    background-image: url('${SixthFigureIcon}');\n`;\n\nconst StatusSeventhFigure = styled(StatusFigure)`\n    position: absolute;\n    top: 705px;\n    left: 1044px;\n\n    height: 40px;\n    width: 40px;\n\n    background-image: url('${SeventhFigureIcon}');\n`;\n\nconst StatusEighthFigure = styled(StatusFigure)`\n    position: absolute;\n    top: 492px;\n    left: 1268px;\n\n    height: 40px;\n    width: 40px;\n\n    background-image: url('${EighthFigureIcon}');\n`;\n\nconst StatusNinthFigure = styled(StatusFigure)`\n    position: absolute;\n    top: 590px;\n    left: 1604px;\n\n    height: 90px;\n    width: 90px;\n\n    background-image: url('${NinthFigureIcon}');\n`;\n\nexport const Status: React.FC = () => {\n    const { orderId } = useSelector(({ cart }) => cart);\n\n    return (\n        <>\n            <Header />\n            <StatusContainer>\n                <StatusOrderNumber>Заказ #{orderId} оформлен</StatusOrderNumber>\n                <StatusOrderTime>\n                    Спасибо за заказ!\n                    <br />\n                    Будем у вас через 15-30 минут.\n                </StatusOrderTime>\n                <StatusButton shouldFocusOnMount>Очень жду</StatusButton>\n                <StatusFirstFigure />\n                <StatusSecondFigure />\n                <StatusThirdFigure />\n                <StatusFourthFigure />\n                <StatusFifthFigure />\n                <StatusSixthFigure />\n                <StatusSeventhFigure />\n                <StatusEighthFigure />\n                <StatusNinthFigure />\n            </StatusContainer>\n        </>\n    );\n};\n","import React from 'react';\nimport { push } from 'connected-react-router';\nimport withBem from 'hoc/withBem';\nimport { useInterval, useDispatch } from 'hooks';\nimport { ROUTES } from 'store/constants/router';\nimport { Button } from 'components/Button/Button';\n\nimport './Promo.scss';\n\ntype PromoProps = BemProps;\n\nconst POPCORN_TYPES_COUNT = 4;\n\nconst Component: React.FC<PromoProps> = ({ bem }) => {\n    const dispatch = useDispatch();\n    const [currentIndex, setIndex] = React.useState(0);\n    // useInterval(() => setIndex(currentIndex === POPCORN_TYPES_COUNT - 1 ? 0 : currentIndex + 1), 3000);\n\n    const memoizedOnClickSubmitButton = React.useCallback(() => {\n        dispatch(push(ROUTES.ADDRESS_SIMPLE));\n    }, [dispatch]);\n\n    return (\n        <div className={bem.modify({ [`type-${currentIndex + 1}`]: true })}>\n            <div className={bem('glow')}>\n                <div className={bem.modify({ [`type-${currentIndex + 1}`]: true }, 'glow-1')} />\n                <div className={bem.modify({ [`type-${currentIndex + 1}`]: true }, 'glow-2')} />\n                <div className={bem.modify({ [`type-${currentIndex + 1}`]: true }, 'glow-3')} />\n                <div className={bem.modify({ [`type-${currentIndex + 1}`]: true }, 'glow-4')} />\n            </div>\n            <div className={bem('title')}>\n                Попкорн и напитки\n                <br />к просмотру фильмов\n                <br />и сериалов\n            </div>\n            <div className={bem('subtitle')}>\n                Доставим бесплатно в течении 15-30 минут для Москвы и Санкт-Петербурга\n            </div>\n            {Array.from(Array(POPCORN_TYPES_COUNT)).map((_, index) => (\n                <div\n                    key={index}\n                    className={bem.modify({ [`type-${index + 1}`]: true, hidden: index !== currentIndex }, 'image')}\n                />\n            ))}\n            <div className={bem('button-container')}>\n                <Button className={bem('button')} shouldFocusOnMount onClick={memoizedOnClickSubmitButton}>\n                    Указать адрес\n                </Button>\n                <Button className={bem('button')}>Не сейчас</Button>\n            </div>\n        </div>\n    );\n};\n\nexport const Promo = withBem(Component, 'Promo');\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport faceIcon from './face.svg';\n\nconst StyledBadge = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    align-items: center;\n\n    width: 132px;\n    height: 124px;\n`;\n\nconst StyledBadgeBody = styled.div`\n    width: 84px;\n    height: 84px;\n    border-radius: 50%;\n\n    background-image: url(${faceIcon});\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: cover;\n`;\n\nconst StyledBadgeKernel = styled.div`\n    height: 36px;\n    width: 4px;\n\n    background: #e12d39;\n    border-bottom-left-radius: 2px;\n    border-bottom-right-radius: 2px;\n`;\n\nconst StyledBadgeShadowBig = styled.div`\n    margin-top: -2px;\n\n    width: 74px;\n    height: 6px;\n    background: #06182e;\n    filter: blur(6px);\n\n    display: flex;\n    justify-content: center;\n`;\n\nconst StyledBadgeShadowSmall = styled.div`\n    margin-top: -4px;\n    width: 50px;\n    height: 4px;\n    background: #06182e;\n    filter: blur(4px);\n`;\n\nexport const Badge: FC = () => (\n    <StyledBadge>\n        <StyledBadgeBody />\n        <StyledBadgeKernel />\n        <StyledBadgeShadowBig />\n        <StyledBadgeShadowSmall />\n    </StyledBadge>\n);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'hooks';\nimport { Header } from 'components/Header/Header';\nimport { Button } from 'components/Button/Button';\n\nimport backgroundImage from '../../assets/images/map.png';\n\nimport { Badge } from './Badge/Badge';\n\nconst StyledNoArea = styled.div`\n    height: 100%;\n    position: relative;\n    background: #001124;\n`;\n\nconst StyledHeader = styled(Header)`\n    position: relative;\n    z-index: 10;\n`;\n\nconst StyledContainer = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    padding: 64px 0;\n\n    z-index: 10;\n`;\n\nconst StyledTitle = styled.div`\n    margin-top: 48px;\n    font-weight: bold;\n    font-size: 72px;\n    line-height: 72px;\n    color: #fff;\n`;\n\nconst StyledSubtitle = styled.div`\n    margin-top: 12px;\n    font-weight: 500;\n    font-size: 32px;\n    line-height: 40px;\n    color: #fff;\n`;\n\nconst StyledButton = styled(Button)`\n    margin-top: 40px;\n`;\n\nconst StyledBackground = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: url(${backgroundImage});\n    background-blend-mode: luminosity;\n\n    z-index: 1;\n\n    &::before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n\n        background: linear-gradient(0, #001124 0, rgba(0, 17, 36, 0) 65%);\n        transform: rotate(-180deg);\n    }\n\n    &::after {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n\n        background: linear-gradient(0, #001124 0, rgba(0, 17, 36, 0) 65%);\n    }\n`;\n\nexport const NoArea: React.FC = () => {\n    const address = useSelector(({ user }) => user.address.address_string);\n\n    return (\n        <StyledNoArea>\n            <StyledHeader />\n            <StyledContainer>\n                <Badge />\n                <StyledTitle>{address}</StyledTitle>\n                <StyledSubtitle>К сожалению, пока не доставляем по этому адресу</StyledSubtitle>\n                <StyledButton shouldFocusOnMount>Изменить</StyledButton>\n            </StyledContainer>\n            <StyledBackground />\n        </StyledNoArea>\n    );\n};\n","import React from 'react';\nimport withBem from 'hoc/withBem';\n\nimport './ScreenSaver.scss';\n\ntype ScreenSaverProps = BemProps;\n\nconst Component: React.FC<ScreenSaverProps> = ({ bem }) => (\n    <div className={bem()}>\n        Это скринсейвер\n        <br />\n        Здесь будет роскошный прелоадер с попкорном\n    </div>\n);\n\nexport const ScreenSaver = withBem(Component, 'ScreenSaver');\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { useFocusOnMount } from 'hooks';\n\nconst StyledTitle = styled.div`\n    margin-top: 12px;\n    color: rgba(255, 255, 255, 0.28);\n    font-weight: 500;\n    font-size: 24px;\n    line-height: 32px;\n`;\n\nconst StyledInput = styled.input`\n    margin-top: 6px;\n    height: 40px;\n    width: 100%;\n    font-weight: 500;\n    font-size: 32px;\n    color: #fff;\n    caret-color: #2ac673;\n    line-height: 40px;\n    padding: 0;\n    border: none;\n    background: transparent;\n`;\n\ninterface StyledRootProps {\n    isFocused?: boolean;\n}\nconst StyledRoot = styled.div<StyledRootProps>`\n    height: 112px;\n    width: 900px;\n    box-sizing: border-box;\n    padding: 0 32px;\n\n    border-top: 4px solid #1a1a1a;\n    border-left: 4px solid #1a1a1a;\n    border-right: 4px solid #1a1a1a;\n    border-bottom: 4px solid rgba(255, 255, 255, 0.12);\n\n    border-radius: 24px;\n    background-color: #1a1a1a;\n\n    transition: border 0.2s ease-in-out;\n\n    ${({ isFocused }) =>\n        isFocused &&\n        css`\n            border-width: 4px;\n            border-style: solid;\n            border-color: #2ac673;\n\n            ${StyledTitle} {\n                color: #2ac673;\n\n                transition: color 0.2s ease-in-out;\n            }\n        `}\n`;\n\ninterface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {\n    title: string;\n    onSubmit?: (event: React.SyntheticEvent<HTMLInputElement>) => void;\n    shouldFocusOnMount?: boolean;\n}\n\nexport const Input: React.FC<InputProps> = ({ title, shouldFocusOnMount, onSubmit, ...props }) => {\n    const [isFocused, setFocus] = React.useState(false);\n    const inputRef = React.useRef<HTMLInputElement>(null);\n    const onMountRef = useFocusOnMount<HTMLDivElement>();\n    const memoizedOnRootFocus = React.useCallback(() => setFocus(true), [setFocus]);\n    const memoizedOnRootBlur = React.useCallback(() => setFocus(false), [setFocus]);\n    const memoizedOnInputKeyPress = React.useCallback(\n        (event: React.KeyboardEvent<HTMLInputElement>) => {\n            if (onSubmit && event && event.key === 'Enter') {\n                onSubmit(event);\n            }\n        },\n        [onSubmit],\n    );\n    const memoizedOnRootKeyPress = React.useCallback(() => {\n        if (inputRef && inputRef.current) {\n            inputRef.current.focus();\n        }\n    }, []);\n\n    return (\n        <StyledRoot\n            tabIndex={0}\n            ref={shouldFocusOnMount ? onMountRef : undefined}\n            isFocused={isFocused}\n            onFocus={memoizedOnRootFocus}\n            onBlur={memoizedOnRootBlur}\n            onKeyPress={memoizedOnRootKeyPress}\n        >\n            <StyledTitle>{title}</StyledTitle>\n            <StyledInput tabIndex={-1} ref={inputRef} type=\"text\" onKeyPress={memoizedOnInputKeyPress} {...props} />\n        </StyledRoot>\n    );\n};\n","export const makeRequest = (url: string, params: Record<string, string | number | boolean>) => {\n    const paramsString = Object.keys(params)\n        .reduce<string[]>((acc, key) => {\n            acc.push(`${key}=${params[key as keyof typeof params]}`);\n\n            return acc;\n        }, [])\n        .join('&');\n\n    url = `${url}?${paramsString}`;\n\n    return fetch(url).then((response: Response) => {\n        if (!response.ok) {\n            throw response.statusText;\n        }\n\n        return response.json();\n    });\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Input } from 'components/Input/Input';\nimport { useSelector, useDispatch } from 'hooks';\nimport { addressChangeInputValue, addressSetSuggests, addressSubmit } from 'store/actions';\nimport { Header } from 'components/Header/Header';\nimport { getSuggests } from 'tools/2gis';\nimport { Button } from 'components/Button/Button';\n\nimport {\n    AddressSimpleSuggestListItem,\n    SUGGEST_ITEM_HEIGHT,\n    SUGGEST_ITEM_MARGIN,\n} from './SuggestItem/AddressSimpleSuggestItem';\n\nconst StyledContainer = styled.div`\n    display: flex;\n    align-items: start;\n    height: 100%;\n    padding: 160px 0 0 340px;\n`;\n\nconst StyledInputContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    flex: 0 0;\n`;\n\nconst AddressSimpleButton = styled(Button)`\n    margin-left: 32px;\n    padding: 32px 48px;\n    background: rgba(255, 255, 255, 0.12);\n    border-radius: 140px;\n    font-weight: 600;\n    font-size: 40px;\n    line-height: 48px;\n    color: #ffffff;\n`;\n\ninterface StyledSuggestListProps {\n    hidden?: boolean;\n}\nconst StyledSuggestList = styled.div<StyledSuggestListProps>`\n    height: ${({ hidden }) => (hidden ? 0 : (SUGGEST_ITEM_HEIGHT + SUGGEST_ITEM_MARGIN) * 3)}px;\n    overflow: hidden;\n    transition: height 0.5s ease-in-out;\n`;\n\ninterface StyledSuggestListContainerProps {\n    YShift: number;\n}\nconst StyledSuggestListContainer = styled.div<StyledSuggestListContainerProps>`\n    display: flex;\n    flex-direction: column;\n\n    transition: transform 0.5s ease-in-out;\n    transform: translateY(-${({ YShift }) => YShift}px);\n`;\n\nconst preventScroll = (event: React.SyntheticEvent<HTMLDivElement>) => {\n    event.currentTarget.scrollTop = 0;\n};\n\nexport const AddressSimple: React.FC = () => {\n    const submitButtonRef = React.useRef<HTMLButtonElement>(null);\n    const [isKeyboardExpanded, setIsKeyboardExpanded] = React.useState(false);\n\n    const dispatch = useDispatch();\n    const { inputValue, suggests, suggestListContainerYShift, isSubmitButtonDisabled, deviceLocation } = useSelector(\n        ({ addressSimplePage }) => addressSimplePage,\n    );\n\n    React.useEffect(() => {\n        const onResize = () => {\n            setIsKeyboardExpanded(!isKeyboardExpanded);\n        };\n\n        window.addEventListener('resize', onResize);\n\n        return () => {\n            window.removeEventListener('resize', onResize);\n        };\n    }, [isKeyboardExpanded, setIsKeyboardExpanded]);\n\n    const memoizedOnInputChange = React.useCallback<(e: React.ChangeEvent<HTMLInputElement>) => void>(\n        (event) => {\n            dispatch(addressChangeInputValue(event.currentTarget.value));\n        },\n        [dispatch],\n    );\n    const memoizedOnInputSubmit = React.useCallback(() => {\n        if (submitButtonRef && submitButtonRef.current instanceof HTMLButtonElement) {\n            submitButtonRef.current.focus();\n        }\n    }, []);\n    const memoizedOnClickButton = React.useCallback(() => {\n        dispatch(addressSubmit());\n    }, [dispatch]);\n\n    React.useEffect(() => {\n        getSuggests({ q: inputValue, location: deviceLocation }).then((items) => {\n            dispatch(addressSetSuggests(items));\n        });\n    }, [dispatch, inputValue, deviceLocation]);\n\n    // TODO: при изменении инпута тащим саджесты\n    // если саджест полностью совпадает, то кнопка перестает дизейблиться\n    // фильтровать только улицы\n    // вычищать стор после успеха\n    // TODO: перевести фокус на кнопку по нажатию на ОК в инпуте\n\n    return (\n        <>\n            <Header />\n            <StyledContainer>\n                <StyledInputContainer>\n                    <Input\n                        shouldFocusOnMount\n                        value={inputValue}\n                        title=\"Введите дом и улицу\"\n                        onChange={memoizedOnInputChange}\n                        onSubmit={memoizedOnInputSubmit}\n                    />\n                    <StyledSuggestList hidden={isKeyboardExpanded} onScroll={preventScroll}>\n                        <StyledSuggestListContainer YShift={suggestListContainerYShift}>\n                            {suggests.map((item, index) => (\n                                <AddressSimpleSuggestListItem key={item.id} index={index} />\n                            ))}\n                        </StyledSuggestListContainer>\n                    </StyledSuggestList>\n                </StyledInputContainer>\n                <AddressSimpleButton\n                    // disabled={isSubmitButtonDisabled}\n                    forwardRef={submitButtonRef}\n                    onClick={memoizedOnClickButton}\n                >\n                    Сохранить\n                </AddressSimpleButton>\n            </StyledContainer>\n        </>\n    );\n};\n","import * as DG from '2gis-maps';\nimport { makeRequest } from 'tools/request';\nimport { Location } from 'store/constants/user';\n\nconst DG_KEY = 'ruvqwj0703';\n\ninterface GetSuggestsParams {\n    q: string;\n    location: Location;\n}\nexport const getSuggests = ({ q, location: { longitude, latitude } }: GetSuggestsParams): Promise<DG.SuggestItem[]> => {\n    if (q === '') {\n        return Promise.resolve([] as DG.SuggestItem[]);\n    }\n\n    return Promise.resolve(0)\n        .then(() => {\n            const params = {\n                q,\n                key: DG_KEY,\n                local: 'ru_RU',\n                fields: [\n                    'items.address',\n                    // 'items.statistics',\n                    // 'items.name_ex',\n                    'items.point',\n                    // 'items.description',\n                    // 'items.context',\n                ].join(','),\n                type: ['building', 'street'].join(','),\n                viewpoint1: [(Number(longitude) - 0.2).toFixed(6), (Number(latitude) + 0.2).toFixed(6)].join(','),\n                viewpoint2: [(Number(longitude) + 0.2).toFixed(6), (Number(latitude) - 0.2).toFixed(6)].join(','),\n                // eslint-disable-next-line @typescript-eslint/camelcase\n                is_viewport_change: false,\n            };\n\n            return makeRequest('https://catalog.api.2gis.ru/3.0/suggests', params);\n        })\n        .then((response) => {\n            if (response.meta.code !== 200) {\n                console.error(response.meta.error);\n            }\n\n            return response;\n        })\n        .then(({ result }: DG.SuggestResponse) => {\n            if (!result) {\n                return [];\n            }\n\n            return result.items;\n            // return result.items.filter((item) => item.type === 'street');\n        })\n        .then((data) => {\n            console.log('some', data);\n\n            return data;\n        });\n};\n\ninterface SearchParams {\n    point: string;\n}\n\nexport const search = ({ point }: SearchParams) => {\n    const params = {\n        key: DG_KEY,\n        point,\n        radius: '30',\n        type: 'building',\n    };\n\n    return makeRequest('https://catalog.api.2gis.ru/2.0/geo/search', params).then((response: DG.SearchResponse) => {\n        if (response.meta.code !== 200) {\n            console.error(response.meta.error);\n        }\n\n        return response;\n    });\n};\n\ninterface GetItemsByIdParams {\n    id: string;\n}\nexport const getItemsById = ({ id }: GetItemsByIdParams) => {\n    const params = {\n        key: DG_KEY,\n        id,\n        fields: ['items.name_ex'].join(','),\n    };\n};\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { Switch, Route, Router } from 'react-router';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { store, history } from 'store';\nimport { ROUTES } from 'store/constants/router';\nimport { Catalog } from 'pages/Catalog/Catalog';\nimport { Cart } from 'pages/Cart/Cart';\nimport { Status } from 'pages/Status/Status';\nimport { Promo } from 'pages/Promo/Promo';\nimport { NoArea } from 'pages/NoArea/NoArea';\nimport { ScreenSaver } from 'pages/ScreenSaver/ScreenSaver';\nimport { AddressSimple } from 'pages/AddressSimple/AddressSimple';\n\nimport 'style/global.scss';\n\nconst isStaging = process.env.REACT_APP_ENVIRONMENT === 'staging';\nconst isFixNeeded = isStaging && window.location.href.indexOf('address-simple') === -1;\n\nconst StyledWrapper = styled.div`\n    transform: ${isFixNeeded ? 'translate(-580px, -310px)' : ''};\n`;\n\n// эти костыли со стилями нужны для того, чтобы верстка норм смотрелась на планшете\n// там разрешение экрана ~600X300 px\nconst StyledContainer = styled.div`\n    overflow: hidden;\n    width: 100%;\n    height: 100vh;\n    outline: none;\n    font-family: 'SB Sans Text', Helvetica, Arial, sans-serif;\n    background: #000;\n\n    ${() =>\n        isFixNeeded &&\n        css`\n            transform: scale(0.4);\n            height: 1080px;\n            width: 1920px;\n        `}\n`;\n\nexport const Root: React.FC = () => (\n    <ReduxProvider store={store}>\n        <ConnectedRouter history={history}>\n            <StyledWrapper>\n                <StyledContainer>\n                    <Switch>\n                        <Route path={ROUTES.CATALOG}>\n                            <Catalog />\n                        </Route>\n                        <Route path={ROUTES.CART}>\n                            <Cart />\n                        </Route>\n                        <Route path={ROUTES.STATUS}>\n                            <Status />\n                        </Route>\n                        <Route path={ROUTES.ADDRESS_SIMPLE}>\n                            <AddressSimple />\n                        </Route>\n                        <Route path={ROUTES.PROMO}>\n                            <Promo />\n                        </Route>\n                        <Route path={ROUTES.NO_AREA}>\n                            <NoArea />\n                        </Route>\n                        <Route path={ROUTES.SCREEN_SAVER}>\n                            <ScreenSaver />\n                        </Route>\n                    </Switch>\n                </StyledContainer>\n            </StyledWrapper>\n        </ConnectedRouter>\n    </ReduxProvider>\n);\n","import 'core-js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Root } from 'components/Root/Root';\n\nimport 'tools/new-spatial-navigation';\n\nexport const renderApp = (App: React.FC) => {\n    ReactDOM.render(<App />, document.getElementById('application_root'));\n};\n\nrenderApp(Root);\n\nif (process.env.REACT_APP_ENVIRONMENT !== 'production' && module.hot) {\n    module.hot.accept('./components/Root/Root', () => {\n        // eslint-disable-next-line\n        const { Root } = require('./components/Root/Root.tsx');\n        renderApp(Root);\n    });\n}\n","module.exports = __webpack_public_path__ + \"static/media/plus.1b914755.svg\";","module.exports = __webpack_public_path__ + \"static/media/map.14a1524d.png\";","module.exports = __webpack_public_path__ + \"static/media/figure-1.cad64c9b.svg\";"],"sourceRoot":""}