{"version":3,"sources":["components/HeaderCart/cart.svg","assets/icons/plus.svg","assets/images/map.png","pages/Status/figure-2.svg","pages/Status/figure-3.svg","pages/Status/figure-4.svg","pages/Status/figure-6.svg","pages/Status/figure-7.svg","pages/Status/figure-8.svg","pages/Status/figure-9.svg","tools/new-spatial-navigation.js","store/constants/router.tsx","store/constants/index.tsx","store/reducers/router.tsx","store/reducers/cart.tsx","store/reducers/products.tsx","store/reducers/user.tsx","store/reducers/catalogPage.tsx","tools/action-creator.tsx","store/actions/native.tsx","store/actions/server.tsx","store/index.tsx","store/reducers/index.tsx","hooks/useFocusOnMount.tsx","hooks/useInterval.tsx","hooks/useDispatch.tsx","hooks/useSelector.tsx","tools/bem.ts","hoc/withBem.tsx","components/Header/Header.tsx","tools/index.tsx","components/HeaderAddress/HeaderAddress.tsx","components/HeaderCart/HeaderCart.tsx","components/Badge/Badge.tsx","pages/Catalog/ListItem/CatalogListItem.tsx","store/actions/catalogPage.tsx","pages/Catalog/List/CatalogList.tsx","components/Skeleton/Skeleton.tsx","pages/Catalog/Skeleton/CatalogSkeleton.tsx","pages/Catalog/Catalog.tsx","components/Button/Button.tsx","pages/Cart/Info/CartInfo.tsx","store/actions/user.tsx","pages/Cart/ListItem/CartListItem.tsx","pages/Cart/List/CartList.tsx","pages/Cart/Cart.tsx","pages/Status/Status.tsx","pages/Promo/Promo.tsx","pages/NoArea/NoArea.tsx","pages/ScreenSaver/ScreenSaver.tsx","pages/AddressSimple/AddressSimple.tsx","components/Root/Root.tsx","index.tsx","pages/Status/figure-1.svg"],"names":["module","exports","window","ARROW_KEY_CODE","37","38","39","40","mapOfBoundRect","startingPoint","savedSearchOrigin","element","rect","spatialNavigationHandler","addEventListener","e","currentKeyMode","parent","__spatialNavigation__","keyMode","eventTarget","document","activeElement","dir","keyCode","shiftKey","ctrlKey","metaKey","altKey","defaultPrevented","focusNavigableArrowKey","left","up","right","down","nodeName","startPosition","selectionStart","endPosition","selectionEnd","undefined","includes","getAttribute","value","length","handlingEditableElement","preventDefault","Map","navigate","x","clientX","y","clientY","target","getBoundingClientRect","searchOrigin","body","querySelector","elementStyle","getComputedStyle","invisibleStyle","disabled","getPropertyValue","documentElement","height","width","top","bottom","isVisibleInScroller","scroller","getScrollContainer","findSearchOrigin","console","log","elementFromPosition","elementFromPoint","isFocusable","isContainer","getSpatialNavigationContainer","container","contentDocument","bestInsideCandidate","spatialNavigationSearch","candidates","getSpatialNavigationCandidates","mode","focusingController","parentContainer","parentElement","location","navigateChain","bestCandidate","createSpatNavEvents","focus","preventScroll","scrollingController","isScrollable","isScrollBoundary","moveScroll","isHTMLScrollBoundary","ownerDocument","option","childElementCount","getElementsByTagName","children","elem","isDelegableContainer","push","concat","filter","isVisible","getFilteredSpatialNavigationCandidates","targetElement","filteredCandidates","args","this","bestTarget","internalCandidates","externalCandidates","insideOverlappedCandidates","focusableAreas","overlappedCandidates","forEach","isEntirelyVisible","getOverlappedCandidates","defaultContainer","defaultCandidates","contains","candidate","fullyOverlapped","overlappedByParent","map","elm","flat","currentElm","getClosestElement","getDistanceFromPoint","getInnerDistance","selectBestCandidateFromEdge","selectBestCandidate","innerTarget","descendantsBest","splice","indexOf","originalContainer","eventTargetRect","candidateRect","candidateBody","isOutside","isInside","spatialNavigationFunction","currentTargetRect","distanceFunction","alignedCandidates","isAligned","getAbsoluteDistance","getDistance","frameElement","minDistance","Number","POSITIVE_INFINITY","minDistanceElements","i","distance","getEuclideanDistance","scrollContainer","isScrollContainer","focusables","Array","prototype","call","eventType","containerElement","currentElement","direction","triggeredEvent","CustomEvent","bubbles","cancelable","detail","causedTarget","dispatchEvent","readCssVar","varName","trim","currentOption","nextContainer","offset","scrollLeft","scrollTop","isCSSSpatNavContain","overflowX","overflowY","isOverflow","scrollWidth","clientWidth","scrollHeight","clientHeight","result","winScrollY","winScrollX","Math","abs","elementRect","nearestScroller","scrollerRect","DOMRect","innerWidth","innerHeight","tabIndex","tagName","isAtagWithoutHref","isActuallyDisabled","inert","isExpresslyInert","isVisibleStyleProperty","style","opacity","isBeingRendered","offsetX","parseInt","offsetWidth","offsetY","offsetHeight","isNaN","hitTestPoint","middle","leftTop","rightBottom","point","elemFromPoint","hitTest","containerRect","thisVisibility","childRect","rightEdgeCheck","leftEdgeCheck","topEdgeCheck","bottomEdgeCheck","rect1","rect2","isRightSide","isBelow","points","getEntryAndExitPoints","P1","entryPoint","exitPoint","P2","sqrt","pow","baseEdge","orthogonalBias","alignBias","A","B","C","intersectionRect","intersection_rect","area","new_location","max","new_max_point","min","getIntersectionRect","D","get","boundingClientRect","toFixed","set","enableExperimentalAPIs","getInitialAPIs","Object","assign","canScroll","findTarget","findCandidate","bestNextTarget","isArray","findCandidates","bind","findNextTarget","getDistanceFromTarget","candidateElement","getExperimentalAPI","seal","_keymode","setStartingPoint","__getSpatNavState","searchOriginRect","Element","CSS","registerProperty","name","syntax","inherits","initialValue","HTMLElement","requestAnimationFrame","async","scrollIntoView","behavior","block","inline","Promise","resolve","IntersectionObserver","entry","isIntersecting","threshold","observe","event","HTMLButtonElement","click","ROUTES","initialState","cart","itemsMap","order","totalCount","totalPrice","orderId","products","router","user","customer_name","phone_num","address","address_string","apartment","building","city","confirmed","door_code","entrance","floor","house","latitude","longitude","street","catalogPage","selectedItemId","getTotalCount","values","reduce","acc","item","count","getTotalPrice","itemId","productItem","price","store","action","type","countString","payload","maxCount","quantity_left","cartItem","shouldRemoveMention","cartItemId","clear","order_id","state","stock","prepareBadge","quantityLeft","calculateCount","calculateButtonDisabled","prepareCatalogItemsMap","keys","index","shouldFocusOnMount","imageUrl","images_urls","guid","ceil","badge","buttonDisabled","prepareItem","firstItemId","catalogItem","createAction","createEmptyAction","addItem","removeItem","askForOrderStatus","history","createHashHistory","middlewares","routerMiddleware","next","AssistantClient","sendData","action_id","createReduxStore","changeRouter","connectRouter","getRouter","produce","draft","reducer","getRootReducer","compose","applyMiddleware","dispatch","dispatchToReduxStore","smart_app_data","command","actions","CATALOG","NO_AREA","CART","STATUS","setTimeout","useFocusOnMount","ref","React","useRef","useLayoutEffect","current","onStart","process","onData","message","AssistantHost","JSON","stringify","onRequestState","getState","currentScreen","pathname","substring","foodtech","id","quantity","discountValue","castFromStore","stateString","updateState","ready","useDispatch","useReduxDispatch","useSelector","mapStateToProps","useReduxSelector","PREFIX","cssPrefix","blockName","delimeter","modDelimeter","renderer","elements","join","mod","modVal","modify","conditions","elemToModify","entries","predicate","Boolean","all","Component","componentName","props","context","bem","Bem","Header","withBem","title","className","splitByThousands","data","split","reduceRight","arr","throttle","callback","timeout","timeoutId","HeaderAddress","userAddress","onClick","ADDRESS_SIMPLE","StyledHeaderCart","styled","div","StyledIcon","cartIcon","StyledBadge","span","StyledPrice","HeaderCart","String","contentMap","sale","backgroundMap","StyledDescription","StyledName","StyledPriceContainer","StyledCount","StyledThumb","StyledIndexBadge","StyledButton","plusIcon","CatalogListItemBadge","StyledCatalogListItem","css","CatalogListItem","memoizedThrottledOnClick","useCallback","memoizedOnFocus","onMountRef","onFocus","StyledCatalogList","StyledContainer","CatalogList","items","useMemo","key","Skeleton","itemWidth","itemHeight","borderRadius","rowCount","columnCount","paddingBetweenColumns","paddingBetweenRows","list","from","_","columnIndex","rowIndex","rx","ry","CatalogSkeleton","viewBox","backgroundColor","foregroundColor","speed","Catalog","useEffect","button","Button","mountFocusRef","makePurchaseAction","CartInfo","phoneNumber","addressString","big","small","MINIMAL_PRICE","CartListItem","onLessClick","onMoreClick","onSelect","clear_name","selected","setFocus","useState","isSoldOut","canAddMore","clearName","backgroundImage","onBlur","aria-label","less","remove","more","onScroll","currentTarget","getOffset","itemsCount","relatedIndex","CartList","selectedItemIndex","setSelectedItemIndex","totalPriceInRubles","cartItemsCount","isFirstItemSelected","isLastItemSelected","wrapperStyle","transform","hidden","StyledBackground","mapImage","Cart","StatusButton","StatusContainer","StatusOrderNumber","StatusOrderTime","StatusFigure","StatusFirstFigure","FirstFigureIcon","StatusSecondFigure","SecondFigureIcon","StatusThirdFigure","ThirdFigureIcon","StatusFourthFigure","FourthFigureIcon","StatusFifthFigure","StatusSixthFigure","SixthFigureIcon","StatusSeventhFigure","SeventhFigureIcon","StatusEighthFigure","EighthFigureIcon","StatusNinthFigure","NinthFigureIcon","Status","Promo","currentIndex","setIndex","POPCORN_TYPES_COUNT","intervalId","setInterval","clearInterval","NoArea","ScreenSaver","AddressSimple","StyledWrapper","renderApp","App","ReactDOM","render","getElementById","path","PROMO","SCREEN_SAVER"],"mappings":"0zFAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,2SCa3C,WAEI,GAAI,aAAcC,OACd,OAGJ,MAAMC,EAAiB,CAAEC,GAAI,OAAQC,GAAI,KAAMC,GAAI,QAASC,GAAI,QAEhE,IAAIC,EAAiB,KACjBC,EAAgB,KAChBC,EAAoB,CAAEC,QAAS,KAAMC,KAAM,MAwE/C,SAASC,IAKLX,OAAOY,iBAAiB,UAAYC,IAChC,MAAMC,EACDC,QAAUA,OAAOC,sBAAsBC,SAAYjB,OAAOgB,sBAAsBC,QAC/EC,EAAcC,SAASC,cACvBC,EAAMpB,EAAeY,EAAES,SAM7B,GA1Fa,IAsFTT,EAAES,UACFf,EAAgB,SAIfO,GACkB,SAAnBA,GACoB,eAAnBA,IAAoCD,EAAEU,UACnB,UAAnBT,GAA8BD,EAAEU,UACjCV,EAAEW,SACFX,EAAEY,SACFZ,EAAEa,UAIDb,EAAEc,iBAAkB,CACrB,IAAIC,EAAyB,CACzBC,MAAM,EACNC,IAAI,EACJC,OAAO,EACPC,MAAM,GAImB,UAAzBd,EAAYe,UAAiD,aAAzBf,EAAYe,WAChDL,EAkhDhB,SAAiCf,GAC7B,MAEMK,EAAcC,SAASC,cACvBc,EAAgBhB,EAAYiB,eAC5BC,EAAclB,EAAYmB,aAC1BT,EAAyB,CAC3BC,MAAM,EACNC,IAAI,EACJC,OAAO,EACPC,MAAM,GAGJX,EAAMpB,EAAeY,EAAES,SAC7B,QAAYgB,IAARjB,EACA,OAAOO,IAdmB,CAAC,QAAS,OAAQ,QAAS,SAAU,OAAQ,QAiBjDW,SAASrB,EAAYsB,aAAa,UAAqB,OAARnB,GAAwB,SAARA,KAhBlE,CAAC,WAAY,OAAQ,SAAU,MAAO,MAAO,MAkBxCkB,SAASrB,EAAYsB,aAAa,UAAqC,aAAzBtB,EAAYe,UAC9EC,IAAkBE,IAEI,IAAlBF,IACAN,EAAuBC,MAAO,EAC9BD,EAAuBE,IAAK,GAE5BM,IAAgBlB,EAAYuB,MAAMC,SAClCd,EAAuBG,OAAQ,EAC/BH,EAAuBI,MAAO,IAVtCJ,EAAuBP,IAAO,EAkBlC,OAAOO,EAvjD8Be,CAAwB9B,IAGjDe,EAAuBP,KACvBR,EAAE+B,iBACFtC,EAAiB,IAAIuC,IAErBC,EAASzB,GAETf,EAAiB,KACjBC,EAAgB,SAU5BY,SAASP,iBAAiB,UAAYC,IAClCN,EAAgB,CAAEwC,EAAGlC,EAAEmC,QAASC,EAAGpC,EAAEqC,WAQzClD,OAAOY,iBAAiB,UAAYC,IAC5BA,EAAEsC,SAAWnD,SACbQ,EAAkBC,QAAUI,EAAEsC,OAC9B3C,EAAkBE,KAAOG,EAAEsC,OAAOC,2BAW9C,SAASN,EAASzB,GAId,MAAMgC,EAuqBV,WACI,IAAIA,EAAelC,SAASC,cAE5B,IAAKiC,GAAiBA,IAAiBlC,SAASmC,OAASnC,SAASoC,cAAc,UAAY,CAExF,GAAI/C,EAAkBC,SAAW4C,IAAiB7C,EAAkBC,QAAS,CACzE,MAAM+C,EAAexD,OAAOyD,iBAAiBjD,EAAkBC,QAAS,MAClEiD,EAAiB,CAAC,SAAU,YAElC,GACIlD,EAAkBC,QAAQkD,UAC1BD,EAAenB,SAASiB,EAAaI,iBAAiB,eAGtD,OADAP,EAAe7C,EAAkBC,QAC1B4C,EAGfA,EAAelC,SAAS0C,iBAIxBrD,EAAkBC,SAC2C,IAA5D2C,EAAsB5C,EAAkBC,SAASqD,QACa,IAA3DV,EAAsB5C,EAAkBC,SAASsD,QAEpDxD,GAAiBC,EAAkBqB,KAAOrB,EAAkBuB,OAAS,EACrEvB,EAAkBwD,IAAMxD,EAAkByD,QAI/C,IAAKC,EAAoBb,GAAe,CACpC,MAAMc,EAAWC,EAAmBf,GACpC,GAAIc,GAAaA,IAAanE,OAAqD,OAAOmE,EAE9F,OAAOd,EAzsBcgB,GACrBC,QAAQC,IAAIlB,GACZ,IAAInC,EAAcmC,EACdmB,EAAsB,KAGtBjE,IAEAiE,EAAsBrD,SAASsD,iBAAiBlE,EAAcwC,EAAGxC,EAAc0C,GAMnD,OAAxBuB,IACAA,EAAsBrD,SAASmC,MAE/BoB,EAAYF,KAAyBG,EAAYH,GACjDjE,EAAgB,KAEhBW,EADOyD,EAAYH,GACLA,EAEAA,EAAoBI,iCAKtC1D,IAAgBlB,QAAUkB,IAAgBC,UAAYD,IAAgBC,SAAS0C,kBAC/E3C,EAAcC,SAASmC,MAAQnC,SAAS0C,iBAO5C,IAAIgB,EAAY,KAChB,IAAKF,EAAYzD,IAAyC,SAAzBA,EAAYe,WAAmD,UAAzBf,EAAYe,SAAuB,CACzE,WAAzBf,EAAYe,WACZf,EAAcA,EAAY4D,gBAAgBjB,iBAG9CgB,EAAYA,IAAc7E,OAASmB,SAASmC,KAAOpC,EACnD,IAAI6D,EAAsB,KAG1B,GACI5D,SAASC,gBAAkBiC,GAC1BlC,SAASC,gBAAkBD,SAASmC,MAAQD,IAAiBlC,SAAS0C,iBAWnE,GANAkB,EAAsB7D,EAAY8D,wBAAwB3D,EAAK,CAC3DwD,UAAW3D,EACX+D,WAAYC,EAA+BhE,EAAa,CACpDiE,KAAM,UAGVC,EAAmBL,EAAqB1D,GAAM,YAStDwD,EAAYA,EAAUD,gCAM9BC,EAAY3D,EAAY0D,gCACxB,IAAIS,EAAkBR,EAAUS,cAAgBT,EAAUD,gCAAkC,KAGvFS,GAAmBrF,OAAOuF,WAAavF,OAAOe,OAAOwE,WACtDF,EAAkBrF,OAAOe,OAAOI,SAAS0C,iBAMzC2B,EAActE,EAAa2D,EAAWQ,EAAiBhE,EAAK,OAapE,SAAS+D,EAAmBK,EAAepE,GAGvC,GAAIoE,EAAe,CAKf,IAAKC,EAAoB,cAAeD,EAAe,KAAMpE,GAAM,OAAO,EAE1E,MAAMwD,EAAYY,EAAcb,gCAShC,OAPIC,IAAc7E,OACdyF,EAAcE,QAEdF,EAAcE,MAAM,CAAEC,eAAe,IAGzCrF,EAAgB,MACT,EAIX,OAAO,EAUX,SAASsF,EAAoBhB,EAAWxD,GAEpC,OAAIyE,EAAajB,EAAWxD,KAAS0E,EAAiBlB,EAAWxD,IAC7D2E,EAAWnB,EAAWxD,IACf,IAINwD,EAAUS,gBAAkBW,EAAqBpB,EAAWxD,KAC7D2E,EAAWnB,EAAUqB,cAAcrC,gBAAiBxC,IAC7C,GAgBf,SAAS6D,EAA+BL,EAAWsB,EAAS,CAAEhB,KAAM,YAChE,IAAIF,EAAa,GAEjB,GAAIJ,EAAUuB,kBAAoB,EAAG,CAC5BvB,EAAUS,gBACXT,EAAYA,EAAUwB,qBAAqB,QAAQ,IAAMlF,SAASmC,MAEtE,MAAMgD,EAAWzB,EAAUyB,SAC3B,IAAK,MAAMC,KAAQD,EACXE,EAAqBD,GACrBtB,EAAWwB,KAAKF,GACT7B,EAAY6B,IACnBtB,EAAWwB,KAAKF,IAEX5B,EAAY4B,IAASA,EAAKH,oBAC3BnB,EAAaA,EAAWyB,OAAOxB,EAA+BqB,EAAM,CAAEpB,KAAM,WAEzEoB,EAAKH,oBACZnB,EAAaA,EAAWyB,OAAOxB,EAA+BqB,EAAM,CAAEpB,KAAM,UAMxF,MAAuB,QAAhBgB,EAAOhB,KAAiBF,EAAaA,EAAW0B,OAAOC,GAalE,SAASC,EAAuCpG,EAASY,EAAK4D,EAAYJ,GACtE,MAAMiC,EAAgBrG,EAStB,OALAoE,EAAYA,GAAaiC,EAAclC,gCAKhCmC,EAAmBD,EAD1B7B,GAAcA,GAAcA,EAAWvC,QAAU,EAAIwC,EAA+BL,GAAaI,EAC5C5D,EAAKwD,GAY9D,SAASG,EAAwB3D,EAAK2F,GAClC,MAAMF,EAAgBG,KACtB,IAGIC,EAHAC,EAAqB,GACrBC,EAAqB,GACrBC,EA60CR,SAAiCP,GAC7B,MACM7B,EADY6B,EAAclC,gCACH0C,iBACvBC,EAAuB,GAQ7B,OANAtC,EAAWuC,QAAS/G,IACZqG,IAAkBrG,GAAWgH,EAAkBhH,EAASqG,IACxDS,EAAqBd,KAAKhG,KAI3B8G,EAx1C0BG,CAAwBZ,GAIpDE,IAAMA,EAAO,IAElB,MAAMW,EAAmBb,EAAclC,gCACvC,IAAIgD,EAAoB1C,EAA+ByC,GACvD,MAAM9C,EAAYmC,EAAKnC,WAAa8C,EAChCX,EAAKnC,WAAa8C,EAAiBE,SAASb,EAAKnC,aACjD+C,EAAoBA,EAAkBlB,OAAOxB,EAA+BL,KAEhF,MAAMI,EACF+B,EAAK/B,YAAc+B,EAAK/B,WAAWvC,OAAS,EACtCsE,EAAK/B,WAAW0B,OAAQmB,GAAcjD,EAAUgD,SAASC,IACzDF,EAAkBjB,OAAQmB,GAAcjD,EAAUgD,SAASC,IAAcjD,IAAciD,GAMjG,GAAI7C,GAAcA,EAAWvC,OAAS,EAAG,CAErCuC,EAAWuC,QAASM,IACZA,IAAchB,IACbA,EAAce,SAASC,IAAchB,IAAkBgB,EAC9CX,EACAC,GACRX,KAAKqB,KAKf,IAAIC,EAAkBV,EAA2BV,OAC5CmB,IAAeX,EAAmB5E,SAASuF,IAK5CE,EAHsB/C,EAAW0B,OAChCmB,GAAcnD,EAAYmD,IAAcL,EAAkBX,EAAegB,IAGzEG,IAAKC,GAAQA,EAAIZ,kBACjBa,OACAxB,OAAQmB,GAAcA,IAAchB,GAkCzC,GAhCAK,EAAqBA,EAChBT,OAAOqB,GACPpB,OAAQmB,GAAcjD,EAAUgD,SAASC,IAC9CV,EAAqBA,EAChBV,OAAOsB,GACPrB,OAAQmB,GAAcjD,EAAUgD,SAASC,IAG1CV,EAAmB1E,OAAS,IAC5B0E,EAAqBP,EACjBC,EACAzF,EACA+F,EACAvC,IAaJsC,GAAsBA,EAAmBzE,OAAS,GAAkC,UAA3BoE,EAAc7E,WACvEiF,EAuIZ,SAAqCkB,EAAYnD,EAAY5D,GACzD,OAA0BgH,EAAkBD,EAAYnD,EAAY5D,EAAhEd,EAAqE+H,EACdC,GAzItCC,CAA4B1B,EAAeK,EAAoB9F,IAGhF6F,EAAaA,GAAcuB,EAAoB3B,EAAeM,EAAoB/F,GAE9E6F,GAAcV,EAAqBU,GAAa,CAEhD,MAAMwB,EAAcxD,EAA+BgC,EAAY,CAC3D/B,KAAM,QAEJwD,EACFD,EAAYhG,OAAS,EACfoE,EAAc9B,wBAAwB3D,EAAK,CACzC4D,WAAYyD,EACZ7D,UAAWqC,IAEb,KACNyB,EACAzB,EAAayB,EACLjE,EAAYwC,KAGpBjC,EAAW2D,OAAO3D,EAAW4D,QAAQ3B,GAAa,GAClDA,EAAajC,EAAWvC,OAClBoE,EAAc9B,wBAAwB3D,EAAK,CACzC4D,WAAYA,EACZJ,UAAWA,IAEb,MAGd,OAAOqC,EAGX,OAAO,KAcX,SAASH,EAAmBqB,EAAYnD,EAAY5D,EAAKwD,GACrD,MAAMiE,EAAoBV,EAAWxD,gCACrC,IAAImE,EAGJ,YAAYzG,IAARjB,EAA0B4D,GAI1B8D,EADAD,EAAkBxD,eAAiBT,IAAciE,IAAsBlC,EAAUwB,GAC/DhF,EAAsB0F,GAEF1F,EAAsBgF,IAQ3DzD,EAAYyD,IAAuC,SAAxBA,EAAWnG,UAAkD,UAAxBmG,EAAWnG,SAYrEgD,EAAW0B,OAAQmB,IACtB,MAAMkB,EAAgB5F,EAAsB0E,GACtCmB,EAAuC,WAAvBnB,EAAU7F,SAAwB6F,EAAUhD,gBAAgBxB,KAAO,KACzF,OACIuB,EAAUgD,SAASC,IACnBA,IAAcM,GACda,IAAkBb,GAClBc,EAAUF,EAAeD,EAAiB1H,KACzC8H,EAASJ,EAAiBC,KAnB5B/D,EAAW0B,OAAQmB,IACtB,MAAMkB,EAAgB5F,EAAsB0E,GAC5C,OACIjD,EAAUgD,SAASC,KACjBM,EAAWP,SAASC,IAClBqB,EAASJ,EAAiBC,IAC1BlB,IAAcM,GACdc,EAAUF,EAAeD,EAAiB1H,OA2B9D,SAASoH,EAAoBL,EAAYnD,EAAY5D,GACjD,MAAMwD,EAAYuD,EAAWxD,gCACvBwE,EAA4B3F,iBAAiBoB,GAAWjB,iBAAiB,iCACzEyF,EAAwCjG,EAAsBgF,GACpE,IAAIkB,EACAC,EAEJ,OAAQH,GACJ,IAAK,OACDG,EAAoBtE,EAAW0B,OAAQuB,GACnCsB,EAAUH,EAAmBjG,EAAsB8E,GAAM7G,IAEzDkI,EAAkB7G,OAAS,IAC3BuC,EAAasE,GAEjBD,EAAmBG,EACnB,MACJ,QACIH,EAAmBI,EAG3B,OAAOrB,EAAkBD,EAAYnD,EAAY5D,EAAKiI,GA0B1D,SAASjB,EAAkBD,EAAYnD,EAAY5D,EAAKiI,GACpD,IAAIP,EAAkB,KAElB/I,OAAOuF,WAAavF,OAAOe,OAAOwE,UACT,SAAxB6C,EAAWnG,UAA+C,SAAxBmG,EAAWnG,SAQ9C8G,EAAsCX,EAAWhF,yBAJjD2F,EAAkB/I,OAAO2J,aAAavG,wBACtC2F,EAAgBhG,EAAI,EACpBgG,EAAgB9F,EAAI,GAKxB,IAAI2G,EAAcC,OAAOC,kBACrBC,EAAsB,GAE1B,GAAI9E,EACA,IAAK,IAAI+E,EAAI,EAAGA,EAAI/E,EAAWvC,OAAQsH,IAAK,CACxC,MAAMC,EAAWX,EAAiBP,EAAiB3F,EAAsB6B,EAAW+E,IAAK3I,GAGrF4I,EAAWL,GACXA,EAAcK,EACdF,EAAsB,CAAC9E,EAAW+E,KAC3BC,IAAaL,GACpBG,EAAoBtD,KAAKxB,EAAW+E,IAIhD,OAAmC,IAA/BD,EAAoBrH,OAAqB,KAEtCqH,EAAoBrH,OAAS,GAAK4G,IAAqBG,EACxDpB,EAAkBD,EAAY2B,EAAqB1I,EAAK6I,GACxDH,EAAoB,GAU9B,SAASnF,IACL,IAAIC,EAAYoC,KAEhB,EAAG,CACC,IAAKpC,EAAUS,cAAe,CAEtBT,EADA7E,OAAOuF,WAAavF,OAAOe,OAAOwE,SACtBvF,OAAOe,OAAOI,SAAS0C,gBAEvB7D,OAAOmB,SAAS0C,gBAEhC,MAEAgB,EAAYA,EAAUS,qBAIpBX,EAAYE,IACtB,OAAOA,EASX,SAAST,EAAmB3D,GACxB,IAAI0J,EAAkB1J,EAEtB,EAAG,CACC,IAAK0J,EAAgB7E,cAAe,CAE5B6E,EADAnK,OAAOuF,WAAavF,OAAOe,OAAOwE,SAChBvF,OAAOe,OAAOI,SAAS0C,gBAEvB7D,OAAOmB,SAAS0C,gBAEtC,MAEAsG,EAAkBA,EAAgB7E,qBAEhC8E,EAAkBD,KAAqBvD,EAAUuD,IAM3D,OAJIA,IAAoBhJ,UAAYgJ,IAAoBhJ,SAAS0C,kBAC7DsG,EAAkBnK,QAGfmK,EAWX,SAAS7C,EAAenB,EAAS,CAAEhB,KAAM,YACrC,MAAMN,EAAYoC,KAAK3B,cAAgB2B,KAAO9F,SAASmC,KACjD+G,EAAaC,MAAMC,UAAU5D,OAAO6D,KAAK3F,EAAUwB,qBAAqB,KAAM3B,GACpF,MAAuB,QAAhByB,EAAOhB,KAAiBkF,EAAaA,EAAW1D,OAAOC,GAWlE,SAASlB,EAAoB+E,EAAWC,EAAkBC,EAAgBC,GACtE,GAAI,CAAC,cAAe,YAAYrI,SAASkI,GAAY,CACjD,MAIMI,EAAiB,IAAIC,YAAY,MAAQL,EAAW,CACtDM,SAAS,EACTC,YAAY,EACZC,OAPS,CACTC,aAAcP,EACdtJ,IAAKuJ,KAOT,OAAOF,EAAiBS,cAAcN,IAW9C,SAASO,EAAW3K,EAAS4K,GACzB,OAAO5H,iBAAiBhD,GAASmD,iBAAkB,KAAIyH,KAAWC,OAiCtE,SAAS9F,EAActE,EAAa2D,EAAWQ,EAAiBhE,EAAK8E,GACjE,IAAIoF,EAAgB,CAChBtG,WAAYC,EAA+BL,EAAW,CAAEM,KAAMgB,IAC9DtB,aAIJ,KAAOQ,GAAiB,CACpB,GAAID,EAAmBlE,EAAY8D,wBAAwB3D,EAAKkK,GAAgBlK,GAC5E,OAEA,GAAe,YAAX8E,GAAwBN,EAAoBhB,EAAWxD,GAAM,OAC5D,CACD,IAAKqE,EAAoB,WAAYb,EAAW3D,EAAaG,GAAM,OAG/DwD,IAAc1D,UAAY0D,IAAc1D,SAAS0C,gBAC7C7D,OAAOuF,WAAavF,OAAOe,OAAOwE,WAGlCV,GADA3D,EAAclB,OAAO2J,cACGzD,cAAcrC,iBAG1CgB,EAAYQ,EAEhBkG,EAAgB,CACZtG,WAAYC,EAA+BL,EAAW,CAClDM,KAAMgB,IAEVtB,aAEJ,IAAI2G,EAAgB3G,EAAUD,gCAG1BS,EADAmG,IAAkB3G,EACA2G,EAEA,MAMlCD,EAAgB,CACZtG,WAAYC,EAA+BL,EAAW,CAAEM,KAAMgB,IAC9DtB,cAKCQ,GACDR,GACAO,EAAmBlE,EAAY8D,wBAAwB3D,EAAKkK,GAAgBlK,IAI3EqE,EAAoB,WAAY6F,EAAc1G,UAAW3D,EAAaG,GA2D/E,SAAS2E,EAAWvF,EAASY,EAAKoK,EAAS,GACvC,GAAIhL,EACA,OAAQY,GACJ,IAAK,OACDZ,EAAQiL,YAAc,GAAKD,EAC3B,MACJ,IAAK,QACDhL,EAAQiL,YAAc,GAAKD,EAC3B,MACJ,IAAK,KACDhL,EAAQkL,WAAa,GAAKF,EAC1B,MACJ,IAAK,OACDhL,EAAQkL,WAAa,GAAKF,GAY1C,SAAS9G,EAAYlE,GACjB,OACKA,EAAQ6E,eACY,WAArB7E,EAAQwB,UACRmI,EAAkB3J,IAvK1B,SAA6BA,GACzB,MAA6D,YAAtD2K,EAAW3K,EAAS,8BAuKvBmL,CAAoBnL,GAW5B,SAAS+F,EAAqB/F,GAC1B,MAA6D,cAAtD2K,EAAW3K,EAAS,8BAU/B,SAAS2J,EAAkB3J,GACvB,MAAM+C,EAAexD,OAAOyD,iBAAiBhD,EAAS,MAChDoL,EAAYrI,EAAaI,iBAAiB,cAC1CkI,EAAYtI,EAAaI,iBAAiB,cAEhD,SAAsB,YAAdiI,GAAyC,SAAdA,GAAwBE,EAAWtL,EAAS,SAChE,YAAdqL,GAAyC,SAAdA,GAAwBC,EAAWtL,EAAS,SAc5E,SAASqF,EAAarF,EAASY,GAE3B,GAAIZ,GAA8B,kBAAZA,EAAsB,CACxC,GAAIY,GAAsB,kBAARA,EAAkB,CAEhC,GAAI0K,EAAWtL,EAASY,GAAM,CAE1B,MAAMmC,EAAexD,OAAOyD,iBAAiBhD,EAAS,MAChDoL,EAAYrI,EAAaI,iBAAiB,cAC1CkI,EAAYtI,EAAaI,iBAAiB,cAEhD,OAAQvC,GACJ,IAAK,OAEL,IAAK,QACD,MAAqB,YAAdwK,GAAyC,SAAdA,GAAsC,WAAdA,EAC9D,IAAK,KAEL,IAAK,OACD,MAAqB,YAAdC,GAAyC,SAAdA,GAAsC,WAAdA,GAGtE,OAAO,EAGP,MACyB,SAArBrL,EAAQwB,UACa,SAArBxB,EAAQwB,UACPmI,EAAkB3J,IAAYsL,EAAWtL,IAa1D,SAASsL,EAAWtL,EAASY,GACzB,GAAIZ,GAA8B,kBAAZA,EAAsB,CACxC,IAAIY,GAAsB,kBAARA,EAcd,OAAOZ,EAAQuL,YAAcvL,EAAQwL,aAAexL,EAAQyL,aAAezL,EAAQ0L,aAZnF,OAAQ9K,GACJ,IAAK,OAEL,IAAK,QACD,OAAOZ,EAAQuL,YAAcvL,EAAQwL,YACzC,IAAK,KAEL,IAAK,OACD,OAAOxL,EAAQyL,aAAezL,EAAQ0L,aAMlD,OAAO,GAWf,SAASlG,EAAqBxF,EAASY,GACnC,IAAI+K,GAAS,EACb,OAAQ/K,GACJ,IAAK,OACD+K,EAAgC,IAAvB3L,EAAQiL,WACjB,MACJ,IAAK,QACDU,EAAS3L,EAAQuL,YAAcvL,EAAQiL,WAAajL,EAAQwL,cAAgB,EAC5E,MACJ,IAAK,KACDG,EAA+B,IAAtB3L,EAAQkL,UACjB,MACJ,IAAK,OACDS,EAAS3L,EAAQyL,aAAezL,EAAQkL,UAAYlL,EAAQ0L,eAAiB,EAGrF,OAAOC,EAUX,SAASrG,EAAiBtF,EAASY,GAC/B,GAAIyE,EAAarF,EAASY,GAAM,CAC5B,MAAMgL,EAAa5L,EAAQkL,UACrBW,EAAa7L,EAAQiL,WAErB5H,EAASrD,EAAQyL,aAAezL,EAAQ0L,aACxCpI,EAAQtD,EAAQuL,YAAcvL,EAAQwL,YAE5C,OAAQ5K,GACJ,IAAK,OACD,OAAsB,IAAfiL,EACX,IAAK,QACD,OAAOC,KAAKC,IAAIF,EAAavI,IAAU,EAC3C,IAAK,KACD,OAAsB,IAAfsI,EACX,IAAK,OACD,OAAOE,KAAKC,IAAIH,EAAavI,IAAW,GAGpD,OAAO,EAUX,SAASI,EAAoBzD,GACzB,MAAMgM,EAAchM,EAAQ2C,wBAC5B,IAAIsJ,EAAkBtI,EAAmB3D,GAErCkM,EAAe,KAOnB,OALIA,EADAD,IAAoB1M,OACLoD,EAAsBsJ,GAEtB,IAAIE,QAAQ,EAAG,EAAG5M,OAAO6M,WAAY7M,OAAO8M,gBAG3D3D,EAASwD,EAAcF,KAAwBtD,EAASwD,EAAcF,IAmB9E,SAAS/H,EAAYjE,GACjB,QACIA,EAAQsM,SAAW,GAkB3B,SAA2BtM,GACvB,MACwB,MAApBA,EAAQuM,SACyB,OAAjCvM,EAAQ+B,aAAa,SACgB,OAArC/B,EAAQ+B,aAAa,YArBrByK,CAAkBxM,IAkC1B,SAA4BA,GACxB,QAAI,CAAC,SAAU,QAAS,SAAU,WAAY,WAAY,SAAU,YAAY8B,SAAS9B,EAAQuM,UACtFvM,EAAQkD,SAnCfuJ,CAAmBzM,IA8C3B,SAA0BA,GACtB,OAAOA,EAAQ0M,QAAU1M,EAAQyF,cAAcrC,gBAAgBsJ,MA9C3DC,CAAiB3M,KA6DzB,SAAyBA,GACrB,QAAK4M,EAAuB5M,EAAQ6E,mBAE/B+H,EAAuB5M,IACE,MAA1BA,EAAQ6M,MAAMC,SAC8B,QAA5CvN,OAAOyD,iBAAiBhD,GAASqD,QACU,QAA3C9D,OAAOyD,iBAAiBhD,GAASsD,OAlEhCyJ,CAAgB/M,UAGXA,EAAQ6E,eAAkBQ,EAAarF,IAAYsL,EAAWtL,IAAaA,EAAQsM,UAAY,SAApG,GA2ET,SAASnG,EAAUnG,GACf,OAAQA,EAAQ6E,eAAkB+H,EAAuB5M,IA8C7D,SAAiBA,GACb,MAAMgM,EAAcrJ,EAAsB3C,GAC1C,GACyB,WAArBA,EAAQwB,WACPwK,EAAYzI,IAAM,GACfyI,EAAY5K,KAAO,GACnB4K,EAAYzI,IAAMvD,EAAQyF,cAAcrC,gBAAgBsI,cACxDM,EAAY5K,KAAOpB,EAAQyF,cAAcrC,gBAAgBoI,aAE7D,OAAO,EAEX,IAAIwB,EAAUC,SAASjN,EAAQkN,aAAe,GAC1CC,EAAUF,SAASjN,EAAQoN,cAAgB,GAE/CJ,EAAUK,MAAML,GAAW,EAAIA,EAC/BG,EAAUE,MAAMF,GAAW,EAAIA,EAE/B,MAAMG,EAAe,CAEjBC,OAAQ,EAAEvB,EAAY5K,KAAO4K,EAAY1K,OAAS,GAAI0K,EAAYzI,IAAMyI,EAAYxI,QAAU,GAC9FgK,QAAS,CAACxB,EAAY5K,KAAO4L,EAAShB,EAAYzI,IAAM4J,GACxDM,YAAa,CAACzB,EAAY1K,MAAQ0L,EAAShB,EAAYxI,OAAS2J,IAGpE,IAAK,MAAMO,KAASJ,EAAc,CAC9B,MAAMK,EAAgB3N,EAAQyF,cAAczB,oBAAoBsJ,EAAaI,IAC7E,GAAI1N,IAAY2N,GAAiB3N,EAAQoH,SAASuG,GAC9C,OAAO,EAGf,OAAO,EA5E8DC,CAAQ5N,GASjF,SAASgH,EAAkBhH,EAASoE,GAChC,MAAMnE,EAAO0C,EAAsB3C,GAE7B6N,EAAgBlL,EADDyB,GAAapE,EAAQmE,iCAW1C,QANIlE,EAAKmB,KAAOyM,EAAczM,MAC1BnB,EAAKqB,MAAQuM,EAAcvM,OAC3BrB,EAAKsD,IAAMsK,EAActK,KACzBtD,EAAKuD,OAASqK,EAAcrK,QAYpC,SAASoJ,EAAuB5M,GAC5B,MAAM+C,EAAexD,OAAOyD,iBAAiBhD,EAAS,MAChD8N,EAAiB/K,EAAaI,iBAAiB,cAIrD,MAAuB,SAHHJ,EAAaI,iBAAiB,aAC3B,CAAC,SAAU,YAEerB,SAASgM,GAiD9D,SAASpF,EAASmF,EAAeE,GAC7B,MAAMC,EAAiBH,EAAczM,KAAO2M,EAAUzM,OAASuM,EAAcvM,OAASyM,EAAUzM,MAC1F2M,EAAgBJ,EAAczM,MAAQ2M,EAAU3M,MAAQyM,EAAcvM,MAAQyM,EAAU3M,KACxF8M,EAAeL,EAActK,KAAOwK,EAAUxK,KAAOsK,EAAcrK,OAASuK,EAAUxK,IACtF4K,EAAkBN,EAActK,IAAMwK,EAAUvK,QAAUqK,EAAcrK,QAAUuK,EAAUvK,OAClG,OAAQwK,GAAkBC,KAAmBC,GAAgBC,GAYjE,SAAS1F,EAAU2F,EAAOC,EAAOzN,GAC7B,OAAQA,GACJ,IAAK,OACD,OAAO0N,EAAYD,EAAOD,GAC9B,IAAK,QACD,OAAOE,EAAYF,EAAOC,GAC9B,IAAK,KACD,OAAOE,EAAQF,EAAOD,GAC1B,IAAK,OACD,OAAOG,EAAQH,EAAOC,GAC1B,QACI,OAAO,GAKnB,SAASC,EAAYF,EAAOC,GACxB,OACID,EAAMhN,MAAQiN,EAAM/M,OACnB8M,EAAMhN,MAAQiN,EAAMjN,MACjBgN,EAAM9M,MAAQ+M,EAAM/M,OACpB8M,EAAM5K,OAAS6K,EAAM9K,KACrB6K,EAAM7K,IAAM8K,EAAM7K,OAK9B,SAAS+K,EAAQH,EAAOC,GACpB,OACID,EAAM7K,KAAO8K,EAAM7K,QAClB4K,EAAM7K,KAAO8K,EAAM9K,KAChB6K,EAAM5K,OAAS6K,EAAM7K,QACrB4K,EAAMhN,KAAOiN,EAAM/M,OACnB8M,EAAM9M,MAAQ+M,EAAMjN,KAKhC,SAAS2H,EAAUqF,EAAOC,EAAOzN,GAC7B,OAAQA,GACJ,IAAK,OAEL,IAAK,QACD,OAAOwN,EAAM5K,OAAS6K,EAAM9K,KAAO6K,EAAM7K,IAAM8K,EAAM7K,OACzD,IAAK,KAEL,IAAK,OACD,OAAO4K,EAAM9M,MAAQ+M,EAAMjN,MAAQgN,EAAMhN,KAAOiN,EAAM/M,MAC1D,QACI,OAAO,GAanB,SAASuG,EAAqB6F,EAAO1N,EAASY,GAG1C,MAAM4N,EAASC,EAAsB7N,EAF7Bd,EAEyCE,GAI3C0O,EAAK5C,KAAKC,IAAIyC,EAAOG,WAAWrM,EAAIkM,EAAOI,UAAUtM,GACrDuM,EAAK/C,KAAKC,IAAIyC,EAAOG,WAAWnM,EAAIgM,EAAOI,UAAUpM,GAG3D,OAAOsJ,KAAKgD,KAAKhD,KAAKiD,IAAIL,EAAI,GAAK5C,KAAKiD,IAAIF,EAAI,IAYpD,SAAS/G,EAAiBsG,EAAOC,EAAOzN,GACpC,MAMMoO,EAN2B,CAC7B5N,KAAM,QACNE,MAAO,OACPD,GAAI,SACJE,KAAM,OAEgCX,GAE1C,OAAOkL,KAAKC,IAAIqC,EAAMY,GAAYX,EAAMW,IAY5C,SAAS/F,EAAYrG,EAAc2F,EAAe3H,GAI9C,IAAIqO,EAAiB,EACjBC,EAAY,EAChB,MAGMV,EAASC,EAAsB7N,EAAKgC,EAAc2F,GAIlDmG,EAAK5C,KAAKC,IAAIyC,EAAOG,WAAWrM,EAAIkM,EAAOI,UAAUtM,GACrDuM,EAAK/C,KAAKC,IAAIyC,EAAOG,WAAWnM,EAAIgM,EAAOI,UAAUpM,GAGrD2M,EAAIrD,KAAKgD,KAAKhD,KAAKiD,IAAIL,EAAI,GAAK5C,KAAKiD,IAAIF,EAAI,IACnD,IAAIO,EAAGC,EAMP,MAAMC,EAqNV,SAA6BlB,EAAOC,GAChC,MAAMkB,EAAoB,CAAEjM,MAAO,EAAGD,OAAQ,EAAGmM,KAAM,GAEjDC,EAAe,CAAC3D,KAAK4D,IAAItB,EAAMhN,KAAMiN,EAAMjN,MAAO0K,KAAK4D,IAAItB,EAAM7K,IAAK8K,EAAM9K,MAC5EoM,EAAgB,CAAC7D,KAAK8D,IAAIxB,EAAM9M,MAAO+M,EAAM/M,OAAQwK,KAAK8D,IAAIxB,EAAM5K,OAAQ6K,EAAM7K,SAExF+L,EAAkBjM,MAAQwI,KAAKC,IAAI0D,EAAa,GAAKE,EAAc,IACnEJ,EAAkBlM,OAASyI,KAAKC,IAAI0D,EAAa,GAAKE,EAAc,IAE9DF,EAAa,IAAME,EAAc,IAAMF,EAAa,IAAME,EAAc,KAE1EJ,EAAkBC,KAAO1D,KAAKgD,KAAKS,EAAkBjM,MAAQiM,EAAkBlM,SAGnF,OAAOkM,EAnOkBM,CAAoBjN,EAAc2F,GACrDuH,EAAIR,EAAiBE,KAE3B,OAAQ5O,GACJ,IAAK,OAEL,IAAK,QAGGmI,EAAUnG,EAAc2F,EAAe3H,GACvCsO,EAAYpD,KAAK8D,IAAIN,EAAiBjM,OAAST,EAAaS,OAAQ,GACnE4L,EAAiBrM,EAAaS,OAAS,EAE5C+L,EApC8B,IAoCzBP,EAAKI,GACVI,EAhCY,EAgCMH,EAClB,MAEJ,IAAK,KAEL,IAAK,OAGGnG,EAAUnG,EAAc2F,EAAe3H,GACvCsO,EAAYpD,KAAK8D,IAAIN,EAAiBhM,MAAQV,EAAaU,MAAO,GACjE2L,EAAiBrM,EAAaU,MAAQ,EAE3C8L,EAhD2B,GAgDtBV,EAAKO,GACVI,EA7CY,EA6CMH,EAClB,MAEJ,QACIE,EAAI,EACJC,EAAI,EAIZ,OAAOF,EAAIC,EAAIC,EAAIS,EAWvB,SAASrG,EAAqB2E,EAAOC,EAAOzN,GAExC,MAAM4N,EAASC,EAAsB7N,EAAKwN,EAAOC,GAI3CK,EAAK5C,KAAKC,IAAIyC,EAAOG,WAAWrM,EAAIkM,EAAOI,UAAUtM,GACrDuM,EAAK/C,KAAKC,IAAIyC,EAAOG,WAAWnM,EAAIgM,EAAOI,UAAUpM,GAG3D,OAAOsJ,KAAKgD,KAAKhD,KAAKiD,IAAIL,EAAI,GAAK5C,KAAKiD,IAAIF,EAAI,IAWpD,SAAS7F,EAAoBoF,EAAOC,EAAOzN,GAEvC,MAAM4N,EAASC,EAAsB7N,EAAKwN,EAAOC,GAGjD,MAAe,SAARzN,GAA0B,UAARA,EACnBkL,KAAKC,IAAIyC,EAAOG,WAAWrM,EAAIkM,EAAOI,UAAUtM,GAChDwJ,KAAKC,IAAIyC,EAAOG,WAAWnM,EAAIgM,EAAOI,UAAUpM,GAW1D,SAASiM,EAAsB7N,EAAM,OAAQgC,EAAc2F,GAOvD,MAAMiG,EAAS,CAAEG,WAAY,CAAErM,EAAG,EAAGE,EAAG,GAAKoM,UAAW,CAAEtM,EAAG,EAAGE,EAAG,IAEnE,GAAI1C,EAAe,CAGf,OAFA0O,EAAOI,UAAYhM,EAEXhC,GACJ,IAAK,OACD4N,EAAOG,WAAWrM,EAAIiG,EAAcjH,MACpC,MACJ,IAAK,KACDkN,EAAOG,WAAWnM,EAAI+F,EAAc/E,OACpC,MACJ,IAAK,QACDgL,EAAOG,WAAWrM,EAAIiG,EAAcnH,KACpC,MACJ,IAAK,OACDoN,EAAOG,WAAWnM,EAAI+F,EAAchF,IAK5C,OAAQ3C,GACJ,IAAK,OACL,IAAK,QACGd,EAAc0C,GAAK+F,EAAchF,IACjCiL,EAAOG,WAAWnM,EAAI+F,EAAchF,IAC7BzD,EAAc0C,EAAI+F,EAAc/E,OACvCgL,EAAOG,WAAWnM,EAAI1C,EAAc0C,EAEpCgM,EAAOG,WAAWnM,EAAI+F,EAAc/E,OAExC,MAEJ,IAAK,KACL,IAAK,OACG1D,EAAcwC,GAAKiG,EAAcnH,KACjCoN,EAAOG,WAAWrM,EAAIiG,EAAcnH,KAC7BtB,EAAcwC,EAAIiG,EAAcjH,MACvCkN,EAAOG,WAAWrM,EAAIxC,EAAcwC,EAEpCkM,EAAOG,WAAWrM,EAAIiG,EAAcjH,WAI7C,CAEH,OAAQV,GACJ,IAAK,OACD4N,EAAOI,UAAUtM,EAAIM,EAAaxB,KAClCoN,EAAOG,WAAWrM,EACdiG,EAAcjH,MAAQsB,EAAaxB,KAAOmH,EAAcjH,MAAQsB,EAAaxB,KACjF,MACJ,IAAK,KACDoN,EAAOI,UAAUpM,EAAII,EAAaW,IAClCiL,EAAOG,WAAWnM,EACd+F,EAAc/E,OAASZ,EAAaW,IAAMgF,EAAc/E,OAASZ,EAAaW,IAClF,MACJ,IAAK,QACDiL,EAAOI,UAAUtM,EAAIM,EAAatB,MAClCkN,EAAOG,WAAWrM,EACdiG,EAAcnH,KAAOwB,EAAatB,MAAQiH,EAAcnH,KAAOwB,EAAatB,MAChF,MACJ,IAAK,OACDkN,EAAOI,UAAUpM,EAAII,EAAaY,OAClCgL,EAAOG,WAAWnM,EACd+F,EAAchF,IAAMX,EAAaY,OAAS+E,EAAchF,IAAMX,EAAaY,OAKvF,OAAQ5C,GACJ,IAAK,OACL,IAAK,QACG2N,EAAQ3L,EAAc2F,IACtBiG,EAAOI,UAAUpM,EAAII,EAAaW,IAClCiL,EAAOG,WAAWnM,EACd+F,EAAc/E,OAASZ,EAAaW,IAAMgF,EAAc/E,OAASZ,EAAaW,KAC3EgL,EAAQhG,EAAe3F,IAC9B4L,EAAOI,UAAUpM,EAAII,EAAaY,OAClCgL,EAAOG,WAAWnM,EACd+F,EAAchF,IAAMX,EAAaY,OAAS+E,EAAchF,IAAMX,EAAaY,SAE/EgL,EAAOI,UAAUpM,EAAIsJ,KAAK4D,IAAI9M,EAAaW,IAAKgF,EAAchF,KAC9DiL,EAAOG,WAAWnM,EAAIgM,EAAOI,UAAUpM,GAE3C,MAEJ,IAAK,KACL,IAAK,OACG8L,EAAY1L,EAAc2F,IAC1BiG,EAAOI,UAAUtM,EAAIM,EAAaxB,KAClCoN,EAAOG,WAAWrM,EACdiG,EAAcjH,MAAQsB,EAAaxB,KAAOmH,EAAcjH,MAAQsB,EAAaxB,MAC1EkN,EAAY/F,EAAe3F,IAClC4L,EAAOI,UAAUtM,EAAIM,EAAatB,MAClCkN,EAAOG,WAAWrM,EACdiG,EAAcnH,KAAOwB,EAAatB,MAAQiH,EAAcnH,KAAOwB,EAAatB,QAEhFkN,EAAOI,UAAUtM,EAAIwJ,KAAK4D,IAAI9M,EAAaxB,KAAMmH,EAAcnH,MAC/DoN,EAAOG,WAAWrM,EAAIkM,EAAOI,UAAUtM,IAMvD,OAAOkM,EAqFX,SAAS7L,EAAsB3C,GAE3B,IAAIC,EAAOJ,GAAkBA,EAAekQ,IAAI/P,GAChD,IAAKC,EAAM,CACP,MAAM+P,EAAqBhQ,EAAQ2C,wBACnC1C,EAAO,CACHsD,IAAK6F,OAAO4G,EAAmBzM,IAAI0M,QAAQ,IAC3C3O,MAAO8H,OAAO4G,EAAmB1O,MAAM2O,QAAQ,IAC/CzM,OAAQ4F,OAAO4G,EAAmBxM,OAAOyM,QAAQ,IACjD7O,KAAMgI,OAAO4G,EAAmB5O,KAAK6O,QAAQ,IAC7C3M,MAAO8F,OAAO4G,EAAmB1M,MAAM2M,QAAQ,IAC/C5M,OAAQ+F,OAAO4G,EAAmB3M,OAAO4M,QAAQ,KAErDpQ,GAAkBA,EAAeqQ,IAAIlQ,EAASC,GAElD,OAAOA,EAoLX,SAASkQ,EAAuBzK,GAC5B,MAAMrF,EAAiBd,OAAOgB,uBAAyBhB,OAAOgB,sBAAsBC,QACpFjB,OAAOgB,uBACQ,IAAXmF,EAAmB0K,IAAmBC,OAAOC,OAAOF,IA7J5D,WACI,SAASG,EAAUnM,EAAWxD,GAC1B,OACKyE,EAAajB,EAAWxD,KAAS0E,EAAiBlB,EAAWxD,KAC5DwD,EAAUS,gBAAkBW,EAAqBpB,EAAWxD,GAItE,SAAS4P,EAAWC,EAAezQ,EAASY,EAAK8E,GAC7C,IAAIjF,EAAcT,EACd0Q,EAAiB,KAWrB,GARIjQ,IAAgBC,UAAYD,IAAgBC,SAAS0C,kBACrD3C,EAAcC,SAASmC,MAAQnC,SAAS0C,kBAOvCc,EAAYzD,IAAyC,SAAzBA,EAAYe,WAAmD,UAAzBf,EAAYe,SAAuB,CACzE,WAAzBf,EAAYe,WAAuBf,EAAcA,EAAY4D,gBAAgBxB,MAEjF,MAAM2B,EAAaC,EAA+BhE,EAAaiF,GAG/D,GAAImE,MAAM8G,QAAQnM,IAAeA,EAAWvC,OAAS,EACjD,OAAOwO,EACDrK,EAAuC3F,EAAaG,EAAK4D,GACzD/D,EAAY8D,wBAAwB3D,EAAK,CAAE4D,eAErD,GAAI+L,EAAU9P,EAAaG,GACvB,OAAO6P,EAAgB,GAAKhQ,EAMpC,IAAI2D,EAAY3D,EAAY0D,gCACxBS,EAAkBR,EAAUS,cAAgBT,EAAUD,gCAAkC,KAQ5F,IALKS,GAAmBrF,OAAOuF,WAAavF,OAAOe,OAAOwE,WACtDF,EAAkBrF,OAAOe,OAAOI,SAAS0C,iBAItCwB,GAAiB,CACpB,MAAMJ,EAAa8B,EACf7F,EACAgE,EAA+BL,EAAWsB,GAC1C9E,EACAwD,GAGJ,GAAIyF,MAAM8G,QAAQnM,IAAeA,EAAWvC,OAAS,GAKjD,GAJAyO,EAAiBjQ,EAAY8D,wBAAwB3D,EAAK,CACtD4D,aACAJ,cAEAsM,EACA,OAAOD,EAAgBjM,EAAakM,MAOvC,IAAIH,EAAUnM,EAAWxD,GAC1B,OAAO6P,EAAgB,GAAKhQ,EACzB,GAAI2D,IAAc1D,UAAY0D,IAAc1D,SAAS0C,iBAIxD,GAHAgB,EAAY7E,OAAOmB,SAAS0C,gBAGxB7D,OAAOuF,WAAavF,OAAOe,OAAOwE,SAAU,CAK5C,GAFArE,EAAclB,OAAO2J,aACrB9E,EAAY7E,OAAOe,OAAOI,SAAS0C,iBAC/BgB,EAAUS,cACT,CACDD,EAAkB,KAClB,MAHyBA,EAAkBR,EAAUD,qCAM1D,CAOH,GALIF,EAAYG,KACZ3D,EAAc2D,GAGlBA,EAAYQ,GACRR,EAAUS,cACT,CACDD,EAAkB,KAClB,MAHyBA,EAAkBR,EAAUD,kCAQjE,IAAKS,GAAmBR,EAAW,CAE/B,MAAMI,EAAa8B,EACf7F,EACAgE,EAA+BL,EAAWsB,GAC1C9E,EACAwD,GAIJ,GAAIyF,MAAM8G,QAAQnM,IAAeA,EAAWvC,OAAS,IACjDyO,EAAiBjQ,EAAY8D,wBAAwB3D,EAAK,CACtD4D,aACAJ,cAEAsM,GACA,OAAOD,EAAgBjM,EAAakM,EAKhD,GAAIH,EAAUnM,EAAWxD,GAErB,OADA8P,EAAiBjQ,EACViQ,EAIf,MAAO,CACHxM,cACAyF,oBACAlG,sBACAmN,eAAgBJ,EAAWK,KAAK,MAAM,GACtCC,eAAgBN,EAAWK,KAAK,MAAM,GACtCE,sBAAuB,CAAC/Q,EAASgR,EAAkBpQ,KAC1CsD,EAAYlE,IAAiC,SAArBA,EAAQwB,WAA+C,UAArBxB,EAAQwB,UAC/DiD,EAA+BzE,GAAS8B,SAASkP,GAC1ClJ,EACHnF,EAAsB3C,GACtB2C,EAAsBqO,GACtBpQ,GAILqI,EAAYtG,EAAsB3C,GAAU2C,EAAsBqO,GAAmBpQ,IAa1BqQ,IAC1E1R,OAAOgB,sBAAsBC,QAAUH,EACvCgQ,OAAOa,KAAK3R,OAAOgB,uBAOvB,SAAS6P,IACL,MAAO,CACHD,yBACA,cACI,OAAO3J,KAAK2K,SAAW3K,KAAK2K,SAAW,SAE3C,YAAYzM,GACR8B,KAAK2K,SAAW,CAAC,aAAc,QAAS,QAAQrP,SAAS4C,GAAQA,EAAO,SAE5E0M,iBAAkB,SAAU9O,EAAGE,GAC3B1C,EAAgBwC,GAAKE,EAAI,CAAEF,IAAGE,KAAM,OAl4DhDjD,OAAO8R,kBAAoB,KAChB,CACHxR,iBACAC,gBACAC,oBACAuR,iBAPe,OAmBnB/R,OAAO8C,SAAWA,EAClB9C,OAAOgS,QAAQzH,UAAUvF,wBAA0BA,EACnDhF,OAAOgS,QAAQzH,UAAUjD,eAAiBA,EAC1CtH,OAAOgS,QAAQzH,UAAU3F,8BAAgCA,EAMrD5E,OAAOiS,KAAOA,IAAIC,mBAGd,KADAlS,OAAOyD,iBAAiBtC,SAAS0C,iBAAiBD,iBAAiB,iCAGnEqO,IAAIC,iBAAiB,CACjBC,KAAM,+BACNC,OAAQ,iBACRC,UAAU,EACVC,aAAc,SAKoF,KAAtGtS,OAAOyD,iBAAiBtC,SAAS0C,iBAAiBD,iBAAiB,gCAEnEqO,IAAIC,iBAAiB,CACjBC,KAAM,8BACNC,OAAQ,wBACRC,UAAU,EACVC,aAAc,SAMlB,KADAtS,OAAOyD,iBAAiBtC,SAAS0C,iBAAiBD,iBAAiB,kCAGnEqO,IAAIC,iBAAiB,CACjBC,KAAM,gCACNC,OAAQ,gBACRC,UAAU,EACVC,aAAc,YA80D9B1B,GAAuB,GAEvB5Q,OAAOY,iBAAiB,OAAQ,KAC5BD,MAx5DR,GA85DAQ,SAASP,iBAAiB,iBAAmBC,IACzC,GAAIA,EAAEsC,kBAAkBoP,YAAa,CACjC1R,EAAE+B,iBAEF,IAAI,OAAEO,GAAWtC,EAiBjB2R,sBAAsBC,UAClBtP,EAAOuP,eAAe,CAAEC,SAAU,SAAUC,MAAO,SAAUC,OAAQ,kBAK/D,IAAIC,QAASC,IACc,IAAIC,qBAC7B,EAAEC,MACMA,EAAMC,gBACNH,KAGR,CACII,UAAW,IAGEC,QAAQjQ,KAGjCA,EAAOwC,aAKnBxE,SAASP,iBAAiB,QAAUyS,IACV,KAAlBA,EAAM/R,UACN+R,EAAMzQ,kBACFzB,SAASC,eAAmBD,SAASC,yBAAyBkS,mBAC9DnS,SAASC,cAAcmS,Y,guBC79D5B,IAAKC,G,SAAAA,K,mBAAAA,E,aAAAA,E,iBAAAA,E,iCAAAA,E,eAAAA,E,mBAAAA,E,8BAAAA,M,kBCUL,MAAMC,EAAe,CACxBC,KAAM,CACFC,SAAU,GACVC,MAAO,GACPC,WAAY,EAEZC,WAAY,EACZC,QAAS,IAEbC,SAAU,CACNL,SAAU,IAGdM,YAAS3R,EACT4R,KAAM,CAEFC,cAAe,GAEfC,UAAW,GACXC,QAAS,CAELC,eAAgB,GAChBC,UAAW,EACXC,SAAU,EACVC,KAAM,GACNC,WAAW,EAEXC,UAAW,EACXC,SAAU,EACVC,MAAO,EACPC,MAAO,EACPC,SAAU,EACVC,UAAW,EACXC,OAAQ,KAGhBC,YAAa,CACTC,eAAgB,GAChBvB,MAAO,GACPD,SAAU,K,YC5CX,MCDDyB,EAAiB1B,GACnB5C,OAAOuE,OAAO3B,EAAKC,UAAU2B,OAAO,CAACC,EAAKC,IACtCD,GAAOC,EAAKC,MAGb,GAIDC,EAAgB,CAAChC,EAAwBM,IAC3CN,EAAKE,MAAM0B,OAAO,CAACC,EAAKI,KACpB,MAAMC,EAAc5B,EAASL,SAASgC,GAKtC,OAFAJ,GAFiB7B,EAAKC,SAASgC,GAEfF,MAAQ5L,OAAO+L,EAAYC,QAG5C,GAEMnC,EAAgB,CAACoC,EAAOC,KACjC,MAAM,KAAErC,EAAF,SAAQM,GAAa8B,EAE3B,OAAQC,EAAOC,MACX,IAAK,WAAY,CACb,MAAQP,MAAOQ,EAAaT,KAAMG,GAAWI,EAAOG,QAC9CT,EAAQ5L,OAAOoM,GACfL,EAAc5B,EAASL,SAASgC,GAChCQ,EAAWtM,OAAO+L,EAAYQ,eAEpC,IAAKR,EACD,OAGJ,MAAMS,EAAW3C,EAAKC,SAASgC,GAE3BU,EACAA,EAASZ,MAAQlJ,KAAK8D,IAAI8F,EAAUE,EAASZ,MAAQA,GAC9CA,GAASU,IAChBzC,EAAKC,SAASgC,GAAU,CACpBA,SACAF,SAGJ/B,EAAKE,MAAMnN,KAAKkP,IAGpBjC,EAAKG,WAAauB,EAAc1B,GAChCA,EAAKI,WAAa4B,EAAchC,EAAMM,GAEtC,MAGJ,IAAK,cAAe,CAChB,MAAQwB,KAAMG,EAAQF,MAAOQ,EAAvB,oBAAoCK,GAAwBP,EAAOG,QACnET,EAAQ5L,OAAOoM,GAEfI,EAAW3C,EAAKC,SAASgC,GACzBC,EAAc5B,EAASL,SAASgC,GAEtC,IAAKU,IAAaT,EACd,OAGJS,EAASZ,MAAQlJ,KAAK4D,IAAI,EAAGkG,EAASZ,MAAQA,GAE9C/B,EAAKG,WAAauB,EAAc1B,GAChCA,EAAKI,WAAa4B,EAAchC,EAAMM,IAEjCqC,EAASZ,OAASa,WACZ5C,EAAKC,SAASgC,GACrBjC,EAAKE,MAAQF,EAAKE,MAAMjN,OAAQ4P,GAAeA,IAAeZ,IAGlE,MAGJ,IAAK,aACDG,EAAMpC,KAAOD,EAAaC,KAE1B,MAGJ,IAAK,gBACGqC,EAAOG,QAAQM,QACfV,EAAMpC,KAAOD,EAAaC,MAG9B,MAGJ,IAAK,gBACDoC,EAAMpC,KAAKK,QAAUgC,EAAOG,QAAQO,WC7FnCzC,EAAoB,CAAC0C,EAAOX,KACrC,OAAQA,EAAOC,MACX,IAAK,aACDU,EAAM1C,SAASL,SAAWoC,EAAOG,QAAQS,QCHxCzC,EAAgB,CAACwC,EAAOX,KACjC,OAAQA,EAAOC,MACX,IAAK,cACDU,EAAMxC,KAAO,IAAKwC,EAAMxC,QAAS6B,EAAOG,SAExC,MAGJ,IAAK,gBACDQ,EAAMxC,KAAO6B,EAAOG,QAAQ7B,UCLlCuC,EAAe,EAAGlD,OAAMM,YAAsB2B,KAChD,MAAMU,EAAW3C,EAAKC,SAASgC,GACzBC,EAAc5B,EAASL,SAASgC,GAChCkB,EAAehN,OAAO+L,EAAYQ,eAExC,OAAqB,IAAjBS,EACO,CAAEb,KAAM,YAGfK,GAAYA,EAASZ,QAAUoB,EACxB,CAAEb,KAAM,iBADnB,GAOEc,EAAiB,EAAGpD,OAAMwB,eAAyBS,KACrD,MAAMU,EAAW3C,EAAKC,SAASgC,GAE/B,OAAOU,EAAWA,EAASZ,MAAQ,GAGjCsB,EAA0B,EAAGrD,OAAMM,YAAsB2B,KAC3D,MAAMC,EAAc5B,EAASL,SAASgC,GAChCU,EAAW3C,EAAKC,SAASgC,GACzBkB,EAAehN,OAAO+L,EAAYQ,eAExC,OAAOC,GAAYA,EAASZ,QAAUoB,GAuBpCG,EAA0BN,IAC5B,MAAM,SAAE1C,GAAa0C,EAErB,OAAO5F,OAAOmG,KAAKjD,EAASL,UAAU2B,OAAO,CAACC,EAAKI,EAAQuB,KACvD3B,EAAII,GAxBQ,EAACe,EAAiBf,EAAgBuB,KAClD,MAAM,SAAElD,EAAF,KAAYN,EAAZ,YAAkBwB,GAAgBwB,EAClCd,EAAc5B,EAASL,SAASgC,GAChCU,EAAW3C,EAAKC,SAASgC,GAE/B,MAAO,CACHwB,mBAAoBjC,EAAYC,iBAAmBQ,EACnDyB,SAAUxB,EAAYyB,YAAY,GAClClF,KAAMyD,EAAYzD,KAClBmF,KAAM3B,EACNE,OA1CcA,EA0CMD,EAAYC,MA1CAtJ,KAAKgL,KAAK1N,OAAOgM,GAAS,MA2C1DqB,MAAOA,EAAQ,EACfL,aAAchN,OAAO+L,EAAYQ,eACjCX,MAAOY,GAAYA,EAASZ,MAC5B+B,MAAOZ,EAAaF,EAAOf,GAC3B8B,eAAgBV,EAAwBL,EAAOf,GAC/ChS,SAAwC,MAA9BiS,EAAYQ,eAhDRP,OAwDA6B,CAAYhB,EAAOf,EAAQuB,GAElC3B,GACR,KAGML,EAAuB,CAACwB,EAAOX,KACxC,MAAM,SAAE/B,EAAF,YAAYkB,GAAgBwB,EAElC,OAAQX,EAAOC,MACX,IAAK,aAAc,CACfd,EAAYtB,MAAQ9C,OAAOmG,KAAKjD,EAASL,UAEzC,MAAOgE,GAAezC,EAAYtB,MAClCsB,EAAYC,eAAiBwC,EAE7BzC,EAAYvB,SAAWqD,EAAuBN,GAE9C,MAGJ,IAAK,WAAY,CACb,MAAQlB,KAAMG,GAAWI,EAAOG,QAC1B0B,EAAc1C,EAAYvB,SAASgC,GAEzCiC,EAAYnC,MAAQqB,EAAeJ,EAAOf,GAC1CiC,EAAYH,eAAiBV,EAAwBL,EAAOf,GAC5DiC,EAAYJ,MAAQZ,EAAaF,EAAOf,GAExC,MAGJ,IAAK,cAAe,CAChB,MAAQH,KAAMG,GAAWI,EAAOG,QAC1B0B,EAAc1C,EAAYvB,SAASgC,GAEzCiC,EAAYnC,MAAQqB,EAAeJ,EAAOf,GAC1CiC,EAAYH,eAAiBV,EAAwBL,EAAOf,GAC5DiC,EAAYJ,MAAQZ,EAAaF,EAAOf,GAExC,MAGJ,IAAK,aACDT,EAAYvB,SAAWqD,EAAuBN,GAE9C,MAGJ,IAAK,sBACDA,EAAMxB,YAAYC,eAAiBY,EAAOG,UC9G/C,SAAS2B,EAAkC7B,EAASE,GACvD,MAAO,CACHF,OACAE,WAID,SAAS4B,EAAoC9B,GAChD,MAAO,CACHA,QCID,MAEM+B,EAAW7B,GAAmC2B,EAAa,WAAY3B,GAKvE8B,EAAc9B,GAA8C2B,EAAa,cAAe3B,GCZxF+B,EAAoB,IAAMH,EAAkB,wBCsB5CI,EAAUC,cAEjBC,EAA4B,CAACC,YAAiBH,GAjBmBpC,GAAWwC,GAAUvC,IACxF,OAAQA,EAAOC,MACX,IAAK,gBACL,IAAK,uBACL,IAAK,gBACL,IAAK,aACDhW,OAAOuY,gBAAgBC,SAAS,CAAEC,UAAW1C,EAAOC,OAM5D,OAAOsC,EAAKvC,KAeT,MAAMD,EAAQ4C,YC/BUR,KAC3B,MAAMjE,ETPgBiE,KACtB,MAAMS,EAAeC,YAA6BV,GAElD,MAAO,CAACxB,EAAOX,KAUXW,EAAMzC,OAAS0E,EAAajC,EAAMzC,OAAQ8B,KSN/B8C,CAAUX,GAEzB,MAAO,CAACxB,EAAQjD,EAAcsC,IAC1B+C,YAAQpC,EAAQqC,IACZ,CAEI/E,EACAE,EAGAD,EACAP,EAGAwB,GACF1N,QAASwR,GAAqBA,EAAQD,EAAOhD,ODgBvDkD,CAAef,GACfgB,YAAQC,eAAmBf,MAEvBgB,SAAF,GAAetD,EAERuD,EAAuB,EAAGC,qBACnC,OAAQA,EAAeC,SACnB,IAAK,aACDH,EFtCmDvB,EAAa,aEsCrCyB,IAC3B,MACJ,IAAK,WACDF,EAASI,EAAgBF,IACzB,MACJ,IAAK,aACDF,EFnCmDtB,EAAkB,eEoCrE,MACJ,IAAK,cACDsB,EAASI,EAAmB,IAAKF,EAAgBhD,qBAAqB,KACtE,MACJ,IAAK,gBACD8C,EFvCgBlD,IAAuC2B,EAAa,gBAAiB3B,GEuC5EsD,CAAoBF,IAIzBF,EAAS3S,YAAK+M,EAAOiG,UAEzB,MACJ,IAAK,gBACDL,EAAS3S,YAAK+M,EAAOkG,UACrB,MAEJ,IAAK,mBACDN,EAAS3S,YAAK+M,EAAOmG,OACrB,MAEJ,IAAK,gBACDP,EFnDiBlD,IAAwC2B,EAAa,gBAAiB3B,GEmD9EsD,CAAqBF,IAC9BF,EAAS3S,YAAK+M,EAAOoG,SACrB,MAEJ,IAAK,aACDR,EF1DiDtB,EAAkB,eE2DnEsB,EAASI,KACT,MAEJ,IAAK,6BACDJ,EF1DRtB,EAAkB,+BE2DV+B,WAAW,IAAMT,EAASI,KAA8B,OExF7D,SAASM,IACZ,MAAMC,EAAMC,IAAMC,OAAU,MAQ5B,OANAD,IAAME,gBAAgB,KACdH,EAAII,mBAAmB5H,aACvBwH,EAAII,QAAQxU,SAEjB,IAEIoU,EFoHX/Z,OAAOuY,gBAAkBvY,OAAOuY,iBAAmB,GAYnDvY,OAAOuY,gBAAgB6B,QAAU,WACzBC,GAKRra,OAAOuY,gBAAgB+B,OAAS,SAAgBf,GAU5CF,EAAqBE,IAGzBvZ,OAAOuY,gBAAgBC,SAAY+B,IAU3Bva,OAAOwa,eAA0D,oBAAlCxa,OAAOwa,cAAchC,UACpDxY,OAAOwa,cAAchC,SAASiC,KAAKC,UAAUH,GAAU,OAI/Dva,OAAOuY,gBAAgBoC,eAAiB,KACpC,MAAMjE,EAlEY,MAClB,MAAM,KAAEhD,EAAF,KAAQQ,EAAR,OAAcD,GAAW6B,EAAM8E,WAErC,MAAO,CACHC,cAAe5G,EAAO1O,SAASuV,SAASC,UAAU,GAClDC,SAAU,CACNhH,SAAUlD,OAAOmG,KAAKvD,EAAKC,UAAU1L,IAAK0N,IAAD,CACrCsF,GAAItF,EACJuF,SAAUxH,EAAKC,SAASgC,GAAQF,SAEpC3B,WAAY,CACRrR,MAAOiR,EAAKI,WACZqH,cAAezH,EAAKI,YAExBO,QAASH,EAAKG,WAoDR+G,GACRC,EAAcZ,KAAKC,UAAUhE,GAM/B1W,OAAOwa,eAA6D,oBAArCxa,OAAOwa,cAAcc,aACpDtb,OAAOwa,cAAcc,YAAYD,IAMrCrb,OAAOwa,eAAuD,oBAA/Bxa,OAAOwa,cAAce,OAKpDvb,OAAOwa,cAAce,QG/LlB,MCCMC,EAAc,IAAMC,cCA1B,SAASC,EAAyBC,GACrC,OAAOC,YAA8BD,GCFzC,MAAME,E,OAAqBC,UAMZ,OAACC,EAAmBC,EAAY,KAAMC,EAAe,OAChE,SAASC,KAAYC,GACjB,OAAKA,EAASzZ,OAIPyZ,EAASlU,IAAKxH,GAAYob,EAASE,EAAYC,EAAYvb,GAAS2b,KAAK,KAHrEP,EAASE,EA4BxB,OAtBAG,EAAS3V,KAAO,CAAC9F,EAAiB4b,EAAaC,IAC3CT,EAASE,EAAYC,EAAYvb,EAAUwb,EAAeI,GAAOC,EAASL,EAAeK,EAAS,IAEtGJ,EAASG,IAAM,CAACA,EAAaC,IACzBT,EAASE,EAAYE,EAAeI,GAAOC,EAASL,EAAeK,EAAS,IAEhFJ,EAASK,OAAS,CAACC,EAA0C,GAAIjW,KAC7D,MAAMkW,EAAelW,EAAOwV,EAAYC,EAAYzV,EAAOwV,EAE3D,MAAO,CACHF,EACAY,EACA,IACA3L,OAAO4L,QAAQF,GACVvU,IAAI,EAAEoU,EAAKM,KAAeC,QAAQD,IAAcd,EAASY,EAAeR,EAAeI,GACvF1V,OAAOiW,SACPR,KAAK,MACZA,KAAK,KAGXF,EAASW,IAAM,IAAIxH,IAA6BA,EAAO+G,KAAK,KAErDF,GCpCI,GAACY,EAA0BC,IAA2B,CAACC,EAAaC,IAC/E,kBAACH,EAAD,iBAAeE,EAAf,CAAsBC,QAASA,EAASC,IAAKC,EAAIJ,GAAiBD,EAAU3K,S,OCMhF,MAWaiL,EAASC,EAXmB,EAAGH,MAAKI,QAAOhX,WAAUiX,eAC9D,yBAAKA,UAAWL,EAAIL,IAAIK,IAAOK,GAAa,KACvCvd,OAAOkY,QAAQxV,OAAS,0BAAM6a,UAAWL,EAAI,UAAc,GAC5D,yBAAKK,UAAWL,EAAI,YAChB,yBAAKK,UAAWL,EAAI,UACpB,yBAAKK,UAAWL,EAAI,UAAWI,IAEnC,yBAAKC,UAAWL,EAAI,YAAa5W,IAIA,UCrB5BkX,EAAoBC,GAC7BA,EAAKC,MAAM,IAAIC,YAAY,CAACpI,EAAKC,EAAM0B,EAAO0G,MACrB1G,GAAS0G,EAAIlb,OAAS,IAExB,IAAM,IACrB6S,EAAO,IAAGA,KAGPC,EAAOD,GACf,IAEMsI,EAAW,CAACC,EAAeC,KACpC,IAAIC,EAAY,EAEhB,MAAO,KACCA,IAIJA,EAAYnE,WAAW,KACnBmE,EAAY,EACZF,KACDC,M,OCXX,MAiBaE,EAAgBZ,EAjBmB,EAAGH,UAC/C,MAAM9D,EAAWoC,KAGbnH,SAAS,eAAEC,IACXoH,EAAY,EAAGxH,UAAWA,GAExBgK,EAAc5J,EAEpB,OACI,yBAAKiJ,UAAWL,IAAOnQ,SAAU,EAAGoR,QAASN,EAAS,IAAMzE,EAAS3S,YAAK+M,EAAO4K,iBAAkB,MAC/F,yBAAKb,UAAWL,EAAI,UACpB,yBAAKK,UAAWL,EAAI,SAAUgB,KAKM,iB,sBCjBhD,MAAMG,EAAmBC,IAAOC,GAAI;;;;;;;;;;;;;;EAgB9BC,EAAaF,IAAOC,GAAI;;;;6BAIDE;;;EAKvBC,EAAcJ,IAAOK,IAAK;;;;;;;;;;;;;;;;;;;;;;;;MAwB1BN;;;;;;EAQAO,EAAcN,IAAOC,GAAI;;;;;;;EAWlBM,GAAuB,KAChC,MAAMzF,EAAWoC,KACX,WAAE3H,EAAF,WAAcC,GAAe4H,EAAY,EAAGhI,UAAqBA,GAEvE,OACI,kBAAC2K,EAAD,CACItR,SAAU,EACVoR,QAASN,EAAS,KACdzE,EAAS3S,YAAK+M,EAAOmG,OACrBP,EZlFctB,EAAkB,gBYmFjC,MAEH,kBAAC0G,EAAD,KAAa3K,EAAa,GAAK,kBAAC6K,EAAD,KAAc7K,IAC7C,kBAAC+K,EAAD,KAAcpB,EAAiBsB,OAAOhL,EAAa,MAAnD,aCzFNiL,GAAa,CACf,WAAY,yDACZ,WAAY,4EACZC,KAAM,wCAGJC,GAAgB,CAClB,WAAY,UACZ,WAAY,UACZD,KAAM,WAGJN,GAAcJ,IAAOC,GAAI;;;;;;;wBAONvB,GAAsBiC,GAAcjC,EAAMhH;2BCbnE,MAAMkJ,GAAoBZ,IAAOC,GAAI;;;;;;EAQ/BY,GAAab,IAAOC,GAAI;;;;;;;;;;;EAaxBa,GAAuBd,IAAOC,GAAI;;;EAKlCK,GAAcN,IAAOC,GAAI;;;;;;EAQzBc,GAAcf,IAAOC,GAAI;;;;;;;EAYzBe,GAAchB,IAAOC,GAAsB;;;;;6BAKnBvB,GAAUA,EAAM5F;;;;EAMxCmI,GAAmBjB,IAAOC,GAAI;;;;;;;;;;;;;;;EAoB9BiB,GAAelB,IAAOC,GAAuB;;;;;;;;;;;kBAWjC,EAAG5a,cAAgBA,EAAW,UAAY;;;;;;;;;;;mBAWzC,EAAGA,cAAgBA,EAAW,MAAQ;;;;iCAIxB8b;;;;;EAO3BC,GAAuBpB,YD1Fc,EAAGtI,OAAM1P,cAAa0W,KAC7D,kBAAC,GAAD,eAAahH,KAAMA,GAAUgH,GACxB+B,GAAW/I,GADhB,IACwB1P,GCwFe;;;;;EAUrCqZ,GAAwBrB,IAAOC,GAAgC;;;;;;;;;;;;;;;;;;;;;;;UAuB3DiB;;;;;MAKJ,EAAG7b,cACDA,GACAic,GAAI;cACEV;cACAI;;;;EAmBDO,GAAkD,EAC3D1I,qBACAC,WACA3B,QACAtD,OACAmF,OACAzB,QACAqB,QACAO,iBACAD,QACA7T,eAEA,MAAMyV,EAAWoC,IACXsE,EAA2B9F,IAAM+F,YACnClC,EAAS,IAAMzE,EAASrB,EAAQ,CAAEvC,KAAM8B,EAAM7B,MAAO,OAAS,KAC9D,CAAC2D,EAAU9B,IAET0I,EAAkBhG,IAAM+F,YAAY,IAAM3G,ECnMLvB,EAAa,sBDmMYP,IAAQ,CAAC8B,EAAU9B,IACjF2I,EAAanG,IAEnB,OACI,kBAAC6F,GAAD,CACI5F,IAAK5C,EAAqB8I,OAAa3d,EACvCyK,SAAUpJ,GAAY,EAAI,EAC1BA,SAAUA,EACVuc,QAASF,EACT7B,QAAS2B,GAERtI,EAAQ,kBAACkI,GAAyBlI,GAAY,GAC/C,kBAAC+H,GAAD,KAAmBrI,GACnB,kBAACoI,GAAD,CAAalI,SAAUA,IACvB,kBAAC8H,GAAD,KACI,kBAACM,GAAD,CAAc7b,SAAU8T,IACxB,kBAAC0H,GAAD,KAAahN,GACb,kBAACiN,GAAD,KACI,kBAAC,GAAD,KAAcvJ,EAAd,WACCJ,EAAQ,kBAAC4J,GAAD,YAAe5J,GAAuB,OEjN7D0K,GAAoB7B,IAAOC,GAAI;;;;;EAO/B6B,GAAkB9B,IAAOC,GAAI;;;;;;;;EAyBtB8B,GAAchD,EAfC,KACxB,MAAM,SAAE1J,EAAF,MAAYC,GAAU8H,EAAY,EAAGxG,iBAAkBA,GACvDoL,EAAQtG,IAAMuG,QAAQ,IAAM3M,EAAM3L,IAAK0N,GAAWhC,EAASgC,IAAU,CAAC/B,EAAOD,IAEnF,OACI,kBAACwM,GAAD,KACI,kBAACC,GAAD,KACKE,EAAMrY,IAAKuN,GACR,kBAACqK,GAAD,eAAiBW,IAAKhL,EAAK8B,MAAU9B,QAOX,e,cC1BvC,MAAMiL,GAAoC,EAC7CC,YACAC,aACAC,eACAC,WACAC,cACAC,wBACAC,wBACGhE,MAEH,MAAMiE,EAAO3W,MAAM4W,KAAK5W,MAAMwW,IAAc7Y,IAAI,CAACkZ,EAAGC,IAChD9W,MAAM4W,KAAK5W,MAAMuW,IAAW5Y,IAAI,CAACkZ,EAAGE,IAChC,0BACIb,IAAM,GAAEY,KAAeC,IACvBte,EAAGqe,GAAeV,EAAYK,GAC9B9d,EAAGoe,GAAYV,EAAaK,GAC5Bjd,MAAO2c,EACP5c,OAAQ6c,EACRW,GAAIV,EACJW,GAAIX,MAKhB,OAAO,kBAAC,KAAkB5D,EAAQiE,I,OC7BtC,MAyBaO,GAAkBnE,EApB0B,EAAGH,SACxD,yBAAKK,UAAWL,KACZ,kBAACuD,GAAD,CACIgB,QAAU,eACV1d,MAAM,OACND,OAAO,OACP4d,gBAAgB,UAChBC,gBAAgB,UAChBjB,UAbM,IAcNC,WAbO,IAcPC,aAAc,GACdC,SAAU,EACVC,YAAa,EACbE,mBAfW,GAgBXD,sBAhBW,GAiBXa,MAAO,KAK+B,mBCtBrCC,GAAoB,KAC7B,MAAMzI,EAAWoC,KACX,KACF9H,EACAwB,aAAa,MAAEtB,IACf8H,EAAY,EAAGhI,OAAMM,WAAUkB,kBAAnB,CACZxB,OACAM,WACAkB,iBA8BJ,OA3BA8E,IAAM8H,UAAU,KACZ1I,EnBrByBtB,EAAkB,mBmBsB5C,CAACsB,IAEJY,IAAM8H,UAAU,KACRzH,GAoBL,IAGC,oCACI,kBAAC,EAAD,CAAQiD,MAAM,8CACV,kBAAC,EAAD,MACC5J,EAAKG,WAAa,EAAI,kBAACgL,GAAD,MAAiB,IAE3CjL,EAAMlR,OAAS,kBAAC2d,GAAD,MAAkB,kBAAC,GAAD,Q,yBCnD9C,MAAMb,GAAelB,IAAOyD,MAAO;;;;;;;;;;;;;;;;;;;;EA0BtBC,GAAgC,EAAGzE,YAAWpG,wBAAuB6F,MAC9E,MAAMiF,EAAgBnI,IAEtB,OACI,kBAAC,GAAD,eAAcyD,UAAWA,EAAWxD,IAAK5C,EAAqB8K,EAAgB,KAAMjM,KAAK,UAAagH,K,OCrB9G,MAAMkF,GAAsB9I,IACxBA,ErBV8BtB,EAAkB,mBqBqGvCqK,GAAW9E,EA1EmB,EAAGH,UAC1C,MAAM9D,EAAWoC,KACX,KAAEtH,EAAF,KAAQR,GAASgI,EAAY,EAAGxH,OAAMR,WAAT,CAAuBQ,OAAMR,WAC1D,UAEFU,EAEAC,SAAS,eAAEC,EAAF,SAAkBE,EAAlB,UAA4BE,GAJnC,cAMFP,GACAD,EAEEkO,EAAchO,EAEdjC,EAAOgC,EAEPkO,EAAgB/N,EAEtB,OACI,yBAAKiJ,UAAWL,KACZ,yBAAKK,UAAWL,EAAI,UAChB,yBAAKK,UAAWL,EAAI,eAChB,yBAAKK,UAAWL,EAAI,eAApB,SACA,yBAAKK,UAAWL,EAAI,eAApB,uBAEJ,yBAAKK,UAAWL,EAAI,kBACpB,yBAAKK,UAAWL,EAAIX,OAAO,CAAE+F,KAAK,GAAQ,kBAC1C,yBAAK/E,UAAWL,EAAIX,OAAO,CAAEgG,OAAO,GAAQ,mBAEhD,yBAAKhF,UAAWL,EAAI,YAAamF,GAChC3N,EACG,oCACI,yBAAK6I,UAAWL,EAAI,aAChB,yBAAKK,UAAWL,EAAI,sBAAuB1I,GAC3C,yBAAK+I,UAAWL,EAAI,0BAA2BkF,GAC/C,yBAAK7E,UAAWL,EAAI,kBAAmB/K,IAE3C,kBAAC6P,GAAD,CACIzE,UAAWL,EAAIX,OAAO,CAAE5Y,UAAU,GAAS,UAC3CA,SAAU+P,EAAKI,WAAa0O,GAC5BrL,oBAAkB,EAClBgH,QAASN,EAAS,IAAMqE,GAAmB9I,GAAW,MAJ1D,2FAUJ,oCACI,yBAAKmE,UAAWL,EAAI,iBAApB,mbAGA,kBAAC8E,GAAD,CACIzE,UAAWL,EAAIX,OAAO,CAAE5Y,UAAU,GAAS,UAC3CwT,oBAAkB,EAClBgH,QAASN,EACL,IACIzE,ECrFYvB,EAAa,cDsFV,CACPtS,SAAU,4FACV6c,YAAa,mBACbjQ,KAAM,0CAGlB,MAZR,4FAuBuB,Y,OEzF3C,MAuEasQ,GAAepF,EAvEmB,EAC3CnG,QACAwL,cACAC,cACAC,WAEAvL,cAEAwL,aACAhN,QAEAO,gBACAX,QACAyH,UAEA,MAAO4F,EAAUC,GAAY/I,IAAMgJ,UAAS,GACtCC,EAAsC,IAA1BpZ,OAAOuM,GACnB8M,EAAazN,EAAQ5L,OAAOuM,GAE5BgB,EAAWC,EAAY,GAEvB8L,EAAYN,EACZ7C,EAAkBhG,IAAM+F,YAAY,KACtC6C,EAAS1L,EAAQ,GACjB6L,GAAS,IACV,CAACH,EAAU1L,IAEd,OACI,yBAAKqG,UAAWL,EAAIX,OAAO,CAAE,WAAY0G,KACrC,yBAAK1F,UAAWL,EAAI,gBAAiBhG,GACrC,yBAAKqG,UAAWL,EAAI,SAAU5P,MAAO,CAAE8V,gBAAkB,QAAOhM,SAChE,yBAAKmG,UAAWL,EAAI,SAChB,yBAAKK,UAAWL,EAAIX,OAAO,CAAE,WAAY0G,GAAa,SAAUE,GAChE,yBAAK5F,UAAWL,EAAI,UAAW3Q,KAAKsI,MAAMhL,OAAOgM,GAAS,KAA1D,WACCoN,EAAY,yBAAK1F,UAAWL,EAAI,aAApB,0DAAmD,IAEnE+F,EACG,kBAACjB,GAAD,CACIzE,UAAWL,EAAI,iBACfgD,QAASF,EACTqD,OAAQ,IAAMN,GAAS,GACvB5E,QAASN,EAAS,IAAM6E,EAAYjN,GAAO,GAAO,MAJtD,8CASA,yBAAK8H,UAAWL,EAAIX,OAAO,CAAEuG,YAAY,aACrC,4BACI9M,KAAK,SACLsN,aAAW,OACX/F,UAAWL,EAAIX,OAAO,CAAEgH,OAAQ9N,EAAO+N,QAAS/N,GAAS,mBACzDyK,QAASF,EACTqD,OAAQ,IAAMN,GAAS,GACvB5E,QAASN,EAAS,IAAM6E,EAAY,GAAIjN,GAAQ,OAEpD,yBAAK8H,UAAWL,EAAI,mBAAoBzH,GACxC,4BACIO,KAAK,SACLsN,aAAW,OACX3f,UAAWuf,EACX3F,UAAWL,EAAIX,OAAO,CAAEkH,MAAM,GAAQ,mBACtCvD,QAASF,EACTqD,OAAQ,IAAMN,GAAS,GACvB5E,QAASN,EAAS8E,EAAa,UAQR,gB,OCzE/C,MAEMe,GAAY7iB,IACdA,EAAE8iB,cAAchY,UAAY,GAG1BiY,GAAY,CAAC1M,EAAe2M,KAI9B,IAAIC,EAAevX,KAAK4D,IAAI,EAAG+G,EAAQ,GAMvC,OAHA4M,EAAevX,KAAK8D,IAAI9D,KAAK4D,IAAI,EAAG0T,EAAa,GAAIC,GAbtC,IAgBRA,GA6EEC,GAAW1G,EA1EmB,EAAGH,UAC1C,MAAO8G,EAAmBC,GAAwBjK,IAAMgJ,SAAS,GAC3D5J,EAAWoC,KACX,KAAE9H,EAAF,SAAQM,GAAa0H,EAAY,EAAGhI,OAAMM,eAAT,CAA2BN,OAAMM,cAClEkQ,EAAqB3X,KAAKgL,KAAK7D,EAAKI,WAAa,KACjDqQ,EAAiBzQ,EAAKE,MAAMlR,OAC5B0hB,GAAuBJ,EACvBK,EAAqBL,IAAsBG,EAAiB,EAE5DG,EAAoC,CACtCC,UAAY,eAAcX,GAAUI,EAAmBG,SAG3D,OACI,yBAAK5G,UAAWL,KACZ,yBAAKK,UAAWL,EAAI,aAAcwG,SAAUA,IACxC,yBACInG,UAAWL,EAAIX,OACX,CAAEvY,KAAK,EAAMwgB,OAAQL,GAAkB,GAAKC,GAC5C,cAGR,yBAAK7G,UAAWL,EAAI,WAAY5P,MAAOgX,GAClC5Q,EAAKE,MAAM3L,IAAI,CAAC0N,EAAQuB,KACrB,MAAMtB,EAAc5B,EAASL,SAASgC,GAChCU,EAAW3C,EAAKC,SAASgC,GAE/B,OACI,kBAAC,GAAD,iBACQC,EADR,CAEIgN,SAAUqB,EACVvB,YAAa,CAACjN,EAAea,IACzB8C,EACIpB,EAAW,CACPxC,KAAMG,EACNF,MAAOqJ,OAAOrJ,GACda,yBAIZqM,YAAa,IACTvJ,EACIrB,EAAQ,CACJvC,KAAMG,EACNF,MAAO,OAInBA,MAAOY,EAASZ,MAChByB,MAAOA,EAAQ,EACfsJ,IAAK7K,QAKrB,yBACI4H,UAAWL,EAAIX,OACX,CAAEtY,QAAQ,EAAMugB,OAAQL,GAAkB,GAAKE,GAC/C,eAIZ,yBAAK9G,UAAWL,EAAI,gBAApB,uEAAkDM,EAAiBsB,OAAOoF,IAA1E,WACCxQ,EAAKI,WAAa0O,GACf,yBAAKjF,UAAWL,EAAI,kBAApB,iJACgC3Q,KAAKgL,KAAKiL,GAAgB0B,GAD1D,WAIA,KAM2B,YCnG9B1B,GAAgB,IAEvBiC,GAAmBnG,IAAOC,GAAI;;;;;;;6BAOPmG;;;;;;;;;;;;EAcvBtE,GAAkB9B,IAAOC,GAAI;;;;;EAOtBoG,GAAiB,IAC1B,oCACI,kBAACF,GAAD,MACA,kBAAC,EAAD,CAAQnH,MAAM,+CACd,kBAAC,GAAD,KACI,kBAAC,GAAD,MACA,kBAAC,GAAD,Q,2KC7BZ,MAAMsH,GAAetG,YAAO0D,GAAQ;;EAI9B6C,GAAkBvG,IAAOC,GAAI;;;;;;EAQ7BuG,GAAoBxG,IAAOC,GAAI;;;;;EAO/BwG,GAAkBzG,IAAOC,GAAI;;;;;;;EAS7ByG,GAAe1G,IAAOC,GAAI;;;;EAM1B0G,GAAoB3G,YAAO0G,GAAc;;;;;;;;6BAQlBE;EAGvBC,GAAqB7G,YAAO0G,GAAc;;;;;;;;6BAQnBI;EAGvBC,GAAoB/G,YAAO0G,GAAc;;;;;;;;6BAQlBM;EAGvBC,GAAqBjH,YAAO0G,GAAc;;;;;;;;6BAQnBQ;EAGvBC,GAAoBnH,YAAO0G,GAAc;;;;;;;;;;6BAUlBE;EAGvBQ,GAAoBpH,YAAO0G,GAAc;;;;;;;;6BAQlBW;EAGvBC,GAAsBtH,YAAO0G,GAAc;;;;;;;;6BAQpBa;EAGvBC,GAAqBxH,YAAO0G,GAAc;;;;;;;;6BAQnBe;EAGvBC,GAAoB1H,YAAO0G,GAAc;;;;;;;;6BAQlBiB;EAGhBC,GAAmB,KAC5B,MAAM,QAAEnS,GAAY2H,EAAY,EAAGhI,UAAWA,GAE9C,OACI,oCACI,kBAAC,EAAD,CAAQ4J,MAAM,+CACd,kBAACuH,GAAD,KACI,kBAACC,GAAD,wCAA2B/Q,EAA3B,qDACA,kBAACgR,GAAD,+FAEI,6BAFJ,iIAKA,kBAACH,GAAD,CAAczN,oBAAkB,GAAhC,qDACA,kBAAC8N,GAAD,MACA,kBAACE,GAAD,MACA,kBAACE,GAAD,MACA,kBAACE,GAAD,MACA,kBAACE,GAAD,MACA,kBAACC,GAAD,MACA,kBAACE,GAAD,MACA,kBAACE,GAAD,MACA,kBAACE,GAAD,S,OCnKhB,MAuCaG,GAAQ9I,EArCmB,EAAGH,UACtBpD,IAAjB,MACOsM,EAAcC,GAAYrM,IAAMgJ,SAAS,GvBXzB,IAAClF,EAAoCC,EuBc5D,OvBdwBD,EuBYZ,IAAMuI,EAA0BC,IAAjBF,EAA2C,EAAIA,EAAe,GvBZ7BrI,EuBYiC,IvBX7F/D,IAAM8H,UAAU,KACZ,MAAMyE,EAAaC,YAAY1I,EAAUC,GAEzC,MAAO,IAAM0I,cAAcF,KuBW3B,yBAAKhJ,UAAWL,EAAIX,OAAO,CAAE,CAAE,QAAO6J,EAAe,MAAM,KACvD,yBAAK7I,UAAWL,EAAI,SAChB,yBAAKK,UAAWL,EAAIX,OAAO,CAAE,CAAE,QAAO6J,EAAe,MAAM,GAAQ,YACnE,yBAAK7I,UAAWL,EAAIX,OAAO,CAAE,CAAE,QAAO6J,EAAe,MAAM,GAAQ,YACnE,yBAAK7I,UAAWL,EAAIX,OAAO,CAAE,CAAE,QAAO6J,EAAe,MAAM,GAAQ,YACnE,yBAAK7I,UAAWL,EAAIX,OAAO,CAAE,CAAE,QAAO6J,EAAe,MAAM,GAAQ,aAEvE,yBAAK7I,UAAWL,EAAI,UAApB,+FAEI,6BAFJ,2GAGI,6BAHJ,2DAKA,yBAAKK,UAAWL,EAAI,aAApB,6VAGC5S,MAAM4W,KAAK5W,MAvBI,IAuBwBrC,IAAI,CAACkZ,EAAGjK,IAC5C,yBACIsJ,IAAKtJ,EACLqG,UAAWL,EAAIX,OAAO,CAAE,CAAE,QAAOrF,EAAQ,MAAM,EAAMsN,OAAQtN,IAAUkP,GAAgB,YAG/F,yBAAK7I,UAAWL,EAAI,qBAChB,kBAAC8E,GAAD,CAAQzE,UAAWL,EAAI,UAAW/F,oBAAkB,GAApD,6EAGA,kBAAC6K,GAAD,CAAQzE,UAAWL,EAAI,WAAvB,wDAMwB,S,OCtCxC,MAwBawJ,GAASrJ,EAxBmB,EAAGH,UACxC,MAAM,QAAE7I,GAAYqH,EAAY,EAAGxH,UAAWA,GAE9C,OACI,yBAAKqJ,UAAWL,KACZ,kBAAC,EAAD,CAAQK,UAAWL,EAAI,UAAWI,MAAM,oFACxC,yBAAKC,UAAWL,EAAI,cAChB,yBAAKK,UAAWL,EAAI,UAChB,yBAAKK,UAAWL,EAAI,gBACpB,yBAAKK,UAAWL,EAAI,kBACpB,yBAAKK,UAAWL,EAAIX,OAAO,CAAE+F,KAAK,GAAQ,kBAC1C,yBAAK/E,UAAWL,EAAIX,OAAO,CAAEgG,OAAO,GAAQ,mBAEhD,yBAAKhF,UAAWL,EAAI,UAAW7I,GAC/B,yBAAKkJ,UAAWL,EAAI,aAApB,sPACA,kBAAC8E,GAAD,CAAQ7K,oBAAkB,EAACoG,UAAWL,EAAI,WAA1C,qDAIJ,yBAAKK,UAAWL,EAAI,kBAKS,U,OC3BzC,MAQayJ,GAActJ,EARmB,EAAGH,SAC7C,yBAAKK,UAAWL,KAAhB,wFAEI,6BAFJ,6OAO0C,e,OCPvC,MASM0J,GAAgBvJ,EAT0B,EAAGH,SACtD,oCACI,kBAAC,EAAD,CAAQI,MAAM,oFACd,yBAAKC,UAAWL,EAAI,cAChB,2BAAOlH,KAAK,WAKwB,iB,OCDhD,MAEM6Q,GAAgBvI,IAAOC,GAAI;iBAC0B;EAarD6B,GAAkB9B,IAAOC,GAAI;;;;;;;;MAF7B;SCvBC,MAAMuI,GAAaC,IACtBC,IAASC,OAAO,kBAACF,EAAD,MAAS5lB,SAAS+lB,eAAe,sBAGrDJ,GDgC8B,IAC1B,kBAAC,IAAD,CAAehR,MAAOA,GAClB,kBAAC,IAAD,CAAQoC,QAASA,GACb,kBAAC2O,GAAD,KACI,kBAAC,GAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOM,KAAM3T,EAAOiG,SAChB,kBAACoI,GAAD,OAEJ,kBAAC,IAAD,CAAOsF,KAAM3T,EAAOmG,MAChB,kBAACgL,GAAD,OAEJ,kBAAC,IAAD,CAAOwC,KAAM3T,EAAOoG,QAChB,kBAACsM,GAAD,OAEJ,kBAAC,IAAD,CAAOiB,KAAM3T,EAAO4K,gBAChB,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAO+I,KAAM3T,EAAO4T,OAChB,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAOD,KAAM3T,EAAOkG,SAChB,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAOyN,KAAM3T,EAAO6T,cAChB,kBAAC,GAAD,c,mBEpE5BvnB,EAAOC,QAAU,IAA0B,uC","file":"static/js/main.155afbfe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cart.4441295b.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.1b914755.svg\";","module.exports = __webpack_public_path__ + \"static/media/map.14a1524d.png\";","module.exports = __webpack_public_path__ + \"static/media/figure-2.a3044c99.svg\";","module.exports = __webpack_public_path__ + \"static/media/figure-3.7084a68e.svg\";","module.exports = __webpack_public_path__ + \"static/media/figure-4.74f25c1b.svg\";","module.exports = __webpack_public_path__ + \"static/media/figure-6.1cf5f7c7.svg\";","module.exports = __webpack_public_path__ + \"static/media/figure-7.ef978761.svg\";","module.exports = __webpack_public_path__ + \"static/media/figure-8.dcc5e538.svg\";","module.exports = __webpack_public_path__ + \"static/media/figure-9.fb8b47f7.svg\";","/* eslint-disable */\n\n/* Spatial Navigation Polyfill\n *\n * It follows W3C official specification\n * https://drafts.csswg.org/css-nav-1/\n *\n * Copyright (c) 2018-2019 LG Electronics Inc.\n * https://github.com/WICG/spatial-navigation/polyfill\n *\n * Licensed under the MIT license (MIT)\n */\n\n(function () {\n    // The polyfill must not be executed, if it's already enabled via browser engine or browser extensions.\n    if ('navigate' in window) {\n        return;\n    }\n\n    const ARROW_KEY_CODE = { 37: 'left', 38: 'up', 39: 'right', 40: 'down' };\n    const TAB_KEY_CODE = 9;\n    let mapOfBoundRect = null;\n    let startingPoint = null; // Saves spatial navigation starting point\n    let savedSearchOrigin = { element: null, rect: null }; // Saves previous search origin\n    let searchOriginRect = null; // Rect of current search origin\n\n    window.__getSpatNavState = () => {\n        return {\n            mapOfBoundRect,\n            startingPoint,\n            savedSearchOrigin,\n            searchOriginRect,\n        };\n    };\n\n    /**\n     * Initiate the spatial navigation features of the polyfill.\n     * @function initiateSpatialNavigation\n     */\n    function initiateSpatialNavigation() {\n        /*\n         * Bind the standards APIs to be exposed to the window object for authors\n         */\n        window.navigate = navigate;\n        window.Element.prototype.spatialNavigationSearch = spatialNavigationSearch;\n        window.Element.prototype.focusableAreas = focusableAreas;\n        window.Element.prototype.getSpatialNavigationContainer = getSpatialNavigationContainer;\n\n        /*\n         * CSS.registerProperty() from the Properties and Values API\n         * Reference: https://drafts.css-houdini.org/css-properties-values-api/#the-registerproperty-function\n         */\n        if (window.CSS && CSS.registerProperty) {\n            if (\n                window.getComputedStyle(document.documentElement).getPropertyValue('--spatial-navigation-contain') ===\n                ''\n            ) {\n                CSS.registerProperty({\n                    name: '--spatial-navigation-contain',\n                    syntax: 'auto | contain',\n                    inherits: false,\n                    initialValue: 'auto',\n                });\n            }\n\n            if (\n                window.getComputedStyle(document.documentElement).getPropertyValue('--spatial-navigation-action') === ''\n            ) {\n                CSS.registerProperty({\n                    name: '--spatial-navigation-action',\n                    syntax: 'auto | focus | scroll',\n                    inherits: false,\n                    initialValue: 'auto',\n                });\n            }\n\n            if (\n                window.getComputedStyle(document.documentElement).getPropertyValue('--spatial-navigation-function') ===\n                ''\n            ) {\n                CSS.registerProperty({\n                    name: '--spatial-navigation-function',\n                    syntax: 'normal | grid',\n                    inherits: false,\n                    initialValue: 'normal',\n                });\n            }\n        }\n    }\n\n    /**\n     * Add event handlers for the spatial navigation behavior.\n     * This function defines which input methods trigger the spatial navigation behavior.\n     * @function spatialNavigationHandler\n     */\n    function spatialNavigationHandler() {\n        /*\n         * keydown EventListener :\n         * If arrow key pressed, get the next focusing element and send it to focusing controller\n         */\n        window.addEventListener('keydown', (e) => {\n            const currentKeyMode =\n                (parent && parent.__spatialNavigation__.keyMode) || window.__spatialNavigation__.keyMode;\n            const eventTarget = document.activeElement;\n            const dir = ARROW_KEY_CODE[e.keyCode];\n\n            if (e.keyCode === TAB_KEY_CODE) {\n                startingPoint = null;\n            }\n\n            if (\n                !currentKeyMode ||\n                currentKeyMode === 'NONE' ||\n                (currentKeyMode === 'SHIFTARROW' && !e.shiftKey) ||\n                (currentKeyMode === 'ARROW' && e.shiftKey) ||\n                e.ctrlKey ||\n                e.metaKey ||\n                e.altKey\n            )\n                return;\n\n            if (!e.defaultPrevented) {\n                let focusNavigableArrowKey = {\n                    left: true,\n                    up: true,\n                    right: true,\n                    down: true,\n                };\n\n                // Edge case (text input, area) : Don't move focus, just navigate cursor in text area\n                if (eventTarget.nodeName === 'INPUT' || eventTarget.nodeName === 'TEXTAREA') {\n                    focusNavigableArrowKey = handlingEditableElement(e);\n                }\n\n                if (focusNavigableArrowKey[dir]) {\n                    e.preventDefault();\n                    mapOfBoundRect = new Map();\n\n                    navigate(dir);\n\n                    mapOfBoundRect = null;\n                    startingPoint = null;\n                }\n            }\n        });\n\n        /*\n         * mouseup EventListener :\n         * If the mouse click a point in the page, the point will be the starting point.\n         * NOTE: Let UA set the spatial navigation starting point based on click\n         */\n        document.addEventListener('mouseup', (e) => {\n            startingPoint = { x: e.clientX, y: e.clientY };\n        });\n\n        /*\n         * focusin EventListener :\n         * When the element get the focus, save it and its DOMRect for resetting the search origin\n         * if it disappears.\n         */\n        window.addEventListener('focusin', (e) => {\n            if (e.target !== window) {\n                savedSearchOrigin.element = e.target;\n                savedSearchOrigin.rect = e.target.getBoundingClientRect();\n            }\n        });\n    }\n\n    /**\n     * Enable the author to trigger spatial navigation programmatically, as if the user had done so manually.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#dom-window-navigate}\n     * @function navigate\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     */\n    function navigate(dir) {\n        // spatial navigation steps\n\n        // 1\n        const searchOrigin = findSearchOrigin();\n        console.log(searchOrigin);\n        let eventTarget = searchOrigin;\n        let elementFromPosition = null;\n\n        // 2 Optional step, UA defined starting point\n        if (startingPoint) {\n            // if there is a starting point, set eventTarget as the element from position for getting the spatnav container\n            elementFromPosition = document.elementFromPoint(startingPoint.x, startingPoint.y);\n\n            // Use starting point if the starting point isn't inside the focusable element (but not container)\n            // * Starting point is meaningfull when:\n            // 1) starting point is inside the spatnav container\n            // 2) starting point is inside the non-focusable element\n            if (elementFromPosition === null) {\n                elementFromPosition = document.body;\n            }\n            if (isFocusable(elementFromPosition) && !isContainer(elementFromPosition)) {\n                startingPoint = null;\n            } else if (isContainer(elementFromPosition)) {\n                eventTarget = elementFromPosition;\n            } else {\n                eventTarget = elementFromPosition.getSpatialNavigationContainer();\n            }\n        }\n\n        // 4\n        if (eventTarget === window || eventTarget === document || eventTarget === document.documentElement) {\n            eventTarget = document.body || document.documentElement;\n        }\n\n        // 5\n        // At this point, spatialNavigationSearch can be applied.\n        // If startingPoint is either a scroll container or the document,\n        // find the best candidate within startingPoint\n        let container = null;\n        if ((isContainer(eventTarget) || eventTarget.nodeName === 'BODY') && !(eventTarget.nodeName === 'INPUT')) {\n            if (eventTarget.nodeName === 'IFRAME') {\n                eventTarget = eventTarget.contentDocument.documentElement;\n            }\n\n            container = container === window ? document.body : eventTarget;\n            let bestInsideCandidate = null;\n\n            // 5-2\n            if (\n                document.activeElement === searchOrigin ||\n                (document.activeElement === document.body && searchOrigin === document.documentElement)\n            ) {\n                if (getCSSSpatNavAction(eventTarget) === 'scroll') {\n                    if (scrollingController(eventTarget, dir)) return;\n                } else if (getCSSSpatNavAction(eventTarget) === 'focus') {\n                    bestInsideCandidate = eventTarget.spatialNavigationSearch(dir, {\n                        container: eventTarget,\n                        candidates: getSpatialNavigationCandidates(eventTarget, {\n                            mode: 'all',\n                        }),\n                    });\n                    if (focusingController(bestInsideCandidate, dir)) return;\n                } else if (getCSSSpatNavAction(eventTarget) === 'auto') {\n                    bestInsideCandidate = eventTarget.spatialNavigationSearch(dir, {\n                        container: eventTarget,\n                    });\n                    if (focusingController(bestInsideCandidate, dir) || scrollingController(eventTarget, dir)) return;\n                }\n            } else {\n                // when the previous search origin became offscreen\n                container = container.getSpatialNavigationContainer();\n            }\n        }\n\n        // 6\n        // Let container be the nearest ancestor of eventTarget\n        container = eventTarget.getSpatialNavigationContainer();\n        let parentContainer = container.parentElement ? container.getSpatialNavigationContainer() : null;\n\n        // When the container is the viewport of a browsing context\n        if (!parentContainer && window.location !== window.parent.location) {\n            parentContainer = window.parent.document.documentElement;\n        }\n\n        if (getCSSSpatNavAction(container) === 'scroll') {\n            if (scrollingController(container, dir)) return;\n        } else if (getCSSSpatNavAction(container) === 'focus') {\n            navigateChain(eventTarget, container, parentContainer, dir, 'all');\n        } else if (getCSSSpatNavAction(container) === 'auto') {\n            navigateChain(eventTarget, container, parentContainer, dir, 'visible');\n        }\n    }\n\n    /**\n     * Move the focus to the best candidate or do nothing.\n     * @function focusingController\n     * @param bestCandidate {Node} - The best candidate of the spatial navigation\n     * @param dir {SpatialNavigationDirection}- The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {boolean}\n     */\n    function focusingController(bestCandidate, dir) {\n        // 10 & 11\n        // When bestCandidate is found\n        if (bestCandidate) {\n            // When bestCandidate is a focusable element and not a container : move focus\n            /*\n             * [event] navbeforefocus : Fired before spatial or sequential navigation changes the focus.\n             */\n            if (!createSpatNavEvents('beforefocus', bestCandidate, null, dir)) return true;\n\n            const container = bestCandidate.getSpatialNavigationContainer();\n\n            if (container !== window && getCSSSpatNavAction(container) === 'focus') {\n                bestCandidate.focus();\n            } else {\n                bestCandidate.focus({ preventScroll: true });\n            }\n\n            startingPoint = null;\n            return true;\n        }\n\n        // When bestCandidate is not found within the scrollport of a container: Nothing\n        return false;\n    }\n\n    /**\n     * Directionally scroll the scrollable spatial navigation container if it can be manually scrolled more.\n     * @function scrollingController\n     * @param container {Node} - The spatial navigation container which can scroll\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {boolean}\n     */\n    function scrollingController(container, dir) {\n        // If there is any scrollable area among parent elements and it can be manually scrolled, scroll the document\n        if (isScrollable(container, dir) && !isScrollBoundary(container, dir)) {\n            moveScroll(container, dir);\n            return true;\n        }\n\n        // If the spatnav container is document and it can be scrolled, scroll the document\n        if (!container.parentElement && !isHTMLScrollBoundary(container, dir)) {\n            moveScroll(container.ownerDocument.documentElement, dir);\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Find the candidates within a spatial navigation container include delegable container.\n     * This function does not search inside delegable container or focusable container.\n     * In other words, this return candidates set is not included focusable elements inside delegable container or focusable container.\n     *\n     * @function getSpatialNavigationCandidates\n     * @param container {Node} - The spatial navigation container\n     * @param option {FocusableAreasOptions} - 'mode' attribute takes 'visible' or 'all' for searching the boundary of focusable elements.\n     *                                          Default value is 'visible'.\n     * @returns {sequence<Node>} candidate elements within the container\n     */\n    function getSpatialNavigationCandidates(container, option = { mode: 'visible' }) {\n        let candidates = [];\n\n        if (container.childElementCount > 0) {\n            if (!container.parentElement) {\n                container = container.getElementsByTagName('body')[0] || document.body;\n            }\n            const children = container.children;\n            for (const elem of children) {\n                if (isDelegableContainer(elem)) {\n                    candidates.push(elem);\n                } else if (isFocusable(elem)) {\n                    candidates.push(elem);\n\n                    if (!isContainer(elem) && elem.childElementCount) {\n                        candidates = candidates.concat(getSpatialNavigationCandidates(elem, { mode: 'all' }));\n                    }\n                } else if (elem.childElementCount) {\n                    candidates = candidates.concat(getSpatialNavigationCandidates(elem, { mode: 'all' }));\n                }\n            }\n        }\n\n        //   console.log(candidates)\n        return option.mode === 'all' ? candidates : candidates.filter(isVisible);\n    }\n\n    /**\n     * Find the candidates among focusable elements within a spatial navigation container from the search origin (currently focused element)\n     * depending on the directional information.\n     * @function getFilteredSpatialNavigationCandidates\n     * @param element {Node} - The currently focused element which is defined as 'search origin' in the spec\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @param candidates {sequence<Node>} - The candidates for spatial navigation without the directional information\n     * @param container {Node} - The spatial navigation container\n     * @returns {Node} The candidates for spatial navigation considering the directional information\n     */\n    function getFilteredSpatialNavigationCandidates(element, dir, candidates, container) {\n        const targetElement = element;\n        // Removed below line due to a bug. (iframe body rect is sometime weird.)\n        // const targetElement = (element.nodeName === 'IFRAME') ? element.contentDocument.body : element;\n        // If the container is unknown, get the closest container from the element\n        container = container || targetElement.getSpatialNavigationContainer();\n\n        // If the candidates is unknown, find candidates\n        // 5-1\n        candidates = !candidates || candidates.length <= 0 ? getSpatialNavigationCandidates(container) : candidates;\n        return filteredCandidates(targetElement, candidates, dir, container);\n    }\n\n    /**\n     * Find the best candidate among the candidates within the container from the search origin (currently focused element)\n     * @see {@link https://drafts.csswg.org/css-nav-1/#dom-element-spatialnavigationsearch}\n     * @function spatialNavigationSearch\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @param candidates {sequence<Node>} - The candidates for spatial navigation\n     * @param container {Node} - The spatial navigation container\n     * @returns {Node} The best candidate which will gain the focus\n     */\n    function spatialNavigationSearch(dir, args) {\n        const targetElement = this;\n        let internalCandidates = [];\n        let externalCandidates = [];\n        let insideOverlappedCandidates = getOverlappedCandidates(targetElement);\n        let bestTarget;\n\n        // Set default parameter value\n        if (!args) args = {};\n\n        const defaultContainer = targetElement.getSpatialNavigationContainer();\n        let defaultCandidates = getSpatialNavigationCandidates(defaultContainer);\n        const container = args.container || defaultContainer;\n        if (args.container && defaultContainer.contains(args.container)) {\n            defaultCandidates = defaultCandidates.concat(getSpatialNavigationCandidates(container));\n        }\n        const candidates =\n            args.candidates && args.candidates.length > 0\n                ? args.candidates.filter((candidate) => container.contains(candidate))\n                : defaultCandidates.filter((candidate) => container.contains(candidate) && container !== candidate);\n\n        // Find the best candidate\n        // 5\n        // If startingPoint is either a scroll container or the document,\n        // find the best candidate within startingPoint\n        if (candidates && candidates.length > 0) {\n            // Divide internal or external candidates\n            candidates.forEach((candidate) => {\n                if (candidate !== targetElement) {\n                    (targetElement.contains(candidate) && targetElement !== candidate\n                            ? internalCandidates\n                            : externalCandidates\n                    ).push(candidate);\n                }\n            });\n\n            // include overlapped element to the internalCandidates\n            let fullyOverlapped = insideOverlappedCandidates.filter(\n                (candidate) => !internalCandidates.includes(candidate),\n            );\n            let overlappedContainer = candidates.filter(\n                (candidate) => isContainer(candidate) && isEntirelyVisible(targetElement, candidate),\n            );\n            let overlappedByParent = overlappedContainer\n                .map((elm) => elm.focusableAreas())\n                .flat()\n                .filter((candidate) => candidate !== targetElement);\n\n            internalCandidates = internalCandidates\n                .concat(fullyOverlapped)\n                .filter((candidate) => container.contains(candidate));\n            externalCandidates = externalCandidates\n                .concat(overlappedByParent)\n                .filter((candidate) => container.contains(candidate));\n\n            // Filter external Candidates\n            if (externalCandidates.length > 0) {\n                externalCandidates = getFilteredSpatialNavigationCandidates(\n                    targetElement,\n                    dir,\n                    externalCandidates,\n                    container,\n                );\n            }\n\n            // If there isn't search origin element but search orgin rect exist  (search origin isn't in the layout case)\n            if (searchOriginRect) {\n                bestTarget = selectBestCandidate(\n                    targetElement,\n                    getFilteredSpatialNavigationCandidates(targetElement, dir, internalCandidates, container),\n                    dir,\n                );\n            }\n\n            if (internalCandidates && internalCandidates.length > 0 && !(targetElement.nodeName === 'INPUT')) {\n                bestTarget = selectBestCandidateFromEdge(targetElement, internalCandidates, dir);\n            }\n\n            bestTarget = bestTarget || selectBestCandidate(targetElement, externalCandidates, dir);\n\n            if (bestTarget && isDelegableContainer(bestTarget)) {\n                // if best target is delegable container, then find descendants candidate inside delegable container.\n                const innerTarget = getSpatialNavigationCandidates(bestTarget, {\n                    mode: 'all',\n                });\n                const descendantsBest =\n                    innerTarget.length > 0\n                        ? targetElement.spatialNavigationSearch(dir, {\n                            candidates: innerTarget,\n                            container: bestTarget,\n                        })\n                        : null;\n                if (descendantsBest) {\n                    bestTarget = descendantsBest;\n                } else if (!isFocusable(bestTarget)) {\n                    // if there is no target inside bestTarget and delegable container is not focusable,\n                    // then try to find another best target without curren best target.\n                    candidates.splice(candidates.indexOf(bestTarget), 1);\n                    bestTarget = candidates.length\n                        ? targetElement.spatialNavigationSearch(dir, {\n                            candidates: candidates,\n                            container: container,\n                        })\n                        : null;\n                }\n            }\n            return bestTarget;\n        }\n\n        return null;\n    }\n\n    /**\n     * Get the filtered candidate among candidates.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#select-the-best-candidate}\n     * @function filteredCandidates\n     * @param currentElm {Node} - The currently focused element which is defined as 'search origin' in the spec\n     * @param candidates {sequence<Node>} - The candidates for spatial navigation\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @param container {Node} - The spatial navigation container\n     * @returns {sequence<Node>} The filtered candidates which are not the search origin and not in the given spatial navigation direction from the search origin\n     */\n    // TODO: Need to fix filtering the candidates with more clean code\n    function filteredCandidates(currentElm, candidates, dir, container) {\n        const originalContainer = currentElm.getSpatialNavigationContainer();\n        let eventTargetRect;\n\n        // If D(dir) is null, let candidates be the same as visibles\n        if (dir === undefined) return candidates;\n\n        // Offscreen handling when originalContainer is not <HTML>\n        if (originalContainer.parentElement && container !== originalContainer && !isVisible(currentElm)) {\n            eventTargetRect = getBoundingClientRect(originalContainer);\n        } else {\n            eventTargetRect = searchOriginRect || getBoundingClientRect(currentElm);\n        }\n\n        /*\n         * Else, let candidates be the subset of the elements in visibles\n         * whose principal box’s geometric center is within the closed half plane\n         * whose boundary goes through the geometric center of starting point and is perpendicular to D.\n         */\n        if ((isContainer(currentElm) || currentElm.nodeName === 'BODY') && !(currentElm.nodeName === 'INPUT')) {\n            return candidates.filter((candidate) => {\n                const candidateRect = getBoundingClientRect(candidate);\n                return (\n                    container.contains(candidate) &&\n                    ((currentElm.contains(candidate) &&\n                        isInside(eventTargetRect, candidateRect) &&\n                        candidate !== currentElm) ||\n                        isOutside(candidateRect, eventTargetRect, dir))\n                );\n            });\n        } else {\n            return candidates.filter((candidate) => {\n                const candidateRect = getBoundingClientRect(candidate);\n                const candidateBody = candidate.nodeName === 'IFRAME' ? candidate.contentDocument.body : null;\n                return (\n                    container.contains(candidate) &&\n                    candidate !== currentElm &&\n                    candidateBody !== currentElm &&\n                    isOutside(candidateRect, eventTargetRect, dir) &&\n                    !isInside(eventTargetRect, candidateRect)\n                );\n            });\n        }\n    }\n\n    /**\n     * Select the best candidate among given candidates.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#select-the-best-candidate}\n     * @function selectBestCandidate\n     * @param currentElm {Node} - The currently focused element which is defined as 'search origin' in the spec\n     * @param candidates {sequence<Node>} - The candidates for spatial navigation\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {Node} The best candidate which will gain the focus\n     */\n    function selectBestCandidate(currentElm, candidates, dir) {\n        const container = currentElm.getSpatialNavigationContainer();\n        const spatialNavigationFunction = getComputedStyle(container).getPropertyValue('--spatial-navigation-function');\n        const currentTargetRect = searchOriginRect || getBoundingClientRect(currentElm);\n        let distanceFunction;\n        let alignedCandidates;\n\n        switch (spatialNavigationFunction) {\n            case 'grid':\n                alignedCandidates = candidates.filter((elm) =>\n                    isAligned(currentTargetRect, getBoundingClientRect(elm), dir),\n                );\n                if (alignedCandidates.length > 0) {\n                    candidates = alignedCandidates;\n                }\n                distanceFunction = getAbsoluteDistance;\n                break;\n            default:\n                distanceFunction = getDistance;\n                break;\n        }\n        return getClosestElement(currentElm, candidates, dir, distanceFunction);\n    }\n\n    /**\n     * Select the best candidate among candidates by finding the closet candidate from the edge of the currently focused element (search origin).\n     * @see {@link https://drafts.csswg.org/css-nav-1/#select-the-best-candidate (Step 5)}\n     * @function selectBestCandidateFromEdge\n     * @param currentElm {Node} - The currently focused element which is defined as 'search origin' in the spec\n     * @param candidates {sequence<Node>} - The candidates for spatial navigation\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {Node} The best candidate which will gain the focus\n     */\n    function selectBestCandidateFromEdge(currentElm, candidates, dir) {\n        if (startingPoint) return getClosestElement(currentElm, candidates, dir, getDistanceFromPoint);\n        else return getClosestElement(currentElm, candidates, dir, getInnerDistance);\n    }\n\n    /**\n     * Select the closest candidate from the currently focused element (search origin) among candidates by using the distance function.\n     * @function getClosestElement\n     * @param currentElm {Node} - The currently focused element which is defined as 'search origin' in the spec\n     * @param candidates {sequence<Node>} - The candidates for spatial navigation\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @param distanceFunction {function} - The distance function which measures the distance from the search origin to each candidate\n     * @returns {Node} The candidate which is the closest one from the search origin\n     */\n    function getClosestElement(currentElm, candidates, dir, distanceFunction) {\n        let eventTargetRect = null;\n        if (\n            window.location !== window.parent.location &&\n            (currentElm.nodeName === 'BODY' || currentElm.nodeName === 'HTML')\n        ) {\n            // If the eventTarget is iframe, then get rect of it based on its containing document\n            // Set the iframe's position as (0,0) because the rects of elements inside the iframe don't know the real iframe's position.\n            eventTargetRect = window.frameElement.getBoundingClientRect();\n            eventTargetRect.x = 0;\n            eventTargetRect.y = 0;\n        } else {\n            eventTargetRect = searchOriginRect || currentElm.getBoundingClientRect();\n        }\n\n        let minDistance = Number.POSITIVE_INFINITY;\n        let minDistanceElements = [];\n\n        if (candidates) {\n            for (let i = 0; i < candidates.length; i++) {\n                const distance = distanceFunction(eventTargetRect, getBoundingClientRect(candidates[i]), dir);\n\n                // If the same distance, the candidate will be selected in the DOM order\n                if (distance < minDistance) {\n                    minDistance = distance;\n                    minDistanceElements = [candidates[i]];\n                } else if (distance === minDistance) {\n                    minDistanceElements.push(candidates[i]);\n                }\n            }\n        }\n        if (minDistanceElements.length === 0) return null;\n\n        return minDistanceElements.length > 1 && distanceFunction === getAbsoluteDistance\n            ? getClosestElement(currentElm, minDistanceElements, dir, getEuclideanDistance)\n            : minDistanceElements[0];\n    }\n\n    /**\n     * Get container of an element.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#dom-element-getspatialnavigationcontainer}\n     * @module Element\n     * @function getSpatialNavigationContainer\n     * @returns {Node} The spatial navigation container\n     */\n    function getSpatialNavigationContainer() {\n        let container = this;\n\n        do {\n            if (!container.parentElement) {\n                if (window.location !== window.parent.location) {\n                    container = window.parent.document.documentElement;\n                } else {\n                    container = window.document.documentElement;\n                }\n                break;\n            } else {\n                container = container.parentElement;\n            }\n\n            // console.log(container, isContainer(container));\n        } while (!isContainer(container));\n        return container;\n    }\n\n    /**\n     * Get nearest scroll container of an element.\n     * @function getScrollContainer\n     * @param Element\n     * @returns {Node} The spatial navigation container\n     */\n    function getScrollContainer(element) {\n        let scrollContainer = element;\n\n        do {\n            if (!scrollContainer.parentElement) {\n                if (window.location !== window.parent.location) {\n                    scrollContainer = window.parent.document.documentElement;\n                } else {\n                    scrollContainer = window.document.documentElement;\n                }\n                break;\n            } else {\n                scrollContainer = scrollContainer.parentElement;\n            }\n        } while (!isScrollContainer(scrollContainer) || !isVisible(scrollContainer));\n\n        if (scrollContainer === document || scrollContainer === document.documentElement) {\n            scrollContainer = window;\n        }\n\n        return scrollContainer;\n    }\n\n    /**\n     * Find focusable elements within the spatial navigation container.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#dom-element-focusableareas}\n     * @function focusableAreas\n     * @param option {FocusableAreasOptions} - 'mode' attribute takes 'visible' or 'all' for searching the boundary of focusable elements.\n     *                                          Default value is 'visible'.\n     * @returns {sequence<Node>} All focusable elements or only visible focusable elements within the container\n     */\n    function focusableAreas(option = { mode: 'visible' }) {\n        const container = this.parentElement ? this : document.body;\n        const focusables = Array.prototype.filter.call(container.getElementsByTagName('*'), isFocusable);\n        return option.mode === 'all' ? focusables : focusables.filter(isVisible);\n    }\n\n    /**\n     * Create the NavigationEvent: navbeforefocus, navnotarget\n     * @see {@link https://drafts.csswg.org/css-nav-1/#events-navigationevent}\n     * @function createSpatNavEvents\n     * @param option {string} - Type of the navigation event (beforefocus, notarget)\n     * @param element {Node} - The target element of the event\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     */\n    function createSpatNavEvents(eventType, containerElement, currentElement, direction) {\n        if (['beforefocus', 'notarget'].includes(eventType)) {\n            const data = {\n                causedTarget: currentElement,\n                dir: direction,\n            };\n            const triggeredEvent = new CustomEvent('nav' + eventType, {\n                bubbles: true,\n                cancelable: true,\n                detail: data,\n            });\n            return containerElement.dispatchEvent(triggeredEvent);\n        }\n    }\n\n    /**\n     * Get the value of the CSS custom property of the element\n     * @function readCssVar\n     * @param element {Node}\n     * @param varName {string} - The name of the css custom property without '--'\n     * @returns {string} The value of the css custom property\n     */\n    function readCssVar(element, varName) {\n        return getComputedStyle(element).getPropertyValue(`--${varName}`).trim();\n    }\n\n    /**\n     * Decide whether or not the 'contain' value is given to 'spatial-navigation-contain' css property of an element\n     * @function isCSSSpatNavContain\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isCSSSpatNavContain(element) {\n        return readCssVar(element, 'spatial-navigation-contain') === 'contain';\n    }\n\n    /**\n     * Return the value of 'spatial-navigation-action' css property of an element\n     * @function getCSSSpatNavAction\n     * @param element {Node} - would be the spatial navigation container\n     * @returns {string} auto | focus | scroll\n     */\n    function getCSSSpatNavAction(element) {\n        return 'focus';\n        //   return readCssVar(element, 'spatial-navigation-action') || 'auto';\n    }\n\n    /**\n     * Only move the focus with spatial navigation. Manually scrolling isn't available.\n     * @function navigateChain\n     * @param eventTarget {Node} - currently focused element\n     * @param container {SpatialNavigationContainer} - container\n     * @param parentContainer {SpatialNavigationContainer} - parent container\n     * @param option - visible || all\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     */\n    function navigateChain(eventTarget, container, parentContainer, dir, option) {\n        let currentOption = {\n            candidates: getSpatialNavigationCandidates(container, { mode: option }),\n            container,\n        };\n        //   console.log(currentOption)\n\n        while (parentContainer) {\n            if (focusingController(eventTarget.spatialNavigationSearch(dir, currentOption), dir)) {\n                return;\n            } else {\n                if (option === 'visible' && scrollingController(container, dir)) return;\n                else {\n                    if (!createSpatNavEvents('notarget', container, eventTarget, dir)) return;\n\n                    // find the container\n                    if (container === document || container === document.documentElement) {\n                        if (window.location !== window.parent.location) {\n                            // The page is in an iframe. eventTarget needs to be reset because the position of the element in the iframe\n                            eventTarget = window.frameElement;\n                            container = eventTarget.ownerDocument.documentElement;\n                        }\n                    } else {\n                        container = parentContainer;\n                    }\n                    currentOption = {\n                        candidates: getSpatialNavigationCandidates(container, {\n                            mode: option,\n                        }),\n                        container,\n                    };\n                    let nextContainer = container.getSpatialNavigationContainer();\n\n                    if (nextContainer !== container) {\n                        parentContainer = nextContainer;\n                    } else {\n                        parentContainer = null;\n                    }\n                }\n            }\n        }\n\n        currentOption = {\n            candidates: getSpatialNavigationCandidates(container, { mode: option }),\n            container,\n        };\n\n        // Behavior after 'navnotarget' - Getting out from the current spatnav container\n        if (\n            !parentContainer &&\n            container &&\n            focusingController(eventTarget.spatialNavigationSearch(dir, currentOption), dir)\n        )\n            return;\n\n        if (!createSpatNavEvents('notarget', currentOption.container, eventTarget, dir)) return;\n\n        if (getCSSSpatNavAction(container) === 'auto' && option === 'visible') {\n            if (scrollingController(container, dir)) return;\n        }\n    }\n\n    /**\n     * Find search origin\n     * @see {@link https://drafts.csswg.org/css-nav-1/#nav}\n     * @function findSearchOrigin\n     * @returns {Node} The search origin for the spatial navigation\n     */\n    function findSearchOrigin() {\n        let searchOrigin = document.activeElement;\n\n        if (!searchOrigin || (searchOrigin === document.body && !document.querySelector(':focus'))) {\n            // When the previous search origin lost its focus by blur: (1) disable attribute (2) visibility: hidden\n            if (savedSearchOrigin.element && searchOrigin !== savedSearchOrigin.element) {\n                const elementStyle = window.getComputedStyle(savedSearchOrigin.element, null);\n                const invisibleStyle = ['hidden', 'collapse'];\n\n                if (\n                    savedSearchOrigin.element.disabled ||\n                    invisibleStyle.includes(elementStyle.getPropertyValue('visibility'))\n                ) {\n                    searchOrigin = savedSearchOrigin.element;\n                    return searchOrigin;\n                }\n            }\n            searchOrigin = document.documentElement;\n        }\n        // When the previous search origin lost its focus by blur: (1) display:none () element size turned into zero\n        if (\n            savedSearchOrigin.element &&\n            (getBoundingClientRect(savedSearchOrigin.element).height === 0 ||\n                getBoundingClientRect(savedSearchOrigin.element).width === 0)\n        ) {\n            (startingPoint = (savedSearchOrigin.left + savedSearchOrigin.right) / 2),\n            (savedSearchOrigin.top + savedSearchOrigin.bottom) / 2;\n            // searchOriginRect = savedSearchOrigin.rect;\n        }\n\n        if (!isVisibleInScroller(searchOrigin)) {\n            const scroller = getScrollContainer(searchOrigin);\n            if (scroller && (scroller === window || getCSSSpatNavAction(scroller) === 'auto')) return scroller;\n        }\n        return searchOrigin;\n    }\n\n    /**\n     * Move the scroll of an element depending on the given spatial navigation directrion\n     * (Assume that User Agent defined distance is '40px')\n     * @see {@link https://drafts.csswg.org/css-nav-1/#directionally-scroll-an-element}\n     * @function moveScroll\n     * @param element {Node} - The scrollable element\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @param offset {Number} - The explicit amount of offset for scrolling. Default value is 0.\n     */\n    function moveScroll(element, dir, offset = 0) {\n        if (element) {\n            switch (dir) {\n                case 'left':\n                    element.scrollLeft -= 40 + offset;\n                    break;\n                case 'right':\n                    element.scrollLeft += 40 + offset;\n                    break;\n                case 'up':\n                    element.scrollTop -= 40 + offset;\n                    break;\n                case 'down':\n                    element.scrollTop += 40 + offset;\n                    break;\n            }\n        }\n    }\n\n    /**\n     * Decide whether an element is container or not.\n     * @function isContainer\n     * @param element {Node} element\n     * @returns {boolean}\n     */\n    function isContainer(element) {\n        return (\n            !element.parentElement ||\n            element.nodeName === 'IFRAME' ||\n            isScrollContainer(element) ||\n            isCSSSpatNavContain(element)\n        );\n    }\n\n    /**\n     * Decide whether an element is delegable container or not.\n     * NOTE: THIS IS NON-NORMATIVE API.\n     * @function isDelegableContainer\n     * @param element {Node} element\n     * @returns {boolean}\n     */\n    function isDelegableContainer(element) {\n        return readCssVar(element, 'spatial-navigation-contain') === 'delegable';\n    }\n\n    /**\n     * Decide whether an element is a scrollable container or not.\n     * @see {@link https://drafts.csswg.org/css-overflow-3/#scroll-container}\n     * @function isScrollContainer\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isScrollContainer(element) {\n        const elementStyle = window.getComputedStyle(element, null);\n        const overflowX = elementStyle.getPropertyValue('overflow-x');\n        const overflowY = elementStyle.getPropertyValue('overflow-y');\n\n        return (overflowX !== 'visible' && overflowX !== 'clip' && isOverflow(element, 'left')) ||\n        (overflowY !== 'visible' && overflowY !== 'clip' && isOverflow(element, 'down'))\n            ? true\n            : false;\n    }\n\n    /**\n     * Decide whether this element is scrollable or not.\n     * NOTE: If the value of 'overflow' is given to either 'visible', 'clip', or 'hidden', the element isn't scrollable.\n     *       If the value is 'hidden', the element can be only programmically scrollable. (https://drafts.csswg.org/css-overflow-3/#valdef-overflow-hidden)\n     * @function isScrollable\n     * @param element {Node}\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {boolean}\n     */\n    function isScrollable(element, dir) {\n        // element, dir\n        if (element && typeof element === 'object') {\n            if (dir && typeof dir === 'string') {\n                // parameter: dir, element\n                if (isOverflow(element, dir)) {\n                    // style property\n                    const elementStyle = window.getComputedStyle(element, null);\n                    const overflowX = elementStyle.getPropertyValue('overflow-x');\n                    const overflowY = elementStyle.getPropertyValue('overflow-y');\n\n                    switch (dir) {\n                        case 'left':\n                        /* falls through */\n                        case 'right':\n                            return overflowX !== 'visible' && overflowX !== 'clip' && overflowX !== 'hidden';\n                        case 'up':\n                        /* falls through */\n                        case 'down':\n                            return overflowY !== 'visible' && overflowY !== 'clip' && overflowY !== 'hidden';\n                    }\n                }\n                return false;\n            } else {\n                // parameter: element\n                return (\n                    element.nodeName === 'HTML' ||\n                    element.nodeName === 'BODY' ||\n                    (isScrollContainer(element) && isOverflow(element))\n                );\n            }\n        }\n    }\n\n    /**\n     * Decide whether an element is overflow or not.\n     * @function isOverflow\n     * @param element {Node}\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {boolean}\n     */\n    function isOverflow(element, dir) {\n        if (element && typeof element === 'object') {\n            if (dir && typeof dir === 'string') {\n                // parameter: element, dir\n                switch (dir) {\n                    case 'left':\n                    /* falls through */\n                    case 'right':\n                        return element.scrollWidth > element.clientWidth;\n                    case 'up':\n                    /* falls through */\n                    case 'down':\n                        return element.scrollHeight > element.clientHeight;\n                }\n            } else {\n                // parameter: element\n                return element.scrollWidth > element.clientWidth || element.scrollHeight > element.clientHeight;\n            }\n            return false;\n        }\n    }\n\n    /**\n     * Decide whether the scrollbar of the browsing context reaches to the end or not.\n     * @function isHTMLScrollBoundary\n     * @param element {Node} - The top browsing context\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {boolean}\n     */\n    function isHTMLScrollBoundary(element, dir) {\n        let result = false;\n        switch (dir) {\n            case 'left':\n                result = element.scrollLeft === 0;\n                break;\n            case 'right':\n                result = element.scrollWidth - element.scrollLeft - element.clientWidth === 0;\n                break;\n            case 'up':\n                result = element.scrollTop === 0;\n                break;\n            case 'down':\n                result = element.scrollHeight - element.scrollTop - element.clientHeight === 0;\n                break;\n        }\n        return result;\n    }\n\n    /**\n     * Decide whether the scrollbar of an element reaches to the end or not.\n     * @function isScrollBoundary\n     * @param element {Node}\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {boolean}\n     */\n    function isScrollBoundary(element, dir) {\n        if (isScrollable(element, dir)) {\n            const winScrollY = element.scrollTop;\n            const winScrollX = element.scrollLeft;\n\n            const height = element.scrollHeight - element.clientHeight;\n            const width = element.scrollWidth - element.clientWidth;\n\n            switch (dir) {\n                case 'left':\n                    return winScrollX === 0;\n                case 'right':\n                    return Math.abs(winScrollX - width) <= 1;\n                case 'up':\n                    return winScrollY === 0;\n                case 'down':\n                    return Math.abs(winScrollY - height) <= 1;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Decide whether an element is inside the scorller viewport or not\n     *\n     * @function isVisibleInScroller\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isVisibleInScroller(element) {\n        const elementRect = element.getBoundingClientRect();\n        let nearestScroller = getScrollContainer(element);\n\n        let scrollerRect = null;\n        if (nearestScroller !== window) {\n            scrollerRect = getBoundingClientRect(nearestScroller);\n        } else {\n            scrollerRect = new DOMRect(0, 0, window.innerWidth, window.innerHeight);\n        }\n\n        if (isInside(scrollerRect, elementRect, 'left') && isInside(scrollerRect, elementRect, 'down')) return true;\n        else return false;\n    }\n\n    /**\n     * Decide whether an element is focusable for spatial navigation.\n     * 1. If element is the browsing context (document, iframe), then it's focusable,\n     * 2. If the element is scrollable container (regardless of scrollable axis), then it's focusable,\n     * 3. The value of tabIndex >= 0, then it's focusable,\n     * 4. If the element is disabled, it isn't focusable,\n     * 5. If the element is expressly inert, it isn't focusable,\n     * 6. Whether the element is being rendered or not.\n     *\n     * @function isFocusable\n     * @param element {Node}\n     * @returns {boolean}\n     *\n     * @see {@link https://html.spec.whatwg.org/multipage/interaction.html#focusable-area}\n     */\n    function isFocusable(element) {\n        if (\n            element.tabIndex < 0 ||\n            isAtagWithoutHref(element) ||\n            isActuallyDisabled(element) ||\n            isExpresslyInert(element) ||\n            !isBeingRendered(element)\n        )\n            return false;\n        else if (!element.parentElement || (isScrollable(element) && isOverflow(element)) || element.tabIndex >= 0)\n            return true;\n    }\n\n    /**\n     * Decide whether an element is a tag without href attribute or not.\n     *\n     * @function isAtagWithoutHref\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isAtagWithoutHref(element) {\n        return (\n            element.tagName === 'A' &&\n            element.getAttribute('href') === null &&\n            element.getAttribute('tabIndex') === null\n        );\n    }\n\n    /**\n     * Decide whether an element is actually disabled or not.\n     *\n     * @function isActuallyDisabled\n     * @param element {Node}\n     * @returns {boolean}\n     *\n     * @see {@link https://html.spec.whatwg.org/multipage/semantics-other.html#concept-element-disabled}\n     */\n    function isActuallyDisabled(element) {\n        if (['BUTTON', 'INPUT', 'SELECT', 'TEXTAREA', 'OPTGROUP', 'OPTION', 'FIELDSET'].includes(element.tagName))\n            return element.disabled;\n        else return false;\n    }\n\n    /**\n     * Decide whether the element is expressly inert or not.\n     * @see {@link https://html.spec.whatwg.org/multipage/interaction.html#expressly-inert}\n     * @function isExpresslyInert\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isExpresslyInert(element) {\n        return element.inert && !element.ownerDocument.documentElement.inert;\n    }\n\n    /**\n     * Decide whether the element is being rendered or not.\n     * 1. If an element has the style as \"visibility: hidden | collapse\" or \"display: none\", it is not being rendered.\n     * 2. If an element has the style as \"opacity: 0\", it is not being rendered.(that is, invisible).\n     * 3. If width and height of an element are explicitly set to 0, it is not being rendered.\n     * 4. If a parent element is hidden, an element itself is not being rendered.\n     * (CSS visibility property and display property are inherited.)\n     * @see {@link https://html.spec.whatwg.org/multipage/rendering.html#being-rendered}\n     * @function isBeingRendered\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isBeingRendered(element) {\n        if (!isVisibleStyleProperty(element.parentElement)) return false;\n        if (\n            !isVisibleStyleProperty(element) ||\n            element.style.opacity === '0' ||\n            window.getComputedStyle(element).height === '0px' ||\n            window.getComputedStyle(element).width === '0px'\n        )\n            return false;\n        return true;\n    }\n\n    /**\n     * Decide whether this element is partially or completely visible to user agent.\n     * @function isVisible\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isVisible(element) {\n        return !element.parentElement || (isVisibleStyleProperty(element) && hitTest(element));\n    }\n\n    /**\n     * Decide whether this element is completely visible in this viewport for the arrow direction.\n     * @function isEntirelyVisible\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isEntirelyVisible(element, container) {\n        const rect = getBoundingClientRect(element);\n        const containerElm = container || element.getSpatialNavigationContainer();\n        const containerRect = getBoundingClientRect(containerElm);\n\n        // FIXME: when element is bigger than container?\n        const entirelyVisible = !(\n            rect.left < containerRect.left ||\n            rect.right > containerRect.right ||\n            rect.top < containerRect.top ||\n            rect.bottom > containerRect.bottom\n        );\n\n        return entirelyVisible;\n    }\n\n    /**\n     * Decide the style property of this element is specified whether it's visible or not.\n     * @function isVisibleStyleProperty\n     * @param element {CSSStyleDeclaration}\n     * @returns {boolean}\n     */\n    function isVisibleStyleProperty(element) {\n        const elementStyle = window.getComputedStyle(element, null);\n        const thisVisibility = elementStyle.getPropertyValue('visibility');\n        const thisDisplay = elementStyle.getPropertyValue('display');\n        const invisibleStyle = ['hidden', 'collapse'];\n\n        return thisDisplay !== 'none' && !invisibleStyle.includes(thisVisibility);\n    }\n\n    /**\n     * Decide whether this element is entirely or partially visible within the viewport.\n     * @function hitTest\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function hitTest(element) {\n        const elementRect = getBoundingClientRect(element);\n        if (\n            element.nodeName !== 'IFRAME' &&\n            (elementRect.top < 0 ||\n                elementRect.left < 0 ||\n                elementRect.top > element.ownerDocument.documentElement.clientHeight ||\n                elementRect.left > element.ownerDocument.documentElement.clientWidth)\n        )\n            return false;\n\n        let offsetX = parseInt(element.offsetWidth) / 10;\n        let offsetY = parseInt(element.offsetHeight) / 10;\n\n        offsetX = isNaN(offsetX) ? 1 : offsetX;\n        offsetY = isNaN(offsetY) ? 1 : offsetY;\n\n        const hitTestPoint = {\n            // For performance, just using the three point(middle, leftTop, rightBottom) of the element for hit testing\n            middle: [(elementRect.left + elementRect.right) / 2, (elementRect.top + elementRect.bottom) / 2],\n            leftTop: [elementRect.left + offsetX, elementRect.top + offsetY],\n            rightBottom: [elementRect.right - offsetX, elementRect.bottom - offsetY],\n        };\n\n        for (const point in hitTestPoint) {\n            const elemFromPoint = element.ownerDocument.elementFromPoint(...hitTestPoint[point]);\n            if (element === elemFromPoint || element.contains(elemFromPoint)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Decide whether a child element is entirely or partially Included within container visually.\n     * @function isInside\n     * @param containerRect {DOMRect}\n     * @param childRect {DOMRect}\n     * @returns {boolean}\n     */\n    function isInside(containerRect, childRect) {\n        const rightEdgeCheck = containerRect.left < childRect.right && containerRect.right >= childRect.right;\n        const leftEdgeCheck = containerRect.left <= childRect.left && containerRect.right > childRect.left;\n        const topEdgeCheck = containerRect.top <= childRect.top && containerRect.bottom > childRect.top;\n        const bottomEdgeCheck = containerRect.top < childRect.bottom && containerRect.bottom >= childRect.bottom;\n        return (rightEdgeCheck || leftEdgeCheck) && (topEdgeCheck || bottomEdgeCheck);\n    }\n\n    /**\n     * Decide whether this element is entirely or partially visible within the viewport.\n     * Note: rect1 is outside of rect2 for the dir\n     * @function isOutside\n     * @param rect1 {DOMRect}\n     * @param rect2 {DOMRect}\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {boolean}\n     */\n    function isOutside(rect1, rect2, dir) {\n        switch (dir) {\n            case 'left':\n                return isRightSide(rect2, rect1);\n            case 'right':\n                return isRightSide(rect1, rect2);\n            case 'up':\n                return isBelow(rect2, rect1);\n            case 'down':\n                return isBelow(rect1, rect2);\n            default:\n                return false;\n        }\n    }\n\n    /* rect1 is right of rect2 */\n    function isRightSide(rect1, rect2) {\n        return (\n            rect1.left >= rect2.right ||\n            (rect1.left >= rect2.left &&\n                rect1.right > rect2.right &&\n                rect1.bottom > rect2.top &&\n                rect1.top < rect2.bottom)\n        );\n    }\n\n    /* rect1 is below of rect2 */\n    function isBelow(rect1, rect2) {\n        return (\n            rect1.top >= rect2.bottom ||\n            (rect1.top >= rect2.top &&\n                rect1.bottom > rect2.bottom &&\n                rect1.left < rect2.right &&\n                rect1.right > rect2.left)\n        );\n    }\n\n    /* rect1 is completely aligned or partially aligned for the direction */\n    function isAligned(rect1, rect2, dir) {\n        switch (dir) {\n            case 'left':\n            /* falls through */\n            case 'right':\n                return rect1.bottom > rect2.top && rect1.top < rect2.bottom;\n            case 'up':\n            /* falls through */\n            case 'down':\n                return rect1.right > rect2.left && rect1.left < rect2.right;\n            default:\n                return false;\n        }\n    }\n\n    /**\n     * Get distance between the search origin and a candidate element along the direction when candidate element is inside the search origin.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#find-the-shortest-distance}\n     * @function getDistanceFromPoint\n     * @param point {Point} - The search origin\n     * @param element {DOMRect} - A candidate element\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {Number} The euclidian distance between the spatial navigation container and an element inside it\n     */\n    function getDistanceFromPoint(point, element, dir) {\n        point = startingPoint;\n        // Get exit point, entry point -> {x: '', y: ''};\n        const points = getEntryAndExitPoints(dir, point, element);\n\n        // Find the points P1 inside the border box of starting point and P2 inside the border box of candidate\n        // that minimize the distance between these two points\n        const P1 = Math.abs(points.entryPoint.x - points.exitPoint.x);\n        const P2 = Math.abs(points.entryPoint.y - points.exitPoint.y);\n\n        // The result is euclidian distance between P1 and P2.\n        return Math.sqrt(Math.pow(P1, 2) + Math.pow(P2, 2));\n    }\n\n    /**\n     * Get distance between the search origin and a candidate element along the direction when candidate element is inside the search origin.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#find-the-shortest-distance}\n     * @function getInnerDistance\n     * @param rect1 {DOMRect} - The search origin\n     * @param rect2 {DOMRect} - A candidate element\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {Number} The euclidean distance between the spatial navigation container and an element inside it\n     */\n    function getInnerDistance(rect1, rect2, dir) {\n        const baseEdgeForEachDirection = {\n            left: 'right',\n            right: 'left',\n            up: 'bottom',\n            down: 'top',\n        };\n        const baseEdge = baseEdgeForEachDirection[dir];\n\n        return Math.abs(rect1[baseEdge] - rect2[baseEdge]);\n    }\n\n    /**\n     * Get the distance between the search origin and a candidate element considering the direction.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#calculating-the-distance}\n     * @function getDistance\n     * @param searchOrigin {DOMRect | Point} - The search origin\n     * @param candidateRect {DOMRect} - A candidate element\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {Number} The distance scoring between two elements\n     */\n    function getDistance(searchOrigin, candidateRect, dir) {\n        const kOrthogonalWeightForLeftRight = 30;\n        const kOrthogonalWeightForUpDown = 2;\n\n        let orthogonalBias = 0;\n        let alignBias = 0;\n        const alignWeight = 5.0;\n\n        // Get exit point, entry point -> {x: '', y: ''};\n        const points = getEntryAndExitPoints(dir, searchOrigin, candidateRect);\n\n        // Find the points P1 inside the border box of starting point and P2 inside the border box of candidate\n        // that minimize the distance between these two points\n        const P1 = Math.abs(points.entryPoint.x - points.exitPoint.x);\n        const P2 = Math.abs(points.entryPoint.y - points.exitPoint.y);\n\n        // A: The euclidean distance between P1 and P2.\n        const A = Math.sqrt(Math.pow(P1, 2) + Math.pow(P2, 2));\n        let B, C;\n\n        // B: The absolute distance in the direction which is orthogonal to dir between P1 and P2, or 0 if dir is null.\n        // C: The intersection edges between a candidate and the starting point.\n\n        // D: The square root of the area of intersection between the border boxes of candidate and starting point\n        const intersectionRect = getIntersectionRect(searchOrigin, candidateRect);\n        const D = intersectionRect.area;\n\n        switch (dir) {\n            case 'left':\n            /* falls through */\n            case 'right':\n                // If two elements are aligned, add align bias\n                // else, add orthogonal bias\n                if (isAligned(searchOrigin, candidateRect, dir))\n                    alignBias = Math.min(intersectionRect.height / searchOrigin.height, 1);\n                else orthogonalBias = searchOrigin.height / 2;\n\n                B = (P2 + orthogonalBias) * kOrthogonalWeightForLeftRight;\n                C = alignWeight * alignBias;\n                break;\n\n            case 'up':\n            /* falls through */\n            case 'down':\n                // If two elements are aligned, add align bias\n                // else, add orthogonal bias\n                if (isAligned(searchOrigin, candidateRect, dir))\n                    alignBias = Math.min(intersectionRect.width / searchOrigin.width, 1);\n                else orthogonalBias = searchOrigin.width / 2;\n\n                B = (P1 + orthogonalBias) * kOrthogonalWeightForUpDown;\n                C = alignWeight * alignBias;\n                break;\n\n            default:\n                B = 0;\n                C = 0;\n                break;\n        }\n\n        return A + B - C - D;\n    }\n\n    /**\n     * Get the euclidean distance between the search origin and a candidate element considering the direction.\n     * @function getEuclideanDistance\n     * @param rect1 {DOMRect} - The search origin\n     * @param rect2 {DOMRect} - A candidate element\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {Number} The distance scoring between two elements\n     */\n    function getEuclideanDistance(rect1, rect2, dir) {\n        // Get exit point, entry point\n        const points = getEntryAndExitPoints(dir, rect1, rect2);\n\n        // Find the points P1 inside the border box of starting point and P2 inside the border box of candidate\n        // that minimize the distance between these two points\n        const P1 = Math.abs(points.entryPoint.x - points.exitPoint.x);\n        const P2 = Math.abs(points.entryPoint.y - points.exitPoint.y);\n\n        // Return the euclidean distance between P1 and P2.\n        return Math.sqrt(Math.pow(P1, 2) + Math.pow(P2, 2));\n    }\n\n    /**\n     * Get the absolute distance between the search origin and a candidate element considering the direction.\n     * @function getAbsoluteDistance\n     * @param rect1 {DOMRect} - The search origin\n     * @param rect2 {DOMRect} - A candidate element\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {Number} The distance scoring between two elements\n     */\n    function getAbsoluteDistance(rect1, rect2, dir) {\n        // Get exit point, entry point\n        const points = getEntryAndExitPoints(dir, rect1, rect2);\n\n        // Return the absolute distance in the dir direction between P1 and P.\n        return dir === 'left' || dir === 'right'\n            ? Math.abs(points.entryPoint.x - points.exitPoint.x)\n            : Math.abs(points.entryPoint.y - points.exitPoint.y);\n    }\n\n    /**\n     * Get entry point and exit point of two elements considering the direction.\n     * @function getEntryAndExitPoints\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD). Default value for dir is 'down'.\n     * @param searchOrigin {DOMRect | Point} - The search origin which contains the exit point\n     * @param candidateRect {DOMRect} - One of candidates which contains the entry point\n     * @returns {Points} The exit point from the search origin and the entry point from a candidate\n     */\n    function getEntryAndExitPoints(dir = 'down', searchOrigin, candidateRect) {\n        /**\n         * User type definition for Point\n         * @typeof {Object} Points\n         * @property {Point} Points.entryPoint\n         * @property {Point} Points.exitPoint\n         */\n        const points = { entryPoint: { x: 0, y: 0 }, exitPoint: { x: 0, y: 0 } };\n\n        if (startingPoint) {\n            points.exitPoint = searchOrigin;\n\n            switch (dir) {\n                case 'left':\n                    points.entryPoint.x = candidateRect.right;\n                    break;\n                case 'up':\n                    points.entryPoint.y = candidateRect.bottom;\n                    break;\n                case 'right':\n                    points.entryPoint.x = candidateRect.left;\n                    break;\n                case 'down':\n                    points.entryPoint.y = candidateRect.top;\n                    break;\n            }\n\n            // Set orthogonal direction\n            switch (dir) {\n                case 'left':\n                case 'right':\n                    if (startingPoint.y <= candidateRect.top) {\n                        points.entryPoint.y = candidateRect.top;\n                    } else if (startingPoint.y < candidateRect.bottom) {\n                        points.entryPoint.y = startingPoint.y;\n                    } else {\n                        points.entryPoint.y = candidateRect.bottom;\n                    }\n                    break;\n\n                case 'up':\n                case 'down':\n                    if (startingPoint.x <= candidateRect.left) {\n                        points.entryPoint.x = candidateRect.left;\n                    } else if (startingPoint.x < candidateRect.right) {\n                        points.entryPoint.x = startingPoint.x;\n                    } else {\n                        points.entryPoint.x = candidateRect.right;\n                    }\n                    break;\n            }\n        } else {\n            // Set direction\n            switch (dir) {\n                case 'left':\n                    points.exitPoint.x = searchOrigin.left;\n                    points.entryPoint.x =\n                        candidateRect.right < searchOrigin.left ? candidateRect.right : searchOrigin.left;\n                    break;\n                case 'up':\n                    points.exitPoint.y = searchOrigin.top;\n                    points.entryPoint.y =\n                        candidateRect.bottom < searchOrigin.top ? candidateRect.bottom : searchOrigin.top;\n                    break;\n                case 'right':\n                    points.exitPoint.x = searchOrigin.right;\n                    points.entryPoint.x =\n                        candidateRect.left > searchOrigin.right ? candidateRect.left : searchOrigin.right;\n                    break;\n                case 'down':\n                    points.exitPoint.y = searchOrigin.bottom;\n                    points.entryPoint.y =\n                        candidateRect.top > searchOrigin.bottom ? candidateRect.top : searchOrigin.bottom;\n                    break;\n            }\n\n            // Set orthogonal direction\n            switch (dir) {\n                case 'left':\n                case 'right':\n                    if (isBelow(searchOrigin, candidateRect)) {\n                        points.exitPoint.y = searchOrigin.top;\n                        points.entryPoint.y =\n                            candidateRect.bottom < searchOrigin.top ? candidateRect.bottom : searchOrigin.top;\n                    } else if (isBelow(candidateRect, searchOrigin)) {\n                        points.exitPoint.y = searchOrigin.bottom;\n                        points.entryPoint.y =\n                            candidateRect.top > searchOrigin.bottom ? candidateRect.top : searchOrigin.bottom;\n                    } else {\n                        points.exitPoint.y = Math.max(searchOrigin.top, candidateRect.top);\n                        points.entryPoint.y = points.exitPoint.y;\n                    }\n                    break;\n\n                case 'up':\n                case 'down':\n                    if (isRightSide(searchOrigin, candidateRect)) {\n                        points.exitPoint.x = searchOrigin.left;\n                        points.entryPoint.x =\n                            candidateRect.right < searchOrigin.left ? candidateRect.right : searchOrigin.left;\n                    } else if (isRightSide(candidateRect, searchOrigin)) {\n                        points.exitPoint.x = searchOrigin.right;\n                        points.entryPoint.x =\n                            candidateRect.left > searchOrigin.right ? candidateRect.left : searchOrigin.right;\n                    } else {\n                        points.exitPoint.x = Math.max(searchOrigin.left, candidateRect.left);\n                        points.entryPoint.x = points.exitPoint.x;\n                    }\n                    break;\n            }\n        }\n\n        return points;\n    }\n\n    /**\n     * Find focusable elements within the container\n     * @see {@link https://drafts.csswg.org/css-nav-1/#find-the-shortest-distance}\n     * @function getIntersectionRect\n     * @param rect1 {DOMRect} - The search origin which contains the exit point\n     * @param rect2 {DOMRect} - One of candidates which contains the entry point\n     * @returns {IntersectionArea} The intersection area between two elements.\n     *\n     * @typeof {Object} IntersectionArea\n     * @property {Number} IntersectionArea.width\n     * @property {Number} IntersectionArea.height\n     */\n    function getIntersectionRect(rect1, rect2) {\n        const intersection_rect = { width: 0, height: 0, area: 0 };\n\n        const new_location = [Math.max(rect1.left, rect2.left), Math.max(rect1.top, rect2.top)];\n        const new_max_point = [Math.min(rect1.right, rect2.right), Math.min(rect1.bottom, rect2.bottom)];\n\n        intersection_rect.width = Math.abs(new_location[0] - new_max_point[0]);\n        intersection_rect.height = Math.abs(new_location[1] - new_max_point[1]);\n\n        if (!(new_location[0] >= new_max_point[0] || new_location[1] >= new_max_point[1])) {\n            // intersecting-cases\n            intersection_rect.area = Math.sqrt(intersection_rect.width * intersection_rect.height);\n        }\n\n        return intersection_rect;\n    }\n\n    /**\n     * Handle the spatial navigation behavior for HTMLInputElement, HTMLTextAreaElement\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input|HTMLInputElement (MDN)}\n     * @function handlingEditableElement\n     * @param e {Event} - keydownEvent\n     * @returns {boolean}\n     */\n    function handlingEditableElement(e) {\n        const SPINNABLE_INPUT_TYPES = ['email', 'date', 'month', 'number', 'time', 'week'],\n            TEXT_INPUT_TYPES = ['password', 'text', 'search', 'tel', 'url', null];\n        const eventTarget = document.activeElement;\n        const startPosition = eventTarget.selectionStart;\n        const endPosition = eventTarget.selectionEnd;\n        const focusNavigableArrowKey = {\n            left: false,\n            up: false,\n            right: false,\n            down: false,\n        };\n\n        const dir = ARROW_KEY_CODE[e.keyCode];\n        if (dir === undefined) {\n            return focusNavigableArrowKey;\n        }\n\n        if (SPINNABLE_INPUT_TYPES.includes(eventTarget.getAttribute('type')) && (dir === 'up' || dir === 'down')) {\n            focusNavigableArrowKey[dir] = true;\n        } else if (TEXT_INPUT_TYPES.includes(eventTarget.getAttribute('type')) || eventTarget.nodeName === 'TEXTAREA') {\n            if (startPosition === endPosition) {\n                // if there isn't any selected text\n                if (startPosition === 0) {\n                    focusNavigableArrowKey.left = true;\n                    focusNavigableArrowKey.up = true;\n                }\n                if (endPosition === eventTarget.value.length) {\n                    focusNavigableArrowKey.right = true;\n                    focusNavigableArrowKey.down = true;\n                }\n            }\n        } else {\n            // HTMLDataListElement, HTMLSelectElement, HTMLOptGroup\n            focusNavigableArrowKey[dir] = true;\n        }\n\n        return focusNavigableArrowKey;\n    }\n\n    /**\n     * Get the DOMRect of an element\n     * @function getBoundingClientRect\n     * @param {Node} element\n     * @returns {DOMRect}\n     */\n    function getBoundingClientRect(element) {\n        // memoization\n        let rect = mapOfBoundRect && mapOfBoundRect.get(element);\n        if (!rect) {\n            const boundingClientRect = element.getBoundingClientRect();\n            rect = {\n                top: Number(boundingClientRect.top.toFixed(2)),\n                right: Number(boundingClientRect.right.toFixed(2)),\n                bottom: Number(boundingClientRect.bottom.toFixed(2)),\n                left: Number(boundingClientRect.left.toFixed(2)),\n                width: Number(boundingClientRect.width.toFixed(2)),\n                height: Number(boundingClientRect.height.toFixed(2)),\n            };\n            mapOfBoundRect && mapOfBoundRect.set(element, rect);\n        }\n        return rect;\n    }\n\n    /**\n     * Get the candidates which is fully inside the target element in visual\n     * @param {Node} targetElement\n     * @returns {sequence<Node>}  overlappedCandidates\n     */\n    function getOverlappedCandidates(targetElement) {\n        const container = targetElement.getSpatialNavigationContainer();\n        const candidates = container.focusableAreas();\n        const overlappedCandidates = [];\n\n        candidates.forEach((element) => {\n            if (targetElement !== element && isEntirelyVisible(element, targetElement)) {\n                overlappedCandidates.push(element);\n            }\n        });\n\n        return overlappedCandidates;\n    }\n\n    /**\n     * Get the list of the experimental APIs\n     * @function getExperimentalAPI\n     */\n    function getExperimentalAPI() {\n        function canScroll(container, dir) {\n            return (\n                (isScrollable(container, dir) && !isScrollBoundary(container, dir)) ||\n                (!container.parentElement && !isHTMLScrollBoundary(container, dir))\n            );\n        }\n\n        function findTarget(findCandidate, element, dir, option) {\n            let eventTarget = element;\n            let bestNextTarget = null;\n\n            // 4\n            if (eventTarget === document || eventTarget === document.documentElement) {\n                eventTarget = document.body || document.documentElement;\n            }\n\n            // 5\n            // At this point, spatialNavigationSearch can be applied.\n            // If startingPoint is either a scroll container or the document,\n            // find the best candidate within startingPoint\n            if ((isContainer(eventTarget) || eventTarget.nodeName === 'BODY') && !(eventTarget.nodeName === 'INPUT')) {\n                if (eventTarget.nodeName === 'IFRAME') eventTarget = eventTarget.contentDocument.body;\n\n                const candidates = getSpatialNavigationCandidates(eventTarget, option);\n\n                // 5-2\n                if (Array.isArray(candidates) && candidates.length > 0) {\n                    return findCandidate\n                        ? getFilteredSpatialNavigationCandidates(eventTarget, dir, candidates)\n                        : eventTarget.spatialNavigationSearch(dir, { candidates });\n                }\n                if (canScroll(eventTarget, dir)) {\n                    return findCandidate ? [] : eventTarget;\n                }\n            }\n\n            // 6\n            // Let container be the nearest ancestor of eventTarget\n            let container = eventTarget.getSpatialNavigationContainer();\n            let parentContainer = container.parentElement ? container.getSpatialNavigationContainer() : null;\n\n            // When the container is the viewport of a browsing context\n            if (!parentContainer && window.location !== window.parent.location) {\n                parentContainer = window.parent.document.documentElement;\n            }\n\n            // 7\n            while (parentContainer) {\n                const candidates = filteredCandidates(\n                    eventTarget,\n                    getSpatialNavigationCandidates(container, option),\n                    dir,\n                    container,\n                );\n\n                if (Array.isArray(candidates) && candidates.length > 0) {\n                    bestNextTarget = eventTarget.spatialNavigationSearch(dir, {\n                        candidates,\n                        container,\n                    });\n                    if (bestNextTarget) {\n                        return findCandidate ? candidates : bestNextTarget;\n                    }\n                }\n\n                    // If there isn't any candidate and the best candidate among candidate:\n                    // 1) Scroll or 2) Find candidates of the ancestor container\n                // 8 - if\n                else if (canScroll(container, dir)) {\n                    return findCandidate ? [] : eventTarget;\n                } else if (container === document || container === document.documentElement) {\n                    container = window.document.documentElement;\n\n                    // The page is in an iframe\n                    if (window.location !== window.parent.location) {\n                        // eventTarget needs to be reset because the position of the element in the IFRAME\n                        // is unuseful when the focus moves out of the iframe\n                        eventTarget = window.frameElement;\n                        container = window.parent.document.documentElement;\n                        if (container.parentElement) parentContainer = container.getSpatialNavigationContainer();\n                        else {\n                            parentContainer = null;\n                            break;\n                        }\n                    }\n                } else {\n                    // avoiding when spatnav container with tabindex=-1\n                    if (isFocusable(container)) {\n                        eventTarget = container;\n                    }\n\n                    container = parentContainer;\n                    if (container.parentElement) parentContainer = container.getSpatialNavigationContainer();\n                    else {\n                        parentContainer = null;\n                        break;\n                    }\n                }\n            }\n\n            if (!parentContainer && container) {\n                // Getting out from the current spatnav container\n                const candidates = filteredCandidates(\n                    eventTarget,\n                    getSpatialNavigationCandidates(container, option),\n                    dir,\n                    container,\n                );\n\n                // 9\n                if (Array.isArray(candidates) && candidates.length > 0) {\n                    bestNextTarget = eventTarget.spatialNavigationSearch(dir, {\n                        candidates,\n                        container,\n                    });\n                    if (bestNextTarget) {\n                        return findCandidate ? candidates : bestNextTarget;\n                    }\n                }\n            }\n\n            if (canScroll(container, dir)) {\n                bestNextTarget = eventTarget;\n                return bestNextTarget;\n            }\n        }\n\n        return {\n            isContainer,\n            isScrollContainer,\n            isVisibleInScroller,\n            findCandidates: findTarget.bind(null, true),\n            findNextTarget: findTarget.bind(null, false),\n            getDistanceFromTarget: (element, candidateElement, dir) => {\n                if ((isContainer(element) || element.nodeName === 'BODY') && !(element.nodeName === 'INPUT')) {\n                    if (getSpatialNavigationCandidates(element).includes(candidateElement)) {\n                        return getInnerDistance(\n                            getBoundingClientRect(element),\n                            getBoundingClientRect(candidateElement),\n                            dir,\n                        );\n                    }\n                }\n                return getDistance(getBoundingClientRect(element), getBoundingClientRect(candidateElement), dir);\n            },\n        };\n    }\n\n    /**\n     * Makes to use the experimental APIs.\n     * @function enableExperimentalAPIs\n     * @param option {boolean} - If it is true, the experimental APIs can be used or it cannot.\n     */\n    function enableExperimentalAPIs(option) {\n        const currentKeyMode = window.__spatialNavigation__ && window.__spatialNavigation__.keyMode;\n        window.__spatialNavigation__ =\n            option === false ? getInitialAPIs() : Object.assign(getInitialAPIs(), getExperimentalAPI());\n        window.__spatialNavigation__.keyMode = currentKeyMode;\n        Object.seal(window.__spatialNavigation__);\n    }\n\n    /**\n     * Set the environment for using the spatial navigation polyfill.\n     * @function getInitialAPIs\n     */\n    function getInitialAPIs() {\n        return {\n            enableExperimentalAPIs,\n            get keyMode() {\n                return this._keymode ? this._keymode : 'ARROW';\n            },\n            set keyMode(mode) {\n                this._keymode = ['SHIFTARROW', 'ARROW', 'NONE'].includes(mode) ? mode : 'ARROW';\n            },\n            setStartingPoint: function (x, y) {\n                startingPoint = x && y ? { x, y } : null;\n            },\n        };\n    }\n\n    initiateSpatialNavigation();\n    enableExperimentalAPIs(true);\n\n    window.addEventListener('load', () => {\n        spatialNavigationHandler();\n    });\n})();\n\nlet currentSpatialNavigationContainer = null;\n\ndocument.addEventListener('navbeforefocus', (e) => {\n    if (e.target instanceof HTMLElement) {\n        e.preventDefault();\n\n        let { target } = e;\n\n        // focus on the first element when changing spatnav container\n        // const nextSpatialNavigationContainer = target.getSpatialNavigationContainer();\n        //\n        // if (currentSpatialNavigationContainer && currentSpatialNavigationContainer !== nextSpatialNavigationContainer) {\n        //     if (nextSpatialNavigationContainer.__lastElementFocused) {\n        //         target = nextSpatialNavigationContainer.__lastElementFocused;\n        //     } else {\n        //         [target] = nextSpatialNavigationContainer.focusableAreas({ mode: 'all' });\n        //     }\n        //     // target.focus();\n        // }\n        //\n        // currentSpatialNavigationContainer = nextSpatialNavigationContainer;\n        // currentSpatialNavigationContainer.__lastElementFocused = target;\n\n        requestAnimationFrame(async () => {\n            target.scrollIntoView({ behavior: 'smooth', block: 'center', inline: 'nearest' });\n            // if (isElementInViewport(target)) {\n            //     target.focus();\n            // }\n\n            await new Promise((resolve) => {\n                const intersectionObserver = new IntersectionObserver(\n                    ([entry]) => {\n                        if (entry.isIntersecting) {\n                            resolve();\n                        }\n                    },\n                    {\n                        threshold: 1,\n                    },\n                );\n                intersectionObserver.observe(target);\n            });\n\n            target.focus();\n        });\n    }\n});\n\ndocument.addEventListener('keyup', (event) => {\n    if (event.keyCode === 13) {\n        event.preventDefault();\n        if (document.activeElement && !(document.activeElement instanceof HTMLButtonElement)) {\n            document.activeElement.click();\n        }\n    }\n});\n\n// console.log('1');\n\n// let isIntersecting = false;\n// const intersectionObserver = new IntersectionObserver(([entry]) => {\n// console.log('2');\n//   isIntersecting = entry.isIntersecting;\n// }, {\n//   threshold: 1\n// });\n// intersectionObserver.observe($0)\n// console.log('3');\n\n// start observing\n// intersectionObserver.observe());\n\nfunction isElementInViewport(el) {\n    const rect = el.getBoundingClientRect();\n    return (\n        rect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n    );\n}\n","export enum ROUTES {\n    CATALOG = '/catalog',\n    CART = '/cart',\n    STATUS = '/status',\n    ADDRESS_SIMPLE = '/address-simple',\n    PROMO = '/promo',\n    NO_AREA = '/no-area',\n    SCREEN_SAVER = '/screen-saver',\n}\n","import { LocationState } from 'history';\nimport { Dispatch } from 'redux';\nimport { RouterState, RouterAction } from 'connected-react-router';\nimport { CatalogListItemProps } from 'pages/Catalog/ListItem/CatalogListItem';\n\nimport * as actions from '../actions';\n\nimport { ProductItem } from './products';\nimport { User } from './user';\n\nexport const initialState = {\n    cart: {\n        itemsMap: {} as Record<string, CartItem>,\n        order: [] as string[],\n        totalCount: 0,\n        // discount value?\n        totalPrice: 0, // в копейках\n        orderId: '',\n    },\n    products: {\n        itemsMap: {} as Record<string, ProductItem>,\n    },\n    // здесь важно поставить undefined, подробности смотри в редюсере роутера\n    router: (undefined as unknown) as RouterState<LocationState>,\n    user: {\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        customer_name: '',\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        phone_num: '',\n        address: {\n            // eslint-disable-next-line @typescript-eslint/camelcase\n            address_string: '',\n            apartment: 0,\n            building: 0,\n            city: '',\n            confirmed: false,\n            // eslint-disable-next-line @typescript-eslint/camelcase\n            door_code: 0,\n            entrance: 0,\n            floor: 0,\n            house: 0,\n            latitude: 0,\n            longitude: 0,\n            street: '',\n        },\n    } as User,\n    catalogPage: {\n        selectedItemId: '',\n        order: [] as string[],\n        itemsMap: {} as Record<string, CatalogListItemProps>,\n    },\n};\n\nexport type AppState = typeof initialState;\n\nexport type ActionTypes = typeof actions;\nexport type BaseAction = ReturnType<ActionTypes[keyof ActionTypes]>;\nexport type AppAction = BaseAction | RouterAction<LocationState>;\nexport type AppDispatch = Dispatch<AppAction>;\nexport type Reducer<T = AppAction> = (state: AppState, action: T) => void;\n\nexport interface CartItem {\n    itemId: string;\n    count: number;\n}\n","import { History, LocationState } from 'history';\nimport { connectRouter, LocationChangeAction } from 'connected-react-router';\n\nimport { Reducer } from '../constants';\n\nexport const getRouter = (history: History): Reducer => {\n    const changeRouter = connectRouter<LocationState>(history);\n\n    return (state, action) => {\n        /**\n         * @see https://github.com/supasate/connected-react-router/blob/master/src/reducer.js#L58\n         * Здесь костылим тип экшена, потому что в библиотеке\n         * криво написаны тайпинги. На самом деле, метод принимает любые экшены,\n         * но работает только LocationChangeAction (там стоит ифак на него).\n         *\n         * Проблема в том, что если не вызывать этот метод с другими экшенами,\n         * то по экшене @@INIT этот метод не вернет изначальное состояние router.\n         */\n        state.router = changeRouter(state.router, action as LocationChangeAction);\n    };\n};\n","import { Reducer, AppState, initialState } from '../constants';\n\n// TODO: запилить проверку остатков при подсчете общего количества\n// https://sbtatlas.sigma.sbrf.ru/jira/browse/FOODTECHUI-40\nconst getTotalCount = (cart: AppState['cart']) =>\n    Object.values(cart.itemsMap).reduce((acc, item) => {\n        acc += item.count;\n\n        return acc;\n    }, 0);\n\n// TODO: запилить проверку остатков при подсчете общей стоимости\n// https://sbtatlas.sigma.sbrf.ru/jira/browse/FOODTECHUI-40\nconst getTotalPrice = (cart: AppState['cart'], products: AppState['products']) =>\n    cart.order.reduce((acc, itemId) => {\n        const productItem = products.itemsMap[itemId];\n        const cartItem = cart.itemsMap[itemId];\n\n        acc += cartItem.count * Number(productItem.price);\n\n        return acc;\n    }, 0);\n\nexport const cart: Reducer = (store, action) => {\n    const { cart, products } = store;\n\n    switch (action.type) {\n        case 'ADD_ITEM': {\n            const { count: countString, item: itemId } = action.payload;\n            const count = Number(countString);\n            const productItem = products.itemsMap[itemId];\n            const maxCount = Number(productItem.quantity_left);\n\n            if (!productItem) {\n                return;\n            }\n\n            const cartItem = cart.itemsMap[itemId];\n\n            if (cartItem) {\n                cartItem.count = Math.min(maxCount, cartItem.count + count);\n            } else if (count <= maxCount) {\n                cart.itemsMap[itemId] = {\n                    itemId,\n                    count,\n                };\n\n                cart.order.push(itemId);\n            }\n\n            cart.totalCount = getTotalCount(cart);\n            cart.totalPrice = getTotalPrice(cart, products);\n\n            break;\n        }\n\n        case 'REMOVE_ITEM': {\n            const { item: itemId, count: countString, shouldRemoveMention } = action.payload;\n            const count = Number(countString);\n\n            const cartItem = cart.itemsMap[itemId];\n            const productItem = products.itemsMap[itemId];\n\n            if (!cartItem || !productItem) {\n                return;\n            }\n\n            cartItem.count = Math.max(0, cartItem.count - count);\n\n            cart.totalCount = getTotalCount(cart);\n            cart.totalPrice = getTotalPrice(cart, products);\n\n            if (!cartItem.count && shouldRemoveMention) {\n                delete cart.itemsMap[itemId];\n                cart.order = cart.order.filter((cartItemId) => cartItemId !== itemId);\n            }\n\n            break;\n        }\n\n        case 'REMOVE_ALL': {\n            store.cart = initialState.cart;\n\n            break;\n        }\n\n        case 'GO_TO_CATALOG': {\n            if (action.payload.clear) {\n                store.cart = initialState.cart;\n            }\n\n            break;\n        }\n\n        case 'VALIDATION_OK': {\n            store.cart.orderId = action.payload.order_id;\n\n            break;\n        }\n\n        default:\n            break;\n    }\n};\n","import { Reducer } from '../constants';\n\nexport const products: Reducer = (state, action) => {\n    switch (action.type) {\n        case 'SHOW_ITEMS': {\n            state.products.itemsMap = action.payload.stock;\n            break;\n        }\n\n        default:\n            break;\n    }\n};\n","import { Reducer } from '../constants';\n\nexport const user: Reducer = (state, action) => {\n    switch (action.type) {\n        case 'UPDATE_USER': {\n            state.user = { ...state.user, ...action.payload };\n\n            break;\n        }\n\n        case 'GO_TO_CATALOG': {\n            state.user = action.payload.address;\n\n            break;\n        }\n\n        default:\n            break;\n    }\n};\n","import { CatalogListItemProps } from 'pages/Catalog/ListItem/CatalogListItem';\n\nimport { AppState, Reducer } from '../constants';\n\nconst preparePrice = (price: string) => Math.ceil(Number(price) / 100);\n\nconst prepareBadge = ({ cart, products }: AppState, itemId: string): CatalogListItemProps['badge'] => {\n    const cartItem = cart.itemsMap[itemId];\n    const productItem = products.itemsMap[itemId];\n    const quantityLeft = Number(productItem.quantity_left);\n\n    if (quantityLeft === 0) {\n        return { type: 'sold-out' };\n    }\n\n    if (cartItem && cartItem.count === quantityLeft) {\n        return { type: 'few-left' };\n    }\n\n    return undefined;\n};\n\nconst calculateCount = ({ cart, catalogPage }: AppState, itemId: string) => {\n    const cartItem = cart.itemsMap[itemId];\n\n    return cartItem ? cartItem.count : 0;\n};\n\nconst calculateButtonDisabled = ({ cart, products }: AppState, itemId: string) => {\n    const productItem = products.itemsMap[itemId];\n    const cartItem = cart.itemsMap[itemId];\n    const quantityLeft = Number(productItem.quantity_left);\n\n    return cartItem && cartItem.count === quantityLeft;\n};\n\nconst prepareItem = (state: AppState, itemId: string, index: number) => {\n    const { products, cart, catalogPage } = state;\n    const productItem = products.itemsMap[itemId];\n    const cartItem = cart.itemsMap[itemId];\n\n    return {\n        shouldFocusOnMount: catalogPage.selectedItemId === itemId,\n        imageUrl: productItem.images_urls[0],\n        name: productItem.name,\n        guid: itemId,\n        price: preparePrice(productItem.price),\n        index: index + 1,\n        quantityLeft: Number(productItem.quantity_left),\n        count: cartItem && cartItem.count,\n        badge: prepareBadge(state, itemId),\n        buttonDisabled: calculateButtonDisabled(state, itemId),\n        disabled: productItem.quantity_left === '0',\n    };\n};\n\nconst prepareCatalogItemsMap = (state: AppState) => {\n    const { products } = state;\n\n    return Object.keys(products.itemsMap).reduce((acc, itemId, index) => {\n        acc[itemId] = prepareItem(state, itemId, index);\n\n        return acc;\n    }, {} as AppState['catalogPage']['itemsMap']);\n};\n\nexport const catalogPage: Reducer = (state, action) => {\n    const { products, catalogPage } = state;\n\n    switch (action.type) {\n        case 'SHOW_ITEMS': {\n            catalogPage.order = Object.keys(products.itemsMap);\n\n            const [firstItemId] = catalogPage.order;\n            catalogPage.selectedItemId = firstItemId;\n\n            catalogPage.itemsMap = prepareCatalogItemsMap(state);\n\n            break;\n        }\n\n        case 'ADD_ITEM': {\n            const { item: itemId } = action.payload;\n            const catalogItem = catalogPage.itemsMap[itemId];\n\n            catalogItem.count = calculateCount(state, itemId);\n            catalogItem.buttonDisabled = calculateButtonDisabled(state, itemId);\n            catalogItem.badge = prepareBadge(state, itemId);\n\n            break;\n        }\n\n        case 'REMOVE_ITEM': {\n            const { item: itemId } = action.payload;\n            const catalogItem = catalogPage.itemsMap[itemId];\n\n            catalogItem.count = calculateCount(state, itemId);\n            catalogItem.buttonDisabled = calculateButtonDisabled(state, itemId);\n            catalogItem.badge = prepareBadge(state, itemId);\n\n            break;\n        }\n\n        case 'REMOVE_ALL': {\n            catalogPage.itemsMap = prepareCatalogItemsMap(state);\n\n            break;\n        }\n\n        case 'catalog/SELECT_ITEM': {\n            state.catalogPage.selectedItemId = action.payload;\n\n            break;\n        }\n\n        default:\n            break;\n    }\n};\n","export function createAction<T extends string, P>(type: T, payload: P) {\n    return {\n        type,\n        payload,\n    };\n}\n\nexport function createEmptyAction<T extends string>(type: T) {\n    return {\n        type,\n    };\n}\n","import { createAction, createEmptyAction } from 'tools/action-creator';\n\nimport {\n    ShowItemsCommandPayload,\n    AddItemCommandPayload,\n    RemoveItemCommandPayload,\n    RemoveAllCommandPayload,\n    GoToCatalogCommandPayload,\n    GoToWaitCommandPayload,\n    AskForAgainStatusOrderCommandPayload,\n    ValidationOkCommandPayload,\n} from '../constants/native';\n\nexport const showItems = (payload: ShowItemsCommandPayload) => createAction('SHOW_ITEMS', payload);\n\nexport const addItem = (payload: AddItemCommandPayload) => createAction('ADD_ITEM', payload);\n\ninterface RemoveItemCommandPayloadExtended extends RemoveItemCommandPayload {\n    shouldRemoveMention?: boolean;\n}\nexport const removeItem = (payload: RemoveItemCommandPayloadExtended) => createAction('REMOVE_ITEM', payload);\n\nexport const removeAll = (payload: RemoveAllCommandPayload) => createEmptyAction('REMOVE_ALL');\n\nexport const goToCatalog = (payload: GoToCatalogCommandPayload) => createAction('GO_TO_CATALOG', payload);\n\nexport const goToWait = (payload: GoToWaitCommandPayload) => createEmptyAction('GO_TO_WAIT');\n\nexport const validationOk = (payload: ValidationOkCommandPayload) => createAction('VALIDATION_OK', payload);\n\nexport const askAgainForOrderStatus = (payload: AskForAgainStatusOrderCommandPayload) =>\n    createEmptyAction('ASK_AGAIN_FOR_ORDER_STATUS');\n","import { createEmptyAction } from 'tools/action-creator';\n\nexport const askForStock = () => createEmptyAction('ASK_FOR_STOCK');\n\nexport const makePurchase = () => createEmptyAction('MAKE_PURCHASE');\n\nexport const goToCart = () => createEmptyAction('GO_TO_CART');\n\nexport const askForOrderStatus = () => createEmptyAction('ASK_FOR_ORDER_STATUS');\n","/* eslint-disable no-underscore-dangle */\n/* eslint-disable @typescript-eslint/camelcase */\nimport { createStore as createReduxStore, Middleware, applyMiddleware, compose, StoreEnhancer, AnyAction } from 'redux';\nimport { routerMiddleware, push } from 'connected-react-router';\nimport { createHashHistory } from 'history';\n\nimport { USER_MOCK } from '../mocks';\n\nimport { AssistantSdkCommand } from './constants/native';\nimport { AssistantSdkServerAction } from './constants/server';\nimport { ROUTES } from './constants/router';\nimport { AppState, AppAction, AppDispatch } from './constants';\nimport { getRootReducer } from './reducers';\nimport * as actions from './actions';\n\nconst serverActionMiddleware: Middleware<{}, AppState, AppDispatch> = (store) => (next) => (action: AppAction) => {\n    switch (action.type) {\n        case 'ASK_FOR_STOCK':\n        case 'ASK_FOR_ORDER_STATUS':\n        case 'MAKE_PURCHASE':\n        case 'GO_TO_CART':\n            window.AssistantClient.sendData({ action_id: action.type });\n            break;\n        default:\n            break;\n    }\n\n    return next(action);\n};\n\nexport const history = createHashHistory();\nconst enhancers: StoreEnhancer[] = [];\nconst middlewares: Middleware[] = [routerMiddleware(history), serverActionMiddleware];\n\nif (process.env.NODE_ENV !== 'production') {\n    if (typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION__) {\n        enhancers.push(window.__REDUX_DEVTOOLS_EXTENSION__());\n    }\n}\n\n// TODO: научиться инитить приложение на основе рекавери стейта\n// https://sbtatlas.sigma.sbrf.ru/jira/browse/FOODTECHUI-42\nexport const store = createReduxStore<AppState, AppAction, {}, {}>(\n    getRootReducer(history),\n    compose(applyMiddleware(...middlewares), ...enhancers),\n);\nconst { dispatch } = store;\n\nexport const dispatchToReduxStore = ({ smart_app_data }: AssistantSdkCommand) => {\n    switch (smart_app_data.command) {\n        case 'SHOW_ITEMS':\n            dispatch(actions.showItems(smart_app_data));\n            break;\n        case 'ADD_ITEM':\n            dispatch(actions.addItem(smart_app_data));\n            break;\n        case 'REMOVE_ALL':\n            dispatch(actions.removeAll(smart_app_data));\n            break;\n        case 'REMOVE_ITEM':\n            dispatch(actions.removeItem({ ...smart_app_data, shouldRemoveMention: true }));\n            break;\n        case 'GO_TO_CATALOG':\n            dispatch(actions.goToCatalog(smart_app_data));\n\n            // чтобы при перезагрузке страницы постоянно не переходить в каталог\n            if (process.env.REACT_APP_ENVIRONMENT !== 'development') {\n                dispatch(push(ROUTES.CATALOG));\n            }\n            break;\n        case 'GO_TO_NO_AREA': {\n            dispatch(push(ROUTES.NO_AREA));\n            break;\n        }\n        case 'GO_TO_VALIDATION': {\n            dispatch(push(ROUTES.CART));\n            break;\n        }\n        case 'VALIDATION_OK': {\n            dispatch(actions.validationOk(smart_app_data));\n            dispatch(push(ROUTES.STATUS));\n            break;\n        }\n        case 'GO_TO_WAIT': {\n            dispatch(actions.goToWait(smart_app_data));\n            dispatch(actions.askForOrderStatus());\n            break;\n        }\n        case 'ASK_AGAIN_FOR_ORDER_STATUS': {\n            dispatch(actions.askAgainForOrderStatus(smart_app_data));\n            setTimeout(() => dispatch(actions.askForOrderStatus()), 500);\n            break;\n        }\n        default:\n            break;\n    }\n};\n\nif (process.env.REACT_APP_ENVIRONMENT !== 'production' && module.hot) {\n    module.hot.accept('./reducers', () => {\n        // eslint-disable-next-line\n        const { getRootReducer } = require('./reducers');\n        const rootReducer = getRootReducer(history);\n\n        store.replaceReducer(rootReducer);\n    });\n}\n\nconst castFromStore = (): AppStateInterface => {\n    const { cart, user, router } = store.getState();\n\n    return {\n        currentScreen: router.location.pathname.substring(1),\n        foodtech: {\n            products: Object.keys(cart.itemsMap).map((itemId) => ({\n                id: itemId,\n                quantity: cart.itemsMap[itemId].count,\n            })),\n            totalPrice: {\n                value: cart.totalPrice,\n                discountValue: cart.totalPrice,\n            },\n            address: user.address,\n        },\n    };\n};\n\nwindow.AssistantClient = window.AssistantClient || {};\n\nif (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n    // eslint-disable-next-line no-underscore-dangle\n    window.__inbox = window.__inbox || [];\n    // eslint-disable-next-line no-underscore-dangle\n    window.__outbox = window.__outbox || [];\n}\n\n/**\n * Assistand SDK API implementation:\n */\nwindow.AssistantClient.onStart = function onStart() {\n    if (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n        console.log('invoke onStart callback');\n    }\n};\n\nwindow.AssistantClient.onData = function onData(command: AssistantSdkCommand) {\n    if (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n        // eslint-disable-next-line no-underscore-dangle\n        window.__inbox.push(command);\n    }\n\n    if (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n        console.log('server command', command);\n    }\n\n    dispatchToReduxStore(command);\n};\n\nwindow.AssistantClient.sendData = (message: AssistantSdkServerAction) => {\n    if (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n        // eslint-disable-next-line no-underscore-dangle\n        window.__outbox.push({ message, store: castFromStore() });\n    }\n\n    if (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n        console.log('sendData', message);\n    }\n\n    if (window.AssistantHost && typeof window.AssistantHost.sendData === 'function') {\n        window.AssistantHost.sendData(JSON.stringify(message), null);\n    }\n};\n\nwindow.AssistantClient.onRequestState = () => {\n    const state = castFromStore();\n    const stateString = JSON.stringify(state);\n\n    if (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n        console.log('invoke request state callback', stateString);\n    }\n\n    if (window.AssistantHost && typeof window.AssistantHost.updateState === 'function') {\n        window.AssistantHost.updateState(stateString);\n    }\n\n    // return stateString;\n};\n\nif (window.AssistantHost && typeof window.AssistantHost.ready === 'function') {\n    if (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n        console.log('call ready native method');\n    }\n\n    window.AssistantHost.ready();\n}\n\n// эмуляция первой команды от бэка\nif (process.env.REACT_APP_ENVIRONMENT === 'development') {\n    setTimeout(() => {\n        window.AssistantClient.onData({\n            type: 'smart_app_data',\n            // eslint-disable-next-line @typescript-eslint/camelcase\n            smart_app_data: {\n                command: 'GO_TO_CATALOG',\n                // eslint-disable-next-line @typescript-eslint/camelcase\n                address: USER_MOCK,\n            },\n        });\n    }, 100);\n}\n","import { produce } from 'immer';\nimport { History } from 'history';\n\nimport { Reducer, initialState, AppAction } from '../constants';\n\nimport { getRouter } from './router';\nimport { cart } from './cart';\nimport { products } from './products';\nimport { user } from './user';\nimport { catalogPage } from './catalogPage';\n\nexport const getRootReducer = (history: History) => {\n    const router = getRouter(history);\n\n    return (state = initialState, action: AppAction) =>\n        produce(state, (draft) => {\n            [\n                // уровень данных\n                products,\n                user,\n\n                // уровень бизнес логики\n                router,\n                cart,\n\n                // уровень пропсов для для отрисовки компонентов\n                catalogPage,\n            ].forEach((reducer: Reducer) => reducer(draft, action));\n        });\n};\n","import React from 'react';\n\nexport function useFocusOnMount<T>() {\n    const ref = React.useRef<T>(null);\n\n    React.useLayoutEffect(() => {\n        if (ref.current instanceof HTMLElement) {\n            ref.current.focus();\n        }\n    }, []);\n\n    return ref;\n}\n","import React from 'react';\n\nexport const useInterval = (callback: (...args: any[]) => void, timeout: number) =>\n    React.useEffect(() => {\n        const intervalId = setInterval(callback, timeout);\n\n        return () => clearInterval(intervalId);\n    });\n","import { useDispatch as useReduxDispatch } from 'react-redux';\nimport { AppDispatch } from 'store/constants';\n\nexport const useDispatch = () => useReduxDispatch<AppDispatch>();\n","import { useSelector as useReduxSelector } from 'react-redux';\nimport { AppState } from 'store/constants';\n\nexport function useSelector<T = unknown>(mapStateToProps: (state: AppState) => T) {\n    return useReduxSelector<AppState, T>(mapStateToProps);\n}\n","import packageJSON from '../../package.json';\n\nconst PREFIX = packageJSON.cssPrefix;\n\ninterface ConfitionsInterface<T> {\n    T?: boolean;\n}\n\nexport default (blockName: string, delimeter = '__', modDelimeter = '_'): BemRenderer => {\n    function renderer(...elements: string[]): string {\n        if (!elements.length) {\n            return PREFIX + blockName;\n        }\n\n        return elements.map((element) => PREFIX + blockName + delimeter + element).join(' ');\n    }\n\n    renderer.elem = (element: string, mod: string, modVal?: string): string =>\n        PREFIX + blockName + delimeter + element + modDelimeter + mod + (modVal ? modDelimeter + modVal : '');\n\n    renderer.mod = (mod: string, modVal?: string): string =>\n        PREFIX + blockName + modDelimeter + mod + (modVal ? modDelimeter + modVal : '');\n\n    renderer.modify = (conditions: ConfitionsInterface<string> = {}, elem?: string): string => {\n        const elemToModify = elem ? blockName + delimeter + elem : blockName;\n\n        return [\n            PREFIX,\n            elemToModify,\n            ' ',\n            Object.entries(conditions)\n                .map(([mod, predicate]) => Boolean(predicate) && PREFIX + elemToModify + modDelimeter + mod)\n                .filter(Boolean)\n                .join(' '),\n        ].join('');\n    };\n\n    renderer.all = (...values: string[]): string => values.join(' ');\n\n    return renderer;\n};\n","import React from 'react';\nimport Bem from 'tools/bem';\n\nexport default (Component: React.FC<any>, componentName?: string) => (props?: any, context?: any) => (\n    <Component {...props} context={context} bem={Bem(componentName || Component.name)} />\n);\n","import React from 'react';\nimport withBem from 'hoc/withBem';\n\nimport './Header.scss';\n\ninterface HeaderProps extends BemProps {\n    className?: string;\n    title: string;\n}\n\nconst Component: React.FC<HeaderProps> = ({ bem, title, children, className }) => (\n    <div className={bem.all(bem(), className || '')}>\n        {window.history.length ? <span className={bem('back')} /> : ''}\n        <div className={bem('section')}>\n            <div className={bem('logo')} />\n            <div className={bem('title')}>{title}</div>\n        </div>\n        <div className={bem('section')}>{children}</div>\n    </div>\n);\n\nexport const Header = withBem(Component, 'Header');\n","export const splitByThousands = (data: string) =>\n    data.split('').reduceRight((acc, item, index, arr) => {\n        const indexFromEnd = index - (arr.length - 1);\n\n        if (indexFromEnd % 3 === 0) {\n            acc = ` ${acc}`;\n        }\n\n        return item + acc;\n    }, '');\n\nexport const throttle = (callback: any, timeout: number) => {\n    let timeoutId = 0;\n\n    return () => {\n        if (timeoutId) {\n            return;\n        }\n\n        timeoutId = setTimeout(() => {\n            timeoutId = 0;\n            callback();\n        }, timeout);\n    };\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'hooks';\nimport { ROUTES } from 'store/constants/router';\nimport { push } from 'connected-react-router';\nimport { throttle } from 'tools';\nimport withBem from 'hoc/withBem';\n\nimport './HeaderAddress.scss';\n\ntype HeaderAddressProps = BemProps;\n\nconst Component: React.FC<HeaderAddressProps> = ({ bem }) => {\n    const dispatch = useDispatch();\n    const {\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        address: { address_string },\n    } = useSelector(({ user }) => user);\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    const userAddress = address_string;\n\n    return (\n        <div className={bem()} tabIndex={0} onClick={throttle(() => dispatch(push(ROUTES.ADDRESS_SIMPLE)), 200)}>\n            <div className={bem('icon')} />\n            <div className={bem('text')}>{userAddress}</div>\n        </div>\n    );\n};\n\nexport const HeaderAddress = withBem(Component, 'HeaderAddress');\n","import React from 'react';\nimport { push } from 'connected-react-router';\nimport styled from 'styled-components';\nimport { goToCart } from 'store/actions';\nimport { AppState } from 'store/constants';\nimport { ROUTES } from 'store/constants/router';\nimport { splitByThousands, throttle } from 'tools';\nimport { useDispatch, useSelector } from 'hooks';\n\nimport cartIcon from './cart.svg';\n\nconst StyledHeaderCart = styled.div`\n    display: flex;\n    align-items: center;\n    margin-left: 8px;\n    border-radius: 40px;\n    padding: 20px 40px;\n    height: 80px;\n    box-sizing: border-box;\n    transition: 0.2s ease-in-out;\n    will-change: background-color;\n\n    &:focus {\n        background: #08a652;\n    }\n`;\n\nconst StyledIcon = styled.div`\n    position: relative;\n    width: 40px;\n    height: 36px;\n    background-image: url('${cartIcon}');\n    background-repeat: no-repeat;\n    background-size: contain;\n`;\n\nconst StyledBadge = styled.span`\n    position: absolute;\n    top: -14px;\n    right: -12px;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    width: 32px;\n    height: 32px;\n    line-height: 28px;\n\n    font-size: 20px;\n\n    box-sizing: border-box;\n\n    color: #fff;\n    border-radius: 50%;\n    background: #08a652;\n\n    transition: 0.2s ease-in-out;\n    will-change: background-color;\n\n    ${StyledHeaderCart}:focus & {\n        color: #08a652;\n\n        background: #fff;\n        border: 2px solid #08a652;\n    }\n`;\n\nconst StyledPrice = styled.div`\n    height: 48px;\n    margin-left: 16px;\n    font-size: 32px;\n    font-weight: 600;\n    line-height: 50px;\n    color: #fff;\n`;\n\n// TODO: запилить нормальные пропсы в стейте для хедера\n// https://sbtatlas.sigma.sbrf.ru/jira/browse/FOODTECHUI-41\nexport const HeaderCart: React.FC = () => {\n    const dispatch = useDispatch();\n    const { totalCount, totalPrice } = useSelector(({ cart }: AppState) => cart);\n\n    return (\n        <StyledHeaderCart\n            tabIndex={0}\n            onClick={throttle(() => {\n                dispatch(push(ROUTES.CART));\n                dispatch(goToCart());\n            }, 200)}\n        >\n            <StyledIcon>{totalCount > 0 && <StyledBadge>{totalCount}</StyledBadge>}</StyledIcon>\n            <StyledPrice>{splitByThousands(String(totalPrice / 100))} ₽</StyledPrice>\n        </StyledHeaderCart>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst contentMap = {\n    'sold-out': 'Раскупили',\n    'few-left': 'Осталось мало',\n    sale: 'Скидка',\n};\n\nconst backgroundMap = {\n    'sold-out': '#080808',\n    'few-left': '#F6650A',\n    sale: '#08A652',\n};\n\nconst StyledBadge = styled.div`\n    padding: 8px 16px;\n    font-weight: 500;\n    font-size: 24px;\n    line-height: 32px;\n    color: #fff;\n    border-radius: 16px;\n    background-color: ${(props: BadgeProps) => backgroundMap[props.type]};\n`;\n\nexport interface BadgeProps extends React.HTMLAttributes<HTMLDivElement> {\n    type: 'sold-out' | 'few-left' | 'sale';\n}\n\nexport const Badge: React.FC<BadgeProps> = ({ type, children, ...props }) => (\n    <StyledBadge type={type} {...props}>\n        {contentMap[type]} {children}\n    </StyledBadge>\n);\n","/* eslint-disable @typescript-eslint/camelcase */\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { addItem, selectItem } from 'store/actions';\nimport { useDispatch, useFocusOnMount } from 'hooks';\nimport { throttle } from 'tools';\nimport { Badge, BadgeProps } from 'components/Badge/Badge';\nimport plusIcon from 'assets/icons/plus.svg';\n\nconst StyledDescription = styled.div`\n    position: relative;\n    padding: 32px 32px 36px;\n    box-sizing: border-box;\n    height: 200px;\n    background: rgba(255, 255, 255, 0.05);\n`;\n\nconst StyledName = styled.div`\n    height: 80px;\n    line-height: 40px;\n    font-size: 32px;\n    font-weight: 500;\n    color: #fff;\n\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 2;\n    overflow: hidden;\n`;\n\nconst StyledPriceContainer = styled.div`\n    margin-top: 12px;\n    display: flex;\n`;\n\nconst StyledPrice = styled.div`\n    height: 40px;\n    line-height: 40px;\n    font-size: 32px;\n    font-weight: 600;\n    color: #fff;\n`;\n\nconst StyledCount = styled.div`\n    height: 40px;\n    line-height: 40px;\n    margin-left: 8px;\n    font-size: 32px;\n    font-weight: 600;\n    color: #08a652;\n`;\n\ninterface StyledThumbProps {\n    imageUrl: string;\n}\nconst StyledThumb = styled.div<StyledThumbProps>`\n    display: block;\n    height: 392px;\n    width: 392px;\n\n    background-image: url('${(props) => props.imageUrl}');\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n`;\n\nconst StyledIndexBadge = styled.div`\n    position: absolute;\n    left: 16px;\n    top: 16px;\n\n    height: 64px;\n    width: 64px;\n    text-align: center;\n    line-height: 64px;\n    font-size: 28px;\n    font-weight: 600;\n    color: rgba(0, 0, 0, 0.55);\n\n    background: #eaeaec;\n    border-radius: 40px;\n`;\n\ninterface StyledButtonProps {\n    disabled?: boolean;\n}\nconst StyledButton = styled.div<StyledButtonProps>`\n    position: absolute;\n    top: -52px;\n    right: 24px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 72px;\n    height: 72px;\n    opacity: 0;\n    border-radius: 50%;\n    background: ${({ disabled }) => (disabled ? '#3b4b5e' : '#08a652')};\n    transition: opacity 0.2s ease-in-out;\n\n    &::before {\n        content: '';\n\n        display: block;\n\n        height: 32px;\n        width: 32px;\n\n        opacity: ${({ disabled }) => (disabled ? '0.5' : '1')};\n\n        transition: background 0.2s ease-in-out, opacity 0.2s ease-in-out;\n\n        background-image: url('${plusIcon}');\n        background-repeat: no-repeat;\n        background-size: contain;\n        background-position: center;\n    }\n`;\n\nconst CatalogListItemBadge = styled(Badge)`\n    position: absolute;\n    top: 16px;\n    right: 16px;\n    z-index: 1;\n`;\n\ninterface StyledCatalogListItemProps {\n    disabled?: boolean;\n}\nconst StyledCatalogListItem = styled.div<StyledCatalogListItemProps>`\n    position: relative;\n    width: 392px;\n    height: 592px;\n\n    margin-right: 32px;\n\n    display: flex;\n    flex-direction: column;\n\n    overflow: hidden;\n    border-radius: 24px;\n    box-shadow: 0 16px 48px rgba(0, 0, 0, 0.1);\n\n    transition: 0.4s ease-in-out;\n    will-change: transform;\n    will-change: background-color;\n\n    &:focus {\n        transform: scale(1.08);\n\n        background-color: rgba(255, 255, 255, 0.1);\n\n        ${StyledButton} {\n            opacity: 1;\n        }\n    }\n\n    ${({ disabled }) =>\n        disabled &&\n        css`\n            ${StyledDescription},\n            ${StyledThumb} {\n                opacity: 0.5;\n            }\n        `}\n`;\n\nexport interface CatalogListItemProps extends StyledCatalogListItemProps {\n    shouldFocusOnMount: boolean;\n    imageUrl: string;\n    index: number;\n    count: number;\n    name: string;\n    guid: string;\n    price: number;\n    quantityLeft: number;\n    badge?: BadgeProps;\n    buttonDisabled?: boolean;\n}\n\nexport const CatalogListItem: React.FC<CatalogListItemProps> = ({\n    shouldFocusOnMount,\n    imageUrl,\n    count,\n    name,\n    guid,\n    price,\n    index,\n    buttonDisabled,\n    badge,\n    disabled,\n}) => {\n    const dispatch = useDispatch();\n    const memoizedThrottledOnClick = React.useCallback(\n        throttle(() => dispatch(addItem({ item: guid, count: '1' })), 150),\n        [dispatch, guid],\n    );\n    const memoizedOnFocus = React.useCallback(() => dispatch(selectItem(guid)), [dispatch, guid]);\n    const onMountRef = useFocusOnMount<HTMLDivElement>();\n\n    return (\n        <StyledCatalogListItem\n            ref={shouldFocusOnMount ? onMountRef : undefined}\n            tabIndex={disabled ? -1 : 0}\n            disabled={disabled}\n            onFocus={memoizedOnFocus}\n            onClick={memoizedThrottledOnClick}\n        >\n            {badge ? <CatalogListItemBadge {...badge} /> : ''}\n            <StyledIndexBadge>{index}</StyledIndexBadge>\n            <StyledThumb imageUrl={imageUrl} />\n            <StyledDescription>\n                <StyledButton disabled={buttonDisabled} />\n                <StyledName>{name}</StyledName>\n                <StyledPriceContainer>\n                    <StyledPrice>{price} ₽</StyledPrice>\n                    {count ? <StyledCount>×{count}</StyledCount> : ''}\n                </StyledPriceContainer>\n            </StyledDescription>\n        </StyledCatalogListItem>\n    );\n};\n","import { createAction } from 'tools/action-creator';\n\nexport const selectItem = (payload: string) => createAction('catalog/SELECT_ITEM', payload);\n","import React from 'react';\nimport withBem from 'hoc/withBem';\nimport styled from 'styled-components';\nimport { useSelector } from 'hooks';\n\nimport { CatalogListItem } from '../ListItem/CatalogListItem';\n\nconst StyledCatalogList = styled.div`\n    margin-left: 112px;\n    margin-top: 72px;\n    height: 640px;\n    overflow: hidden;\n`;\n\nconst StyledContainer = styled.div`\n    display: flex;\n    padding: 24px 16px 44px;\n    height: 660px;\n    box-sizing: border-box;\n    overflow-x: scroll;\n    --spatial-navigation-contain: contain;\n    transition: transform 0.4s ease-in-out;\n`;\n\nconst Component: React.FC = () => {\n    const { itemsMap, order } = useSelector(({ catalogPage }) => catalogPage);\n    const items = React.useMemo(() => order.map((itemId) => itemsMap[itemId]), [order, itemsMap]);\n\n    return (\n        <StyledCatalogList>\n            <StyledContainer>\n                {items.map((item) => (\n                    <CatalogListItem key={item.guid} {...item} />\n                ))}\n            </StyledContainer>\n        </StyledCatalogList>\n    );\n};\n\nexport const CatalogList = withBem(Component, 'CatalogList');\n","import React from 'react';\nimport ContentLoader, { IContentLoaderProps } from 'react-content-loader';\n\ninterface SkeletonProps extends IContentLoaderProps {\n    itemWidth: number;\n    itemHeight: number;\n    borderRadius: number;\n    rowCount: number;\n    columnCount: number;\n    paddingBetweenColumns: number;\n    paddingBetweenRows: number;\n}\n\nexport const Skeleton: React.FC<SkeletonProps> = ({\n    itemWidth,\n    itemHeight,\n    borderRadius,\n    rowCount,\n    columnCount,\n    paddingBetweenColumns,\n    paddingBetweenRows,\n    ...props\n}) => {\n    const list = Array.from(Array(columnCount)).map((_, columnIndex) =>\n        Array.from(Array(rowCount)).map((_, rowIndex) => (\n            <rect\n                key={`${columnIndex} ${rowIndex}`}\n                x={columnIndex * (itemWidth + paddingBetweenColumns)}\n                y={rowIndex * (itemHeight + paddingBetweenRows)}\n                width={itemWidth}\n                height={itemHeight}\n                rx={borderRadius}\n                ry={borderRadius}\n            />\n        )),\n    );\n\n    return <ContentLoader {...props}>{list}</ContentLoader>;\n};\n","import React from 'react';\nimport { Skeleton } from 'components/Skeleton/Skeleton';\nimport withBem from 'hoc/withBem';\n\nimport './CatalogSkeleton.scss';\n\ntype CatalogSkeletonProps = BemProps;\n\nconst itemWidth = 392;\nconst itemHeight = 592;\nconst columnCount = 5;\nconst paddingBetween = 32;\n\nexport const Component: React.FC<CatalogSkeletonProps> = ({ bem }) => (\n    <div className={bem()}>\n        <Skeleton\n            viewBox={`0 0 ${itemWidth * columnCount + paddingBetween * (columnCount - 1)} ${itemHeight}`}\n            width=\"100%\"\n            height=\"100%\"\n            backgroundColor=\"#262828\"\n            foregroundColor=\"#414545\"\n            itemWidth={itemWidth}\n            itemHeight={itemHeight}\n            borderRadius={24}\n            rowCount={2}\n            columnCount={5}\n            paddingBetweenRows={paddingBetween}\n            paddingBetweenColumns={paddingBetween}\n            speed={2}\n        />\n    </div>\n);\n\nexport const CatalogSkeleton = withBem(Component, 'CatalogSkeleton');\n","import React from 'react';\nimport { useSelector, useDispatch } from 'hooks';\nimport { SHOW_ITEMS_MOCK } from 'mocks';\nimport { askForStock } from 'store/actions';\nimport { Header } from 'components/Header/Header';\nimport { HeaderAddress } from 'components/HeaderAddress/HeaderAddress';\nimport { HeaderCart } from 'components/HeaderCart/HeaderCart';\n\nimport { CatalogList } from './List/CatalogList';\nimport { CatalogSkeleton } from './Skeleton/CatalogSkeleton';\n\nexport const Catalog: React.FC = () => {\n    const dispatch = useDispatch();\n    const {\n        cart,\n        catalogPage: { order },\n    } = useSelector(({ cart, products, catalogPage }) => ({\n        cart,\n        products,\n        catalogPage,\n    }));\n\n    React.useEffect(() => {\n        dispatch(askForStock());\n    }, [dispatch]);\n\n    React.useEffect(() => {\n        if (process.env.REACT_APP_ENVIRONMENT === 'development') {\n            window.AssistantClient.onData({\n                type: 'smart_app_data',\n                // eslint-disable-next-line\n                smart_app_data: {\n                    command: 'SHOW_ITEMS',\n                    stock: SHOW_ITEMS_MOCK,\n                },\n            });\n\n            window.AssistantClient.onData({\n                type: 'smart_app_data',\n                // eslint-disable-next-line\n                smart_app_data: {\n                    command: 'ADD_ITEM',\n                    item: '21ff407a-fa98-11e8-80c5-0cc47a817925',\n                    count: '2',\n                },\n            });\n        }\n    }, []);\n\n    return (\n        <>\n            <Header title=\"Самокат\">\n                <HeaderAddress />\n                {cart.totalCount > 0 ? <HeaderCart /> : ''}\n            </Header>\n            {order.length ? <CatalogList /> : <CatalogSkeleton />}\n        </>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useFocusOnMount } from 'hooks';\n\nconst StyledButton = styled.button`\n    padding: 20px 40px;\n    border-radius: 40px;\n    display: flex;\n    border: none;\n    color: #fff;\n    font-weight: 600;\n    font-size: 32px;\n    align-items: center;\n    justify-content: center;\n    background-color: rgba(255, 255, 255, 0.1);\n    transition: background-color 0.3s ease-in-out;\n\n    &:focus {\n        background-color: #08a652;\n    }\n\n    &[disabled] {\n        opacity: 0.5;\n    }\n`;\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n    shouldFocusOnMount?: boolean;\n}\n\nexport const Button: React.FC<ButtonProps> = ({ className, shouldFocusOnMount, ...props }) => {\n    const mountFocusRef = useFocusOnMount<HTMLButtonElement>();\n\n    return (\n        <StyledButton className={className} ref={shouldFocusOnMount ? mountFocusRef : null} type=\"button\" {...props} />\n    );\n};\n","import React from 'react';\nimport withBem from 'hoc/withBem';\nimport { throttle } from 'tools';\nimport { updateUser, makePurchase } from 'store/actions';\nimport { AppDispatch } from 'store/constants';\nimport { useDispatch, useSelector } from 'hooks';\nimport { Button } from 'components/Button/Button';\n\nimport './CartInfo.scss';\nimport { MINIMAL_PRICE } from '../Cart';\n\ntype CartInfoProps = BemProps;\n\nconst makePurchaseAction = (dispatch: AppDispatch) => {\n    dispatch(makePurchase());\n\n    // эмуляция ответа бэка для отладки в браузере\n    if (process.env.REACT_APP_ENVIRONMENT === 'development') {\n        window.AssistantClient.onData({\n            type: 'smart_app_data',\n            // eslint-disable-next-line @typescript-eslint/camelcase\n            smart_app_data: {\n                command: 'VALIDATION_OK',\n                status: true,\n                // eslint-disable-next-line @typescript-eslint/camelcase\n                order_id: '364528',\n            },\n        });\n    }\n};\n\nconst Component: React.FC<CartInfoProps> = ({ bem }) => {\n    const dispatch = useDispatch();\n    const { user, cart } = useSelector(({ user, cart }) => ({ user, cart }));\n    const {\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        phone_num,\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        address: { address_string, building, confirmed },\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        customer_name,\n    } = user;\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    const phoneNumber = phone_num;\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    const name = customer_name;\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    const addressString = address_string;\n\n    return (\n        <div className={bem()}>\n            <div className={bem('badge')}>\n                <div className={bem('badge-body')}>\n                    <div className={bem('badge-name')}>15-30</div>\n                    <div className={bem('badge-desc')}>мин</div>\n                </div>\n                <div className={bem('badge-kernel')} />\n                <div className={bem.modify({ big: true }, 'badge-shadow')} />\n                <div className={bem.modify({ small: true }, 'badge-shadow')} />\n            </div>\n            <div className={bem('address')}>{addressString}</div>\n            {confirmed ? (\n                <>\n                    <div className={bem('personal')}>\n                        <div className={bem('personal-location')}>{building}</div>\n                        <div className={bem('personal-phone-number')}>{phoneNumber}</div>\n                        <div className={bem('personal-name')}>{name}</div>\n                    </div>\n                    <Button\n                        className={bem.modify({ disabled: false }, 'button')}\n                        disabled={cart.totalPrice < MINIMAL_PRICE}\n                        shouldFocusOnMount\n                        onClick={throttle(() => makePurchaseAction(dispatch), 200)}\n                    >\n                        Перейти к оплате\n                    </Button>\n                </>\n            ) : (\n                <>\n                    <div className={bem('ask-personal')}>\n                        Чтобы сделать заказ, укажите квартиру, подъезд и другую дополнительную информацию\n                    </div>\n                    <Button\n                        className={bem.modify({ disabled: false }, 'button')}\n                        shouldFocusOnMount\n                        onClick={throttle(\n                            () =>\n                                dispatch(\n                                    updateUser({\n                                        location: 'подъезд 1, корпус Г',\n                                        phoneNumber: '+7 910 345 67 89',\n                                        name: 'Сергей',\n                                    }),\n                                ),\n                            200,\n                        )}\n                    >\n                        Дополнить адрес\n                    </Button>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport const CartInfo = withBem(Component, 'CartInfo');\n","import { createAction } from 'tools/action-creator';\n\nexport const updateUser = (payload: any) => createAction('UPDATE_USER', payload);\n","import React from 'react';\nimport { ProductItem } from 'store/constants/products';\nimport { Button } from 'components/Button/Button';\nimport { throttle } from 'tools';\nimport withBem from 'hoc/withBem';\n\nimport './CartListItem.scss';\n\ninterface CartListItemProps extends ProductItem, BemProps {\n    index: number;\n    count: number;\n    onMoreClick: () => void;\n    onLessClick: (count: number, shouldRemoveMention?: boolean) => void;\n    onSelect: (index: number) => void;\n}\n\nconst Component: React.FC<CartListItemProps> = ({\n    index,\n    onLessClick,\n    onMoreClick,\n    onSelect,\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    images_urls,\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    clear_name,\n    price,\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    quantity_left,\n    count,\n    bem,\n}) => {\n    const [selected, setFocus] = React.useState(false);\n    const isSoldOut = Number(quantity_left) === 0;\n    const canAddMore = count < Number(quantity_left);\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    const imageUrl = images_urls[0];\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    const clearName = clear_name;\n    const memoizedOnFocus = React.useCallback(() => {\n        onSelect(index - 1); // -1 потому что индекс сдвинут на единицу вперед\n        setFocus(true);\n    }, [onSelect, index]);\n\n    return (\n        <div className={bem.modify({ 'sold-out': isSoldOut })}>\n            <div className={bem('index-badge')}>{index}</div>\n            <div className={bem('image')} style={{ backgroundImage: `url(\"${imageUrl}\")` }} />\n            <div className={bem('info')}>\n                <div className={bem.modify({ 'one-line': isSoldOut }, 'name')}>{clearName}</div>\n                <div className={bem('price')}>{Math.floor(Number(price) / 100)} ₽</div>\n                {isSoldOut ? <div className={bem('sold-out')}>Раскупили</div> : ''}\n            </div>\n            {isSoldOut ? (\n                <Button\n                    className={bem('remove-button')}\n                    onFocus={memoizedOnFocus}\n                    onBlur={() => setFocus(false)}\n                    onClick={throttle(() => onLessClick(count, true), 100)}\n                >\n                    Удалить\n                </Button>\n            ) : (\n                <div className={bem.modify({ selected }, 'selector')}>\n                    <button\n                        type=\"button\"\n                        aria-label=\"less\"\n                        className={bem.modify({ less: !!count, remove: !count }, 'selector-button')}\n                        onFocus={memoizedOnFocus}\n                        onBlur={() => setFocus(false)}\n                        onClick={throttle(() => onLessClick(1, !count), 100)}\n                    />\n                    <div className={bem('selector-value')}>{count}</div>\n                    <button\n                        type=\"button\"\n                        aria-label=\"more\"\n                        disabled={!canAddMore}\n                        className={bem.modify({ more: true }, 'selector-button')}\n                        onFocus={memoizedOnFocus}\n                        onBlur={() => setFocus(false)}\n                        onClick={throttle(onMoreClick, 100)}\n                    />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport const CartListItem = withBem(Component, 'CartListItem');\n","import React from 'react';\nimport { splitByThousands } from 'tools';\nimport { useDispatch, useSelector } from 'hooks';\nimport { removeItem, addItem } from 'store/actions';\nimport { SHOW_ITEMS_MOCK } from 'mocks';\nimport withBem from 'hoc/withBem';\n\nimport { CartListItem } from '../ListItem/CartListItem';\nimport { MINIMAL_PRICE } from '../Cart';\n\nimport './CartList.scss';\n\ntype CartListProps = BemProps;\n\nconst ITEM_WIDTH = 152;\n\nconst onScroll = (e: React.UIEvent<HTMLDivElement>) => {\n    e.currentTarget.scrollTop = 0;\n};\n\nconst getOffset = (index: number, itemsCount: number) => {\n    // так как индекс начинается с 0, то расчеты бы имели смысл начиная\n    // со второго элемента (индекс = 1), но нам нужно начинать скролл с\n    // 3-го элемента, поэтому сдвигаем значение на 1\n    let relatedIndex = Math.max(0, index - 1);\n\n    // ограничиваем максимальное значение индекса\n    relatedIndex = Math.min(Math.max(0, itemsCount - 4), relatedIndex);\n\n    // домножаем отступ на коэффициент высоты айтема\n    return relatedIndex * ITEM_WIDTH;\n};\n\nconst Component: React.FC<CartListProps> = ({ bem }) => {\n    const [selectedItemIndex, setSelectedItemIndex] = React.useState(0);\n    const dispatch = useDispatch();\n    const { cart, products } = useSelector(({ cart, products }) => ({ cart, products }));\n    const totalPriceInRubles = Math.ceil(cart.totalPrice / 100);\n    const cartItemsCount = cart.order.length;\n    const isFirstItemSelected = !selectedItemIndex;\n    const isLastItemSelected = selectedItemIndex === cartItemsCount - 1;\n\n    const wrapperStyle: React.CSSProperties = {\n        transform: `translateY(-${getOffset(selectedItemIndex, cartItemsCount)}px)`,\n    };\n\n    return (\n        <div className={bem()}>\n            <div className={bem('container')} onScroll={onScroll}>\n                <div\n                    className={bem.modify(\n                        { top: true, hidden: cartItemsCount <= 4 || isFirstItemSelected },\n                        'gradient',\n                    )}\n                />\n                <div className={bem('wrapper')} style={wrapperStyle}>\n                    {cart.order.map((itemId, index) => {\n                        const productItem = products.itemsMap[itemId];\n                        const cartItem = cart.itemsMap[itemId];\n\n                        return (\n                            <CartListItem\n                                {...productItem}\n                                onSelect={setSelectedItemIndex}\n                                onLessClick={(count: number, shouldRemoveMention: boolean) =>\n                                    dispatch(\n                                        removeItem({\n                                            item: itemId,\n                                            count: String(count),\n                                            shouldRemoveMention,\n                                        }),\n                                    )\n                                }\n                                onMoreClick={() =>\n                                    dispatch(\n                                        addItem({\n                                            item: itemId,\n                                            count: '1',\n                                        }),\n                                    )\n                                }\n                                count={cartItem.count}\n                                index={index + 1}\n                                key={itemId}\n                            />\n                        );\n                    })}\n                </div>\n                <div\n                    className={bem.modify(\n                        { bottom: true, hidden: cartItemsCount <= 4 || isLastItemSelected },\n                        'gradient',\n                    )}\n                />\n            </div>\n            <div className={bem('total-price')}>Сумма заказа {splitByThousands(String(totalPriceInRubles))} ₽</div>\n            {cart.totalPrice < MINIMAL_PRICE ? (\n                <div className={bem('minimal-price')}>\n                    До минимального заказа еще {Math.ceil(MINIMAL_PRICE - totalPriceInRubles)} ₽\n                </div>\n            ) : (\n                ''\n            )}\n        </div>\n    );\n};\n\nexport const CartList = withBem(Component, 'CartList');\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Header } from 'components/Header/Header';\nimport mapImage from 'assets/images/map.png';\n\nimport { CartInfo } from './Info/CartInfo';\nimport { CartList } from './List/CartList';\n\nexport const MINIMAL_PRICE = 200;\n\nconst StyledBackground = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    background-image: url('${mapImage}');\n\n    &::before {\n        content: '';\n        position: absolute;\n        left: 0;\n        top: 0;\n        right: 0;\n        bottom: 0;\n\n        background: linear-gradient(90.98deg, #001124 50.03%, rgba(0, 17, 36, 0) 99.56%);\n    }\n`;\n\nconst StyledContainer = styled.div`\n    display: flex;\n\n    justify-content: space-between;\n    padding: 0 112px;\n`;\n\nexport const Cart: React.FC = () => (\n    <>\n        <StyledBackground />\n        <Header title=\"Корзина\" />\n        <StyledContainer>\n            <CartList />\n            <CartInfo />\n        </StyledContainer>\n    </>\n);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'hooks';\nimport { Header } from 'components/Header/Header';\nimport { Button } from 'components/Button/Button';\n\nimport FirstFigureIcon from './figure-1.svg';\nimport SecondFigureIcon from './figure-2.svg';\nimport ThirdFigureIcon from './figure-3.svg';\nimport FourthFigureIcon from './figure-4.svg';\nimport SixthFigureIcon from './figure-6.svg';\nimport SeventhFigureIcon from './figure-7.svg';\nimport EighthFigureIcon from './figure-8.svg';\nimport NinthFigureIcon from './figure-9.svg';\n\nconst StatusButton = styled(Button)`\n    margin-top: 60px;\n`;\n\nconst StatusContainer = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 206px 0 0;\n`;\n\nconst StatusOrderNumber = styled.div`\n    font-size: 32px;\n    font-weight: 600;\n    line-height: 44px;\n    color: rgba(255, 255, 255, 0.74);\n`;\n\nconst StatusOrderTime = styled.div`\n    margin-top: 16px;\n    font-weight: bold;\n    font-size: 64px;\n    line-height: 72px;\n    text-align: center;\n    color: #fff;\n`;\n\nconst StatusFigure = styled.div`\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: contain;\n`;\n\nconst StatusFirstFigure = styled(StatusFigure)`\n    position: absolute;\n    top: 92px;\n    left: 834px;\n\n    height: 61px;\n    width: 61px;\n\n    background-image: url('${FirstFigureIcon}');\n`;\n\nconst StatusSecondFigure = styled(StatusFigure)`\n    position: absolute;\n    top: 0;\n    left: 482px;\n\n    height: 61px;\n    width: 61px;\n\n    background-image: url('${SecondFigureIcon}');\n`;\n\nconst StatusThirdFigure = styled(StatusFigure)`\n    position: absolute;\n    top: 280px;\n    left: 236px;\n\n    height: 46px;\n    width: 46px;\n\n    background-image: url('${ThirdFigureIcon}');\n`;\n\nconst StatusFourthFigure = styled(StatusFigure)`\n    position: absolute;\n    top: 158px;\n    left: 1487px;\n\n    height: 53px;\n    width: 53px;\n\n    background-image: url('${FourthFigureIcon}');\n`;\n\nconst StatusFifthFigure = styled(StatusFigure)`\n    position: absolute;\n    top: 594px;\n    left: 340px;\n\n    height: 53px;\n    width: 53px;\n\n    transform: rotate(90deg);\n\n    background-image: url('${FirstFigureIcon}');\n`;\n\nconst StatusSixthFigure = styled(StatusFigure)`\n    position: absolute;\n    top: 500px;\n    left: 652px;\n\n    height: 60px;\n    width: 60px;\n\n    background-image: url('${SixthFigureIcon}');\n`;\n\nconst StatusSeventhFigure = styled(StatusFigure)`\n    position: absolute;\n    top: 705px;\n    left: 1044px;\n\n    height: 40px;\n    width: 40px;\n\n    background-image: url('${SeventhFigureIcon}');\n`;\n\nconst StatusEighthFigure = styled(StatusFigure)`\n    position: absolute;\n    top: 492px;\n    left: 1268px;\n\n    height: 40px;\n    width: 40px;\n\n    background-image: url('${EighthFigureIcon}');\n`;\n\nconst StatusNinthFigure = styled(StatusFigure)`\n    position: absolute;\n    top: 590px;\n    left: 1604px;\n\n    height: 90px;\n    width: 90px;\n\n    background-image: url('${NinthFigureIcon}');\n`;\n\nexport const Status: React.FC = () => {\n    const { orderId } = useSelector(({ cart }) => cart);\n\n    return (\n        <>\n            <Header title=\"Самокат\" />\n            <StatusContainer>\n                <StatusOrderNumber>Заказ #{orderId} оформлен</StatusOrderNumber>\n                <StatusOrderTime>\n                    Спасибо за заказ!\n                    <br />\n                    Будем у вас через 15-30 минут.\n                </StatusOrderTime>\n                <StatusButton shouldFocusOnMount>Очень жду</StatusButton>\n                <StatusFirstFigure />\n                <StatusSecondFigure />\n                <StatusThirdFigure />\n                <StatusFourthFigure />\n                <StatusFifthFigure />\n                <StatusSixthFigure />\n                <StatusSeventhFigure />\n                <StatusEighthFigure />\n                <StatusNinthFigure />\n            </StatusContainer>\n        </>\n    );\n};\n","import React from 'react';\nimport withBem from 'hoc/withBem';\nimport { useFocusOnMount, useInterval } from 'hooks';\nimport { Button } from 'components/Button/Button';\n\nimport './Promo.scss';\n\ntype PromoProps = BemProps;\n\nconst POPCORN_TYPES_COUNT = 4;\n\nconst Component: React.FC<PromoProps> = ({ bem }) => {\n    const mountRef = useFocusOnMount<HTMLButtonElement>();\n    const [currentIndex, setIndex] = React.useState(0);\n    useInterval(() => setIndex(currentIndex === POPCORN_TYPES_COUNT - 1 ? 0 : currentIndex + 1), 3000);\n\n    return (\n        <div className={bem.modify({ [`type-${currentIndex + 1}`]: true })}>\n            <div className={bem('glow')}>\n                <div className={bem.modify({ [`type-${currentIndex + 1}`]: true }, 'glow-1')} />\n                <div className={bem.modify({ [`type-${currentIndex + 1}`]: true }, 'glow-2')} />\n                <div className={bem.modify({ [`type-${currentIndex + 1}`]: true }, 'glow-3')} />\n                <div className={bem.modify({ [`type-${currentIndex + 1}`]: true }, 'glow-4')} />\n            </div>\n            <div className={bem('title')}>\n                Попкорн и напитки\n                <br />к просмотру фильмов\n                <br />и сериалов\n            </div>\n            <div className={bem('subtitle')}>\n                Доставим бесплатно в течении 15-30 минут для Москвы и Санкт-Петербурга\n            </div>\n            {Array.from(Array(POPCORN_TYPES_COUNT)).map((_, index) => (\n                <div\n                    key={index}\n                    className={bem.modify({ [`type-${index + 1}`]: true, hidden: index !== currentIndex }, 'image')}\n                />\n            ))}\n            <div className={bem('button-container')}>\n                <Button className={bem('button')} shouldFocusOnMount>\n                    Указать адрес\n                </Button>\n                <Button className={bem('button')}>Не сейчас</Button>\n            </div>\n        </div>\n    );\n};\n\nexport const Promo = withBem(Component, 'Promo');\n","import React from 'react';\nimport { Header } from 'components/Header/Header';\nimport { Button } from 'components/Button/Button';\nimport { useSelector } from 'hooks';\nimport withBem from 'hoc/withBem';\n\nimport './NoArea.scss';\n\ntype NoAreaProps = BemProps;\n\nconst Component: React.FC<NoAreaProps> = ({ bem }) => {\n    const { address } = useSelector(({ user }) => user);\n\n    return (\n        <div className={bem()}>\n            <Header className={bem('header')} title=\"Адрес доставки\" />\n            <div className={bem('container')}>\n                <div className={bem('badge')}>\n                    <div className={bem('badge-body')} />\n                    <div className={bem('badge-kernel')} />\n                    <div className={bem.modify({ big: true }, 'badge-shadow')} />\n                    <div className={bem.modify({ small: true }, 'badge-shadow')} />\n                </div>\n                <div className={bem('title')}>{address}</div>\n                <div className={bem('subtitle')}>К сожалению, пока не доставляем по этому адресу</div>\n                <Button shouldFocusOnMount className={bem('button')}>\n                    Изменить\n                </Button>\n            </div>\n            <div className={bem('background')} />\n        </div>\n    );\n};\n\nexport const NoArea = withBem(Component, 'NoArea');\n","import React from 'react';\nimport withBem from 'hoc/withBem';\n\nimport './ScreenSaver.scss';\n\ntype ScreenSaverProps = BemProps;\n\nconst Component: React.FC<ScreenSaverProps> = ({ bem }) => (\n    <div className={bem()}>\n        Это скринсейвер\n        <br />\n        Здесь будет роскошный прелоадер с попкорном\n    </div>\n);\n\nexport const ScreenSaver = withBem(Component, 'ScreenSaver');\n","import React from 'react';\nimport { Header } from 'components/Header/Header';\nimport withBem from 'hoc/withBem';\n\nimport './AddressSimple.scss';\n\ntype AddressSimpleProps = BemProps;\n\nexport const Component: React.FC<AddressSimpleProps> = ({ bem }) => (\n    <>\n        <Header title=\"Адрес доставки\" />\n        <div className={bem('container')}>\n            <input type=\"text\" />\n        </div>\n    </>\n);\n\nexport const AddressSimple = withBem(Component, 'AddressSimple');\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { Switch, Route, Router } from 'react-router';\nimport { store, history } from 'store';\nimport { ROUTES } from 'store/constants/router';\nimport { Catalog } from 'pages/Catalog/Catalog';\nimport { Cart } from 'pages/Cart/Cart';\nimport { Status } from 'pages/Status/Status';\nimport { Promo } from 'pages/Promo/Promo';\nimport { NoArea } from 'pages/NoArea/NoArea';\nimport { ScreenSaver } from 'pages/ScreenSaver/ScreenSaver';\nimport { AddressSimple } from 'pages/AddressSimple/AddressSimple';\n\nimport 'style/global.scss';\n\nconst isStaging = process.env.REACT_APP_ENVIRONMENT === 'staging';\n\nconst StyledWrapper = styled.div`\n    transform: ${isStaging ? 'translate(-580px, -310px)' : ''};\n`;\n\n// эти костыли со стилями нужны для того, чтобы верстка норм смотрелась на планшете\n// там разрешение экрана ~600X300 px\nconst extraContainerStyles = isStaging\n    ? css`\n          transform: scale(0.4);\n          height: 1080px;\n          width: 1920px;\n      `\n    : '';\n\nconst StyledContainer = styled.div`\n    overflow: hidden;\n    width: 100%;\n    height: 100vh;\n    outline: none;\n    font-family: 'SB Sans Text', Helvetica, Arial, sans-serif;\n    background: #001124;\n\n    ${extraContainerStyles}\n`;\n\nexport const Root: React.FC = () => (\n    <ReduxProvider store={store}>\n        <Router history={history}>\n            <StyledWrapper>\n                <StyledContainer>\n                    <Switch>\n                        <Route path={ROUTES.CATALOG}>\n                            <Catalog />\n                        </Route>\n                        <Route path={ROUTES.CART}>\n                            <Cart />\n                        </Route>\n                        <Route path={ROUTES.STATUS}>\n                            <Status />\n                        </Route>\n                        <Route path={ROUTES.ADDRESS_SIMPLE}>\n                            <AddressSimple />\n                        </Route>\n                        <Route path={ROUTES.PROMO}>\n                            <Promo />\n                        </Route>\n                        <Route path={ROUTES.NO_AREA}>\n                            <NoArea />\n                        </Route>\n                        <Route path={ROUTES.SCREEN_SAVER}>\n                            <ScreenSaver />\n                        </Route>\n                    </Switch>\n                </StyledContainer>\n            </StyledWrapper>\n        </Router>\n    </ReduxProvider>\n);\n","import 'core-js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Root } from 'components/Root/Root';\n\nimport 'tools/new-spatial-navigation';\n\nexport const renderApp = (App: React.FC) => {\n    ReactDOM.render(<App />, document.getElementById('application_root'));\n};\n\nrenderApp(Root);\n\nif (process.env.REACT_APP_ENVIRONMENT !== 'production' && module.hot) {\n    module.hot.accept('./components/Root/Root', () => {\n        // eslint-disable-next-line\n        const { Root } = require('./components/Root/Root.tsx');\n        renderApp(Root);\n    });\n}\n","module.exports = __webpack_public_path__ + \"static/media/figure-1.cad64c9b.svg\";"],"sourceRoot":""}