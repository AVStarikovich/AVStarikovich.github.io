{"version":3,"sources":["components/HeaderAddress/address.svg","components/HeaderCart/cart.svg","components/Header/chevron-right.svg","components/Header/logo.svg","assets/icons/minus.svg","pages/Status/figure-2.svg","pages/Status/figure-3.svg","pages/Status/figure-4.svg","pages/Status/figure-6.svg","pages/Status/figure-7.svg","pages/Status/figure-8.svg","pages/Status/figure-9.svg","pages/NoArea/Badge/face.svg","tools/new-spatial-navigation.js","store/constants/router.tsx","store/constants/index.tsx","store/reducers/data/products.ts","store/reducers/data/user.ts","store/reducers/model/cart.ts","store/selectors/index.ts","store/reducers/model/user.ts","store/reducers/view/catalogPage.ts","tools/action-creator.ts","tools/bem.ts","tools/split-by-thousands.ts","tools/noop.ts","store/reducers/view/cartPage.ts","hooks/useFocusOnMount.tsx","hooks/useInterval.tsx","hooks/useDispatch.tsx","hooks/useSelector.tsx","hooks/useThrottledFn.tsx","store/actions/native.tsx","store/actions/server.tsx","store/actions/addressSimplePage.tsx","pages/AddressSimple/SuggestItem/AddressSimpleSuggestItem.tsx","store/reducers/view/addressSimplePage.tsx","store/reducers/view/addressFullPage.tsx","tools/formatPhoneNumer.ts","store/reducers/view/header.ts","store/index.tsx","store/reducers/index.tsx","store/reducers/model/router.ts","store/actions/addressFullPage.ts","components/HeaderAddress/HeaderAddress.tsx","components/HeaderCart/HeaderCart.tsx","components/Header/Header.tsx","components/Badge/Badge.tsx","pages/Catalog/ListItem/CatalogListItem.tsx","store/actions/catalogPage.tsx","pages/Catalog/List/CatalogList.tsx","components/Skeleton/Skeleton.tsx","hoc/withBem.tsx","pages/Catalog/Skeleton/CatalogSkeleton.tsx","pages/Catalog/Catalog.tsx","components/Button/Button.tsx","pages/Cart/Info/CartInfo.tsx","pages/Cart/ListItem/CartListItem.tsx","store/actions/cartPage.tsx","pages/Cart/List/CartList.tsx","pages/Cart/Cart.tsx","pages/Status/Status.tsx","pages/Promo/Promo.tsx","pages/NoArea/Badge/Badge.tsx","pages/NoArea/NoArea.tsx","pages/ScreenSaver/ScreenSaver.tsx","components/Input/Input.tsx","tools/request.tsx","tools/2gis.tsx","pages/AddressSimple/AddressSimple.tsx","pages/AddressFull/AddressFullAll.tsx","pages/AddressFull/AddressFullPhone.tsx","pages/AddressFull/AddressFullApartment.tsx","pages/AddressFull/AddressFullEntrance.tsx","pages/AddressFull/AddressFullFloor.tsx","pages/AddressFull/AddressFull.tsx","components/Root/Root.tsx","index.tsx","assets/icons/plus.svg","assets/images/map.png","pages/Status/figure-1.svg"],"names":["module","exports","window","ARROW_KEY_CODE","37","38","39","40","mapOfBoundRect","startingPoint","savedSearchOrigin","element","rect","navigate","dir","searchOrigin","document","activeElement","body","querySelector","elementStyle","getComputedStyle","invisibleStyle","disabled","includes","getPropertyValue","documentElement","getBoundingClientRect","height","width","left","right","top","bottom","isVisibleInScroller","scroller","getScrollContainer","findSearchOrigin","console","log","eventTarget","elementFromPosition","elementFromPoint","x","y","isFocusable","isContainer","getSpatialNavigationContainer","container","nodeName","contentDocument","bestInsideCandidate","spatialNavigationSearch","candidates","getSpatialNavigationCandidates","mode","focusingController","parentContainer","parentElement","location","parent","navigateChain","bestCandidate","createSpatNavEvents","focus","preventScroll","scrollingController","isScrollable","isScrollBoundary","moveScroll","isHTMLScrollBoundary","ownerDocument","option","childElementCount","getElementsByTagName","children","elem","isDelegableContainer","push","concat","filter","isVisible","getFilteredSpatialNavigationCandidates","targetElement","filteredCandidates","length","args","this","bestTarget","internalCandidates","externalCandidates","insideOverlappedCandidates","focusableAreas","overlappedCandidates","forEach","isEntirelyVisible","getOverlappedCandidates","defaultContainer","defaultCandidates","contains","candidate","fullyOverlapped","overlappedByParent","map","elm","flat","currentElm","getClosestElement","getDistanceFromPoint","getInnerDistance","selectBestCandidateFromEdge","selectBestCandidate","innerTarget","descendantsBest","splice","indexOf","originalContainer","eventTargetRect","undefined","candidateRect","candidateBody","isOutside","isInside","spatialNavigationFunction","currentTargetRect","distanceFunction","alignedCandidates","isAligned","getAbsoluteDistance","getDistance","frameElement","minDistance","Number","POSITIVE_INFINITY","minDistanceElements","i","distance","getEuclideanDistance","scrollContainer","isScrollContainer","focusables","Array","prototype","call","eventType","containerElement","currentElement","direction","triggeredEvent","CustomEvent","bubbles","cancelable","detail","causedTarget","dispatchEvent","readCssVar","varName","trim","currentOption","nextContainer","offset","scrollLeft","scrollTop","isCSSSpatNavContain","overflowX","overflowY","isOverflow","scrollWidth","clientWidth","scrollHeight","clientHeight","result","winScrollY","winScrollX","Math","abs","elementRect","nearestScroller","scrollerRect","DOMRect","innerWidth","innerHeight","tabIndex","tagName","getAttribute","isAtagWithoutHref","isActuallyDisabled","inert","isExpresslyInert","isVisibleStyleProperty","style","opacity","isBeingRendered","offsetX","parseInt","offsetWidth","offsetY","offsetHeight","isNaN","hitTestPoint","middle","leftTop","rightBottom","point","elemFromPoint","hitTest","containerRect","thisVisibility","childRect","rightEdgeCheck","leftEdgeCheck","topEdgeCheck","bottomEdgeCheck","rect1","rect2","isRightSide","isBelow","points","getEntryAndExitPoints","P1","entryPoint","exitPoint","P2","sqrt","pow","baseEdge","up","down","orthogonalBias","alignBias","A","B","C","intersectionRect","intersection_rect","area","new_location","max","new_max_point","min","getIntersectionRect","D","get","boundingClientRect","toFixed","set","enableExperimentalAPIs","currentKeyMode","__spatialNavigation__","keyMode","getInitialAPIs","Object","assign","canScroll","findTarget","findCandidate","bestNextTarget","isArray","findCandidates","bind","findNextTarget","getDistanceFromTarget","candidateElement","getExperimentalAPI","seal","_keymode","setStartingPoint","__getSpatNavState","searchOriginRect","Element","CSS","registerProperty","name","syntax","inherits","initialValue","addEventListener","e","keyCode","shiftKey","ctrlKey","metaKey","altKey","defaultPrevented","focusNavigableArrowKey","startPosition","selectionStart","endPosition","selectionEnd","value","handlingEditableElement","preventDefault","Map","clientX","clientY","target","HTMLElement","requestAnimationFrame","async","scrollIntoView","behavior","block","inline","Promise","resolve","IntersectionObserver","entry","isIntersecting","threshold","observe","event","HTMLButtonElement","click","ROUTES","initialState","cart","minimalPrice","itemsMap","order","totalCount","totalPrice","orderId","products","router","userData","customerName","phoneNumber","latitude","longitude","address","city","street","house","building","floor","entrance","apartment","doorCode","userModel","catalogPage","selectedItemId","screenIndexMap","wrapperXShift","listIndexOffset","cartPage","wrapperYShift","selectedItemIndex","topGradientHidden","bottomGradientHidden","toMinimumPrice","isOrderStatusWaiting","hasRequiredData","makePurchaseButton","header","title","text","count","price","isBackButtonVisible","addressSimplePage","inputValue","suggestsRaw","suggests","selectedSuggestItemIndex","suggestListContainerYShift","isSubmitButtonDisabled","addressFullPage","addressInputValue","phoneNumberInputValue","apartmentInputValue","entranceInputValue","floorInputValue","nextFocus","ADDRESS_FULL_ALL","normalizeProducts","productsMaps","keys","reduce","acc","itemId","productItem","id","guid","quantityLeft","quantity_left","imageUrl","images_urls","productsData","state","action","type","payload","stock","data","customer_name","phone_num","address_string","door_code","device_location","getTotalCount","values","item","getTotalPrice","cartModel","store","countString","maxCount","cartItem","shouldRemoveMention","cartItemId","clear","order_id","selectProductById","selectCartItemById","selectPathname","pathname","normalizePhone","from","symbol","index","test","firstSymbol","otherSymbols","slice","join","suggestItem","full_name","addressComponent","components","number","split","String","lat","lon","updateUserAddressBasedOnBuilding","input","lastValue","lastSymbol","prefix","ADDRESS_FULL_PHONE","ADDRESS_FULL_APARTMENT","ADDRESS_FULL_ENTRANCE","ADDRESS_FULL_FLOOR","inputType","SCREEN_ITEM_COUNT","prepareBadge","prepareCount","calculateButtonDisabled","prepareIndex","catalogPageView","CATALOG","firstItemId","getSelectedItemId","getListIndexOffset","CARD_WIDTH","CARD_GAP","getWrapperXShift","fill","_","getScreenIndexMap","shouldFocusOnMount","ceil","badge","buttonDisabled","prepareCatalogItemsMap","createAction","createEmptyAction","PREFIX","cssPrefix","blockName","delimeter","modDelimeter","renderer","elements","mod","modVal","modify","conditions","elemToModify","entries","predicate","Boolean","all","splitByThousands","reduceRight","arr","noop","cartPageView","moreButtonDisabled","prepareItemsMap","prepareTotalPrice","prepareToMinimumPrice","relatedIndex","getWrapperYShift","prepareMakePurchaseButtonProps","prepareTopGradientHidden","prepareBottomGradientHidden","prepareHasRequiredData","useFocusOnMount","ref","React","useRef","useEffect","current","useDispatch","useReduxDispatch","useSelector","mapStateToProps","useReduxSelector","defaultOptions","leading","trailing","useThrottledFn","fn","timeout","options","dependencies","_useThrottledFn","addItem","removeItem","askForOrderStatus","addressSetSuggests","StyledRoot","styled","div","AddressSimpleSuggestListItem","dispatch","memoizedOnClick","useCallback","memoizedOnFocus","onClick","onFocus","addressSimplePageView","prepareSuggestItems","prepareSuggestListContainerYShift","prepareIsSubmitButtonDisabled","addressFullPageView","find","computeNextFocus","digit","routeTitleMap","CART","STATUS","NO_AREA","headerView","getTitle","getAddress","getCart","history","createHashHistory","middlewares","routerMiddleware","next","AssistantClient","sendData","action_id","createReduxStore","routerModel","changeRouter","connectRouter","getRouterModel","produce","draft","reducer","getRootReducer","compose","applyMiddleware","dispatchToReduxStore","smart_app_data","getState","command","actions","goBack","PROMO","ADDRESS_SIMPLE","replace","setTimeout","serializeAddress","storeUser","confirmed","prepareAddress","source","ADDRESS_FULL","onStart","process","onData","message","AssistantHost","JSON","stringify","onRequestState","foodtech","currentScreen","substring","quantity","discountValue","castFromStore","stateString","updateState","ready","StyledAddress","StyledAddressIcon","addressIcon","StyledAddressText","HeaderAddress","handleClick","StyledHeaderCart","StyledIcon","cartIcon","StyledBadge","span","StyledPrice","HeaderCart","StyledHeader","StyledBackButton","backButtonIcon","StyledSection","StyledLogo","logoIcon","StyledTitle","Header","contentMap","sale","backgroundMap","props","StyledDescription","StyledName","StyledPriceContainer","StyledCount","StyledThumb","StyledIndexBadge","visible","css","StyledButton","plusIcon","CatalogListItemBadge","StyledCatalogListItem","CatalogListItem","handleFocus","onMountRef","currentTarget","StyledCatalogList","StyledContainer","StyledWrapper","XShift","CatalogList","onScroll","key","Skeleton","itemWidth","itemHeight","borderRadius","rowCount","columnCount","paddingBetweenColumns","paddingBetweenRows","list","columnIndex","rowIndex","rx","ry","Component","componentName","context","bem","Bem","CatalogSkeleton","withBem","className","viewBox","backgroundColor","foregroundColor","speed","Catalog","button","Button","forwardRef","mountFocusRef","StyledCartInfo","StyledBadgeBody","StyledBadgeName","StyledBadgeDescription","StyledBadgeKernel","StyledBadgeShadowBig","StyledBadgeShadowSmall","StyledPersonal","StyledPersonalLocation","StyledPersonalPhoneNumber","StyledPersonalName","StyledAskPersonal","CartInfoButton","CartInfo","handlePurchaseClick","handleSetAddressClick","StyledInfo","oneLine","StyledSoldOut","StyledSelector","focused","StyledSelectorValue","CartListItemRemoveButton","StyledSelectorButton","view","minusIcon","StyledCartListItem","CartListItem","handleLessClick","handleMoreClick","handleRemoveClick","aria-label","StyledCartList","YShift","StyledTotalPrice","StyledMinimalPrice","StyledGradient","hidden","CartList","StyledBackground","mapImage","StyledOverlap","Cart","StatusButton","StatusContainer","StatusOrderNumber","StatusOrderTime","StatusFigure","StatusFirstFigure","FirstFigureIcon","StatusSecondFigure","SecondFigureIcon","StatusThirdFigure","ThirdFigureIcon","StatusFourthFigure","FourthFigureIcon","StatusFifthFigure","StatusSixthFigure","SixthFigureIcon","StatusSeventhFigure","SeventhFigureIcon","StatusEighthFigure","EighthFigureIcon","StatusNinthFigure","NinthFigureIcon","Status","Promo","memoizedOnClickSubmitButton","faceIcon","Badge","StyledNoArea","StyledSubtitle","backgroundImage","NoArea","handleButtonClick","ScreenSaver","isFocused","isMinified","StyledInput","Input","onSubmit","onChange","onRootKeyPress","shouldFocusInputOnMount","setFocus","useState","isUsing","setUsing","inputRef","handleRootFocus","handleRootBlur","handleRootKeyPress","handleInputKeyPress","stopPropagation","isTitleMinified","onBlur","onKeyPress","getSuggests","q","then","url","params","fetch","response","ok","statusText","json","makeRequest","local","fields","viewpoint1","viewpoint2","is_viewport_change","meta","code","Sentry","error","items","StyledInputContainer","AddressSimpleButton","StyledSuggestList","StyledSuggestListContainer","yShift","AddressSimple","isKeyboardExpanded","useMediaQuery","memoizedOnInputChange","memoizedOnClickButton","catch","StyledFirstRow","StyledSecondRow","StyledThirdRow","SubmitButton","AddressFullAll","handleSubmitClick","AddressFullPhone","handleInputChange","nativeEvent","InputEvent","handleInputSubmit","AddressFullApartment","AddressFullEntrance","AddressFullFloor","AddressFull","path","dsn","renderApp","App","ReactDOM","render","getElementById","SCREEN_SAVER","REACT_APP_REV"],"mappings":"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","file":"static/js/main.91ba0d3b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/address.b8697603.svg\";","module.exports = __webpack_public_path__ + \"static/media/cart.4441295b.svg\";","module.exports = __webpack_public_path__ + \"static/media/chevron-right.74fb921a.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.1072bc0d.svg\";","module.exports = __webpack_public_path__ + \"static/media/minus.b31f8712.svg\";","module.exports = __webpack_public_path__ + \"static/media/figure-2.a3044c99.svg\";","module.exports = __webpack_public_path__ + \"static/media/figure-3.7084a68e.svg\";","module.exports = __webpack_public_path__ + \"static/media/figure-4.74f25c1b.svg\";","module.exports = __webpack_public_path__ + \"static/media/figure-6.1cf5f7c7.svg\";","module.exports = __webpack_public_path__ + \"static/media/figure-7.ef978761.svg\";","module.exports = __webpack_public_path__ + \"static/media/figure-8.dcc5e538.svg\";","module.exports = __webpack_public_path__ + \"static/media/figure-9.fb8b47f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/face.a76f8cbf.svg\";","/* eslint-disable */\n\n/* Spatial Navigation Polyfill\n *\n * It follows W3C official specification\n * https://drafts.csswg.org/css-nav-1/\n *\n * Copyright (c) 2018-2019 LG Electronics Inc.\n * https://github.com/WICG/spatial-navigation/polyfill\n *\n * Licensed under the MIT license (MIT)\n */\n\n(function () {\n    // The polyfill must not be executed, if it's already enabled via browser engine or browser extensions.\n    if ('navigate' in window) {\n        return;\n    }\n\n    const ARROW_KEY_CODE = { 37: 'left', 38: 'up', 39: 'right', 40: 'down' };\n    const TAB_KEY_CODE = 9;\n    let mapOfBoundRect = null;\n    let startingPoint = null; // Saves spatial navigation starting point\n    let savedSearchOrigin = { element: null, rect: null }; // Saves previous search origin\n    let searchOriginRect = null; // Rect of current search origin\n\n    window.__getSpatNavState = () => {\n        return {\n            mapOfBoundRect,\n            startingPoint,\n            savedSearchOrigin,\n            searchOriginRect,\n        };\n    };\n\n    /**\n     * Initiate the spatial navigation features of the polyfill.\n     * @function initiateSpatialNavigation\n     */\n    function initiateSpatialNavigation() {\n        /*\n         * Bind the standards APIs to be exposed to the window object for authors\n         */\n        window.navigate = navigate;\n        window.Element.prototype.spatialNavigationSearch = spatialNavigationSearch;\n        window.Element.prototype.focusableAreas = focusableAreas;\n        window.Element.prototype.getSpatialNavigationContainer = getSpatialNavigationContainer;\n\n        /*\n         * CSS.registerProperty() from the Properties and Values API\n         * Reference: https://drafts.css-houdini.org/css-properties-values-api/#the-registerproperty-function\n         */\n        if (window.CSS && CSS.registerProperty) {\n            if (\n                window.getComputedStyle(document.documentElement).getPropertyValue('--spatial-navigation-contain') ===\n                ''\n            ) {\n                CSS.registerProperty({\n                    name: '--spatial-navigation-contain',\n                    syntax: 'auto | contain',\n                    inherits: false,\n                    initialValue: 'auto',\n                });\n            }\n\n            if (\n                window.getComputedStyle(document.documentElement).getPropertyValue('--spatial-navigation-action') === ''\n            ) {\n                CSS.registerProperty({\n                    name: '--spatial-navigation-action',\n                    syntax: 'auto | focus | scroll',\n                    inherits: false,\n                    initialValue: 'auto',\n                });\n            }\n\n            if (\n                window.getComputedStyle(document.documentElement).getPropertyValue('--spatial-navigation-function') ===\n                ''\n            ) {\n                CSS.registerProperty({\n                    name: '--spatial-navigation-function',\n                    syntax: 'normal | grid',\n                    inherits: false,\n                    initialValue: 'normal',\n                });\n            }\n        }\n    }\n\n    /**\n     * Add event handlers for the spatial navigation behavior.\n     * This function defines which input methods trigger the spatial navigation behavior.\n     * @function spatialNavigationHandler\n     */\n    function spatialNavigationHandler() {\n        /*\n         * keydown EventListener :\n         * If arrow key pressed, get the next focusing element and send it to focusing controller\n         */\n        window.addEventListener('keydown', (e) => {\n            const currentKeyMode =\n                (parent && parent.__spatialNavigation__.keyMode) || window.__spatialNavigation__.keyMode;\n            const eventTarget = document.activeElement;\n            const dir = ARROW_KEY_CODE[e.keyCode];\n\n            if (e.keyCode === TAB_KEY_CODE) {\n                startingPoint = null;\n            }\n\n            if (\n                !currentKeyMode ||\n                currentKeyMode === 'NONE' ||\n                (currentKeyMode === 'SHIFTARROW' && !e.shiftKey) ||\n                (currentKeyMode === 'ARROW' && e.shiftKey) ||\n                e.ctrlKey ||\n                e.metaKey ||\n                e.altKey\n            )\n                return;\n\n            if (!e.defaultPrevented) {\n                let focusNavigableArrowKey = {\n                    left: true,\n                    up: true,\n                    right: true,\n                    down: true,\n                };\n\n                // Edge case (text input, area) : Don't move focus, just navigate cursor in text area\n                if (eventTarget.nodeName === 'INPUT' || eventTarget.nodeName === 'TEXTAREA') {\n                    focusNavigableArrowKey = handlingEditableElement(e);\n                }\n\n                if (focusNavigableArrowKey[dir]) {\n                    e.preventDefault();\n                    mapOfBoundRect = new Map();\n\n                    navigate(dir);\n\n                    mapOfBoundRect = null;\n                    startingPoint = null;\n                }\n            }\n        });\n\n        /*\n         * mouseup EventListener :\n         * If the mouse click a point in the page, the point will be the starting point.\n         * NOTE: Let UA set the spatial navigation starting point based on click\n         */\n        document.addEventListener('mouseup', (e) => {\n            startingPoint = { x: e.clientX, y: e.clientY };\n        });\n\n        /*\n         * focusin EventListener :\n         * When the element get the focus, save it and its DOMRect for resetting the search origin\n         * if it disappears.\n         */\n        window.addEventListener('focusin', (e) => {\n            if (e.target !== window) {\n                savedSearchOrigin.element = e.target;\n                savedSearchOrigin.rect = e.target.getBoundingClientRect();\n            }\n        });\n    }\n\n    /**\n     * Enable the author to trigger spatial navigation programmatically, as if the user had done so manually.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#dom-window-navigate}\n     * @function navigate\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     */\n    function navigate(dir) {\n        // spatial navigation steps\n\n        // 1\n        const searchOrigin = findSearchOrigin();\n        console.log(searchOrigin);\n        let eventTarget = searchOrigin;\n        let elementFromPosition = null;\n\n        // 2 Optional step, UA defined starting point\n        if (startingPoint) {\n            // if there is a starting point, set eventTarget as the element from position for getting the spatnav container\n            elementFromPosition = document.elementFromPoint(startingPoint.x, startingPoint.y);\n\n            // Use starting point if the starting point isn't inside the focusable element (but not container)\n            // * Starting point is meaningfull when:\n            // 1) starting point is inside the spatnav container\n            // 2) starting point is inside the non-focusable element\n            if (elementFromPosition === null) {\n                elementFromPosition = document.body;\n            }\n            if (isFocusable(elementFromPosition) && !isContainer(elementFromPosition)) {\n                startingPoint = null;\n            } else if (isContainer(elementFromPosition)) {\n                eventTarget = elementFromPosition;\n            } else {\n                eventTarget = elementFromPosition.getSpatialNavigationContainer();\n            }\n        }\n\n        // 4\n        if (eventTarget === window || eventTarget === document || eventTarget === document.documentElement) {\n            eventTarget = document.body || document.documentElement;\n        }\n\n        // 5\n        // At this point, spatialNavigationSearch can be applied.\n        // If startingPoint is either a scroll container or the document,\n        // find the best candidate within startingPoint\n        let container = null;\n        if ((isContainer(eventTarget) || eventTarget.nodeName === 'BODY') && !(eventTarget.nodeName === 'INPUT')) {\n            if (eventTarget.nodeName === 'IFRAME') {\n                eventTarget = eventTarget.contentDocument.documentElement;\n            }\n\n            container = container === window ? document.body : eventTarget;\n            let bestInsideCandidate = null;\n\n            // 5-2\n            if (\n                document.activeElement === searchOrigin ||\n                (document.activeElement === document.body && searchOrigin === document.documentElement)\n            ) {\n                if (getCSSSpatNavAction(eventTarget) === 'scroll') {\n                    if (scrollingController(eventTarget, dir)) return;\n                } else if (getCSSSpatNavAction(eventTarget) === 'focus') {\n                    bestInsideCandidate = eventTarget.spatialNavigationSearch(dir, {\n                        container: eventTarget,\n                        candidates: getSpatialNavigationCandidates(eventTarget, {\n                            mode: 'all',\n                        }),\n                    });\n                    if (focusingController(bestInsideCandidate, dir)) return;\n                } else if (getCSSSpatNavAction(eventTarget) === 'auto') {\n                    bestInsideCandidate = eventTarget.spatialNavigationSearch(dir, {\n                        container: eventTarget,\n                    });\n                    if (focusingController(bestInsideCandidate, dir) || scrollingController(eventTarget, dir)) return;\n                }\n            } else {\n                // when the previous search origin became offscreen\n                container = container.getSpatialNavigationContainer();\n            }\n        }\n\n        // 6\n        // Let container be the nearest ancestor of eventTarget\n        container = eventTarget.getSpatialNavigationContainer();\n        let parentContainer = container.parentElement ? container.getSpatialNavigationContainer() : null;\n\n        // When the container is the viewport of a browsing context\n        if (!parentContainer && window.location !== window.parent.location) {\n            parentContainer = window.parent.document.documentElement;\n        }\n\n        if (getCSSSpatNavAction(container) === 'scroll') {\n            if (scrollingController(container, dir)) return;\n        } else if (getCSSSpatNavAction(container) === 'focus') {\n            navigateChain(eventTarget, container, parentContainer, dir, 'all');\n        } else if (getCSSSpatNavAction(container) === 'auto') {\n            navigateChain(eventTarget, container, parentContainer, dir, 'visible');\n        }\n    }\n\n    /**\n     * Move the focus to the best candidate or do nothing.\n     * @function focusingController\n     * @param bestCandidate {Node} - The best candidate of the spatial navigation\n     * @param dir {SpatialNavigationDirection}- The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {boolean}\n     */\n    function focusingController(bestCandidate, dir) {\n        // 10 & 11\n        // When bestCandidate is found\n        if (bestCandidate) {\n            // When bestCandidate is a focusable element and not a container : move focus\n            /*\n             * [event] navbeforefocus : Fired before spatial or sequential navigation changes the focus.\n             */\n            if (!createSpatNavEvents('beforefocus', bestCandidate, null, dir)) return true;\n\n            const container = bestCandidate.getSpatialNavigationContainer();\n\n            if (container !== window && getCSSSpatNavAction(container) === 'focus') {\n                bestCandidate.focus();\n            } else {\n                bestCandidate.focus({ preventScroll: true });\n            }\n\n            startingPoint = null;\n            return true;\n        }\n\n        // When bestCandidate is not found within the scrollport of a container: Nothing\n        return false;\n    }\n\n    /**\n     * Directionally scroll the scrollable spatial navigation container if it can be manually scrolled more.\n     * @function scrollingController\n     * @param container {Node} - The spatial navigation container which can scroll\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {boolean}\n     */\n    function scrollingController(container, dir) {\n        // If there is any scrollable area among parent elements and it can be manually scrolled, scroll the document\n        if (isScrollable(container, dir) && !isScrollBoundary(container, dir)) {\n            moveScroll(container, dir);\n            return true;\n        }\n\n        // If the spatnav container is document and it can be scrolled, scroll the document\n        if (!container.parentElement && !isHTMLScrollBoundary(container, dir)) {\n            moveScroll(container.ownerDocument.documentElement, dir);\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Find the candidates within a spatial navigation container include delegable container.\n     * This function does not search inside delegable container or focusable container.\n     * In other words, this return candidates set is not included focusable elements inside delegable container or focusable container.\n     *\n     * @function getSpatialNavigationCandidates\n     * @param container {Node} - The spatial navigation container\n     * @param option {FocusableAreasOptions} - 'mode' attribute takes 'visible' or 'all' for searching the boundary of focusable elements.\n     *                                          Default value is 'visible'.\n     * @returns {sequence<Node>} candidate elements within the container\n     */\n    function getSpatialNavigationCandidates(container, option = { mode: 'visible' }) {\n        let candidates = [];\n\n        if (container.childElementCount > 0) {\n            if (!container.parentElement) {\n                container = container.getElementsByTagName('body')[0] || document.body;\n            }\n            const children = container.children;\n            for (const elem of children) {\n                if (isDelegableContainer(elem)) {\n                    candidates.push(elem);\n                } else if (isFocusable(elem)) {\n                    candidates.push(elem);\n\n                    if (!isContainer(elem) && elem.childElementCount) {\n                        candidates = candidates.concat(getSpatialNavigationCandidates(elem, { mode: 'all' }));\n                    }\n                } else if (elem.childElementCount) {\n                    candidates = candidates.concat(getSpatialNavigationCandidates(elem, { mode: 'all' }));\n                }\n            }\n        }\n\n        //   console.log(candidates)\n        return option.mode === 'all' ? candidates : candidates.filter(isVisible);\n    }\n\n    /**\n     * Find the candidates among focusable elements within a spatial navigation container from the search origin (currently focused element)\n     * depending on the directional information.\n     * @function getFilteredSpatialNavigationCandidates\n     * @param element {Node} - The currently focused element which is defined as 'search origin' in the spec\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @param candidates {sequence<Node>} - The candidates for spatial navigation without the directional information\n     * @param container {Node} - The spatial navigation container\n     * @returns {Node} The candidates for spatial navigation considering the directional information\n     */\n    function getFilteredSpatialNavigationCandidates(element, dir, candidates, container) {\n        const targetElement = element;\n        // Removed below line due to a bug. (iframe body rect is sometime weird.)\n        // const targetElement = (element.nodeName === 'IFRAME') ? element.contentDocument.body : element;\n        // If the container is unknown, get the closest container from the element\n        container = container || targetElement.getSpatialNavigationContainer();\n\n        // If the candidates is unknown, find candidates\n        // 5-1\n        candidates = !candidates || candidates.length <= 0 ? getSpatialNavigationCandidates(container) : candidates;\n        return filteredCandidates(targetElement, candidates, dir, container);\n    }\n\n    /**\n     * Find the best candidate among the candidates within the container from the search origin (currently focused element)\n     * @see {@link https://drafts.csswg.org/css-nav-1/#dom-element-spatialnavigationsearch}\n     * @function spatialNavigationSearch\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @param candidates {sequence<Node>} - The candidates for spatial navigation\n     * @param container {Node} - The spatial navigation container\n     * @returns {Node} The best candidate which will gain the focus\n     */\n    function spatialNavigationSearch(dir, args) {\n        const targetElement = this;\n        let internalCandidates = [];\n        let externalCandidates = [];\n        let insideOverlappedCandidates = getOverlappedCandidates(targetElement);\n        let bestTarget;\n\n        // Set default parameter value\n        if (!args) args = {};\n\n        const defaultContainer = targetElement.getSpatialNavigationContainer();\n        let defaultCandidates = getSpatialNavigationCandidates(defaultContainer);\n        const container = args.container || defaultContainer;\n        if (args.container && defaultContainer.contains(args.container)) {\n            defaultCandidates = defaultCandidates.concat(getSpatialNavigationCandidates(container));\n        }\n        const candidates =\n            args.candidates && args.candidates.length > 0\n                ? args.candidates.filter((candidate) => container.contains(candidate))\n                : defaultCandidates.filter((candidate) => container.contains(candidate) && container !== candidate);\n\n        // Find the best candidate\n        // 5\n        // If startingPoint is either a scroll container or the document,\n        // find the best candidate within startingPoint\n        if (candidates && candidates.length > 0) {\n            // Divide internal or external candidates\n            candidates.forEach((candidate) => {\n                if (candidate !== targetElement) {\n                    (targetElement.contains(candidate) && targetElement !== candidate\n                            ? internalCandidates\n                            : externalCandidates\n                    ).push(candidate);\n                }\n            });\n\n            // include overlapped element to the internalCandidates\n            let fullyOverlapped = insideOverlappedCandidates.filter(\n                (candidate) => !internalCandidates.includes(candidate),\n            );\n            let overlappedContainer = candidates.filter(\n                (candidate) => isContainer(candidate) && isEntirelyVisible(targetElement, candidate),\n            );\n            let overlappedByParent = overlappedContainer\n                .map((elm) => elm.focusableAreas())\n                .flat()\n                .filter((candidate) => candidate !== targetElement);\n\n            internalCandidates = internalCandidates\n                .concat(fullyOverlapped)\n                .filter((candidate) => container.contains(candidate));\n            externalCandidates = externalCandidates\n                .concat(overlappedByParent)\n                .filter((candidate) => container.contains(candidate));\n\n            // Filter external Candidates\n            if (externalCandidates.length > 0) {\n                externalCandidates = getFilteredSpatialNavigationCandidates(\n                    targetElement,\n                    dir,\n                    externalCandidates,\n                    container,\n                );\n            }\n\n            // If there isn't search origin element but search orgin rect exist  (search origin isn't in the layout case)\n            if (searchOriginRect) {\n                bestTarget = selectBestCandidate(\n                    targetElement,\n                    getFilteredSpatialNavigationCandidates(targetElement, dir, internalCandidates, container),\n                    dir,\n                );\n            }\n\n            if (internalCandidates && internalCandidates.length > 0 && !(targetElement.nodeName === 'INPUT')) {\n                bestTarget = selectBestCandidateFromEdge(targetElement, internalCandidates, dir);\n            }\n\n            bestTarget = bestTarget || selectBestCandidate(targetElement, externalCandidates, dir);\n\n            if (bestTarget && isDelegableContainer(bestTarget)) {\n                // if best target is delegable container, then find descendants candidate inside delegable container.\n                const innerTarget = getSpatialNavigationCandidates(bestTarget, {\n                    mode: 'all',\n                });\n                const descendantsBest =\n                    innerTarget.length > 0\n                        ? targetElement.spatialNavigationSearch(dir, {\n                            candidates: innerTarget,\n                            container: bestTarget,\n                        })\n                        : null;\n                if (descendantsBest) {\n                    bestTarget = descendantsBest;\n                } else if (!isFocusable(bestTarget)) {\n                    // if there is no target inside bestTarget and delegable container is not focusable,\n                    // then try to find another best target without curren best target.\n                    candidates.splice(candidates.indexOf(bestTarget), 1);\n                    bestTarget = candidates.length\n                        ? targetElement.spatialNavigationSearch(dir, {\n                            candidates: candidates,\n                            container: container,\n                        })\n                        : null;\n                }\n            }\n            return bestTarget;\n        }\n\n        return null;\n    }\n\n    /**\n     * Get the filtered candidate among candidates.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#select-the-best-candidate}\n     * @function filteredCandidates\n     * @param currentElm {Node} - The currently focused element which is defined as 'search origin' in the spec\n     * @param candidates {sequence<Node>} - The candidates for spatial navigation\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @param container {Node} - The spatial navigation container\n     * @returns {sequence<Node>} The filtered candidates which are not the search origin and not in the given spatial navigation direction from the search origin\n     */\n    // TODO: Need to fix filtering the candidates with more clean code\n    function filteredCandidates(currentElm, candidates, dir, container) {\n        const originalContainer = currentElm.getSpatialNavigationContainer();\n        let eventTargetRect;\n\n        // If D(dir) is null, let candidates be the same as visibles\n        if (dir === undefined) return candidates;\n\n        // Offscreen handling when originalContainer is not <HTML>\n        if (originalContainer.parentElement && container !== originalContainer && !isVisible(currentElm)) {\n            eventTargetRect = getBoundingClientRect(originalContainer);\n        } else {\n            eventTargetRect = searchOriginRect || getBoundingClientRect(currentElm);\n        }\n\n        /*\n         * Else, let candidates be the subset of the elements in visibles\n         * whose principal box’s geometric center is within the closed half plane\n         * whose boundary goes through the geometric center of starting point and is perpendicular to D.\n         */\n        if ((isContainer(currentElm) || currentElm.nodeName === 'BODY') && !(currentElm.nodeName === 'INPUT')) {\n            return candidates.filter((candidate) => {\n                const candidateRect = getBoundingClientRect(candidate);\n                return (\n                    container.contains(candidate) &&\n                    ((currentElm.contains(candidate) &&\n                        isInside(eventTargetRect, candidateRect) &&\n                        candidate !== currentElm) ||\n                        isOutside(candidateRect, eventTargetRect, dir))\n                );\n            });\n        } else {\n            return candidates.filter((candidate) => {\n                const candidateRect = getBoundingClientRect(candidate);\n                const candidateBody = candidate.nodeName === 'IFRAME' ? candidate.contentDocument.body : null;\n                return (\n                    container.contains(candidate) &&\n                    candidate !== currentElm &&\n                    candidateBody !== currentElm &&\n                    isOutside(candidateRect, eventTargetRect, dir) &&\n                    !isInside(eventTargetRect, candidateRect)\n                );\n            });\n        }\n    }\n\n    /**\n     * Select the best candidate among given candidates.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#select-the-best-candidate}\n     * @function selectBestCandidate\n     * @param currentElm {Node} - The currently focused element which is defined as 'search origin' in the spec\n     * @param candidates {sequence<Node>} - The candidates for spatial navigation\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {Node} The best candidate which will gain the focus\n     */\n    function selectBestCandidate(currentElm, candidates, dir) {\n        const container = currentElm.getSpatialNavigationContainer();\n        const spatialNavigationFunction = getComputedStyle(container).getPropertyValue('--spatial-navigation-function');\n        const currentTargetRect = searchOriginRect || getBoundingClientRect(currentElm);\n        let distanceFunction;\n        let alignedCandidates;\n\n        switch (spatialNavigationFunction) {\n            case 'grid':\n                alignedCandidates = candidates.filter((elm) =>\n                    isAligned(currentTargetRect, getBoundingClientRect(elm), dir),\n                );\n                if (alignedCandidates.length > 0) {\n                    candidates = alignedCandidates;\n                }\n                distanceFunction = getAbsoluteDistance;\n                break;\n            default:\n                distanceFunction = getDistance;\n                break;\n        }\n        return getClosestElement(currentElm, candidates, dir, distanceFunction);\n    }\n\n    /**\n     * Select the best candidate among candidates by finding the closet candidate from the edge of the currently focused element (search origin).\n     * @see {@link https://drafts.csswg.org/css-nav-1/#select-the-best-candidate (Step 5)}\n     * @function selectBestCandidateFromEdge\n     * @param currentElm {Node} - The currently focused element which is defined as 'search origin' in the spec\n     * @param candidates {sequence<Node>} - The candidates for spatial navigation\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {Node} The best candidate which will gain the focus\n     */\n    function selectBestCandidateFromEdge(currentElm, candidates, dir) {\n        if (startingPoint) return getClosestElement(currentElm, candidates, dir, getDistanceFromPoint);\n        else return getClosestElement(currentElm, candidates, dir, getInnerDistance);\n    }\n\n    /**\n     * Select the closest candidate from the currently focused element (search origin) among candidates by using the distance function.\n     * @function getClosestElement\n     * @param currentElm {Node} - The currently focused element which is defined as 'search origin' in the spec\n     * @param candidates {sequence<Node>} - The candidates for spatial navigation\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @param distanceFunction {function} - The distance function which measures the distance from the search origin to each candidate\n     * @returns {Node} The candidate which is the closest one from the search origin\n     */\n    function getClosestElement(currentElm, candidates, dir, distanceFunction) {\n        let eventTargetRect = null;\n        if (\n            window.location !== window.parent.location &&\n            (currentElm.nodeName === 'BODY' || currentElm.nodeName === 'HTML')\n        ) {\n            // If the eventTarget is iframe, then get rect of it based on its containing document\n            // Set the iframe's position as (0,0) because the rects of elements inside the iframe don't know the real iframe's position.\n            eventTargetRect = window.frameElement.getBoundingClientRect();\n            eventTargetRect.x = 0;\n            eventTargetRect.y = 0;\n        } else {\n            eventTargetRect = searchOriginRect || currentElm.getBoundingClientRect();\n        }\n\n        let minDistance = Number.POSITIVE_INFINITY;\n        let minDistanceElements = [];\n\n        if (candidates) {\n            for (let i = 0; i < candidates.length; i++) {\n                const distance = distanceFunction(eventTargetRect, getBoundingClientRect(candidates[i]), dir);\n\n                // If the same distance, the candidate will be selected in the DOM order\n                if (distance < minDistance) {\n                    minDistance = distance;\n                    minDistanceElements = [candidates[i]];\n                } else if (distance === minDistance) {\n                    minDistanceElements.push(candidates[i]);\n                }\n            }\n        }\n        if (minDistanceElements.length === 0) return null;\n\n        return minDistanceElements.length > 1 && distanceFunction === getAbsoluteDistance\n            ? getClosestElement(currentElm, minDistanceElements, dir, getEuclideanDistance)\n            : minDistanceElements[0];\n    }\n\n    /**\n     * Get container of an element.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#dom-element-getspatialnavigationcontainer}\n     * @module Element\n     * @function getSpatialNavigationContainer\n     * @returns {Node} The spatial navigation container\n     */\n    function getSpatialNavigationContainer() {\n        let container = this;\n\n        do {\n            if (!container.parentElement) {\n                if (window.location !== window.parent.location) {\n                    container = window.parent.document.documentElement;\n                } else {\n                    container = window.document.documentElement;\n                }\n                break;\n            } else {\n                container = container.parentElement;\n            }\n\n            // console.log(container, isContainer(container));\n        } while (!isContainer(container));\n        return container;\n    }\n\n    /**\n     * Get nearest scroll container of an element.\n     * @function getScrollContainer\n     * @param Element\n     * @returns {Node} The spatial navigation container\n     */\n    function getScrollContainer(element) {\n        let scrollContainer = element;\n\n        do {\n            if (!scrollContainer.parentElement) {\n                if (window.location !== window.parent.location) {\n                    scrollContainer = window.parent.document.documentElement;\n                } else {\n                    scrollContainer = window.document.documentElement;\n                }\n                break;\n            } else {\n                scrollContainer = scrollContainer.parentElement;\n            }\n        } while (!isScrollContainer(scrollContainer) || !isVisible(scrollContainer));\n\n        if (scrollContainer === document || scrollContainer === document.documentElement) {\n            scrollContainer = window;\n        }\n\n        return scrollContainer;\n    }\n\n    /**\n     * Find focusable elements within the spatial navigation container.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#dom-element-focusableareas}\n     * @function focusableAreas\n     * @param option {FocusableAreasOptions} - 'mode' attribute takes 'visible' or 'all' for searching the boundary of focusable elements.\n     *                                          Default value is 'visible'.\n     * @returns {sequence<Node>} All focusable elements or only visible focusable elements within the container\n     */\n    function focusableAreas(option = { mode: 'visible' }) {\n        const container = this.parentElement ? this : document.body;\n        const focusables = Array.prototype.filter.call(container.getElementsByTagName('*'), isFocusable);\n        return option.mode === 'all' ? focusables : focusables.filter(isVisible);\n    }\n\n    /**\n     * Create the NavigationEvent: navbeforefocus, navnotarget\n     * @see {@link https://drafts.csswg.org/css-nav-1/#events-navigationevent}\n     * @function createSpatNavEvents\n     * @param option {string} - Type of the navigation event (beforefocus, notarget)\n     * @param element {Node} - The target element of the event\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     */\n    function createSpatNavEvents(eventType, containerElement, currentElement, direction) {\n        if (['beforefocus', 'notarget'].includes(eventType)) {\n            const data = {\n                causedTarget: currentElement,\n                dir: direction,\n            };\n            const triggeredEvent = new CustomEvent('nav' + eventType, {\n                bubbles: true,\n                cancelable: true,\n                detail: data,\n            });\n            return containerElement.dispatchEvent(triggeredEvent);\n        }\n    }\n\n    /**\n     * Get the value of the CSS custom property of the element\n     * @function readCssVar\n     * @param element {Node}\n     * @param varName {string} - The name of the css custom property without '--'\n     * @returns {string} The value of the css custom property\n     */\n    function readCssVar(element, varName) {\n        return getComputedStyle(element).getPropertyValue(`--${varName}`).trim();\n    }\n\n    /**\n     * Decide whether or not the 'contain' value is given to 'spatial-navigation-contain' css property of an element\n     * @function isCSSSpatNavContain\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isCSSSpatNavContain(element) {\n        return readCssVar(element, 'spatial-navigation-contain') === 'contain';\n    }\n\n    /**\n     * Return the value of 'spatial-navigation-action' css property of an element\n     * @function getCSSSpatNavAction\n     * @param element {Node} - would be the spatial navigation container\n     * @returns {string} auto | focus | scroll\n     */\n    function getCSSSpatNavAction(element) {\n        return 'focus';\n        //   return readCssVar(element, 'spatial-navigation-action') || 'auto';\n    }\n\n    /**\n     * Only move the focus with spatial navigation. Manually scrolling isn't available.\n     * @function navigateChain\n     * @param eventTarget {Node} - currently focused element\n     * @param container {SpatialNavigationContainer} - container\n     * @param parentContainer {SpatialNavigationContainer} - parent container\n     * @param option - visible || all\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     */\n    function navigateChain(eventTarget, container, parentContainer, dir, option) {\n        let currentOption = {\n            candidates: getSpatialNavigationCandidates(container, { mode: option }),\n            container,\n        };\n        //   console.log(currentOption)\n\n        while (parentContainer) {\n            if (focusingController(eventTarget.spatialNavigationSearch(dir, currentOption), dir)) {\n                return;\n            } else {\n                if (option === 'visible' && scrollingController(container, dir)) return;\n                else {\n                    if (!createSpatNavEvents('notarget', container, eventTarget, dir)) return;\n\n                    // find the container\n                    if (container === document || container === document.documentElement) {\n                        if (window.location !== window.parent.location) {\n                            // The page is in an iframe. eventTarget needs to be reset because the position of the element in the iframe\n                            eventTarget = window.frameElement;\n                            container = eventTarget.ownerDocument.documentElement;\n                        }\n                    } else {\n                        container = parentContainer;\n                    }\n                    currentOption = {\n                        candidates: getSpatialNavigationCandidates(container, {\n                            mode: option,\n                        }),\n                        container,\n                    };\n                    let nextContainer = container.getSpatialNavigationContainer();\n\n                    if (nextContainer !== container) {\n                        parentContainer = nextContainer;\n                    } else {\n                        parentContainer = null;\n                    }\n                }\n            }\n        }\n\n        currentOption = {\n            candidates: getSpatialNavigationCandidates(container, { mode: option }),\n            container,\n        };\n\n        // Behavior after 'navnotarget' - Getting out from the current spatnav container\n        if (\n            !parentContainer &&\n            container &&\n            focusingController(eventTarget.spatialNavigationSearch(dir, currentOption), dir)\n        )\n            return;\n\n        if (!createSpatNavEvents('notarget', currentOption.container, eventTarget, dir)) return;\n\n        if (getCSSSpatNavAction(container) === 'auto' && option === 'visible') {\n            if (scrollingController(container, dir)) return;\n        }\n    }\n\n    /**\n     * Find search origin\n     * @see {@link https://drafts.csswg.org/css-nav-1/#nav}\n     * @function findSearchOrigin\n     * @returns {Node} The search origin for the spatial navigation\n     */\n    function findSearchOrigin() {\n        let searchOrigin = document.activeElement;\n\n        if (!searchOrigin || (searchOrigin === document.body && !document.querySelector(':focus'))) {\n            // When the previous search origin lost its focus by blur: (1) disable attribute (2) visibility: hidden\n            if (savedSearchOrigin.element && searchOrigin !== savedSearchOrigin.element) {\n                const elementStyle = window.getComputedStyle(savedSearchOrigin.element, null);\n                const invisibleStyle = ['hidden', 'collapse'];\n\n                if (\n                    savedSearchOrigin.element.disabled ||\n                    invisibleStyle.includes(elementStyle.getPropertyValue('visibility'))\n                ) {\n                    searchOrigin = savedSearchOrigin.element;\n                    return searchOrigin;\n                }\n            }\n            searchOrigin = document.documentElement;\n        }\n        // When the previous search origin lost its focus by blur: (1) display:none () element size turned into zero\n        if (\n            savedSearchOrigin.element &&\n            (getBoundingClientRect(savedSearchOrigin.element).height === 0 ||\n                getBoundingClientRect(savedSearchOrigin.element).width === 0)\n        ) {\n            (startingPoint = (savedSearchOrigin.left + savedSearchOrigin.right) / 2),\n            (savedSearchOrigin.top + savedSearchOrigin.bottom) / 2;\n            // searchOriginRect = savedSearchOrigin.rect;\n        }\n\n        if (!isVisibleInScroller(searchOrigin)) {\n            const scroller = getScrollContainer(searchOrigin);\n            if (scroller && (scroller === window || getCSSSpatNavAction(scroller) === 'auto')) return scroller;\n        }\n        return searchOrigin;\n    }\n\n    /**\n     * Move the scroll of an element depending on the given spatial navigation directrion\n     * (Assume that User Agent defined distance is '40px')\n     * @see {@link https://drafts.csswg.org/css-nav-1/#directionally-scroll-an-element}\n     * @function moveScroll\n     * @param element {Node} - The scrollable element\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @param offset {Number} - The explicit amount of offset for scrolling. Default value is 0.\n     */\n    function moveScroll(element, dir, offset = 0) {\n        if (element) {\n            switch (dir) {\n                case 'left':\n                    element.scrollLeft -= 40 + offset;\n                    break;\n                case 'right':\n                    element.scrollLeft += 40 + offset;\n                    break;\n                case 'up':\n                    element.scrollTop -= 40 + offset;\n                    break;\n                case 'down':\n                    element.scrollTop += 40 + offset;\n                    break;\n            }\n        }\n    }\n\n    /**\n     * Decide whether an element is container or not.\n     * @function isContainer\n     * @param element {Node} element\n     * @returns {boolean}\n     */\n    function isContainer(element) {\n        return (\n            !element.parentElement ||\n            element.nodeName === 'IFRAME' ||\n            isScrollContainer(element) ||\n            isCSSSpatNavContain(element)\n        );\n    }\n\n    /**\n     * Decide whether an element is delegable container or not.\n     * NOTE: THIS IS NON-NORMATIVE API.\n     * @function isDelegableContainer\n     * @param element {Node} element\n     * @returns {boolean}\n     */\n    function isDelegableContainer(element) {\n        return readCssVar(element, 'spatial-navigation-contain') === 'delegable';\n    }\n\n    /**\n     * Decide whether an element is a scrollable container or not.\n     * @see {@link https://drafts.csswg.org/css-overflow-3/#scroll-container}\n     * @function isScrollContainer\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isScrollContainer(element) {\n        const elementStyle = window.getComputedStyle(element, null);\n        const overflowX = elementStyle.getPropertyValue('overflow-x');\n        const overflowY = elementStyle.getPropertyValue('overflow-y');\n\n        return (overflowX !== 'visible' && overflowX !== 'clip' && isOverflow(element, 'left')) ||\n        (overflowY !== 'visible' && overflowY !== 'clip' && isOverflow(element, 'down'))\n            ? true\n            : false;\n    }\n\n    /**\n     * Decide whether this element is scrollable or not.\n     * NOTE: If the value of 'overflow' is given to either 'visible', 'clip', or 'hidden', the element isn't scrollable.\n     *       If the value is 'hidden', the element can be only programmically scrollable. (https://drafts.csswg.org/css-overflow-3/#valdef-overflow-hidden)\n     * @function isScrollable\n     * @param element {Node}\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {boolean}\n     */\n    function isScrollable(element, dir) {\n        // element, dir\n        if (element && typeof element === 'object') {\n            if (dir && typeof dir === 'string') {\n                // parameter: dir, element\n                if (isOverflow(element, dir)) {\n                    // style property\n                    const elementStyle = window.getComputedStyle(element, null);\n                    const overflowX = elementStyle.getPropertyValue('overflow-x');\n                    const overflowY = elementStyle.getPropertyValue('overflow-y');\n\n                    switch (dir) {\n                        case 'left':\n                        /* falls through */\n                        case 'right':\n                            return overflowX !== 'visible' && overflowX !== 'clip' && overflowX !== 'hidden';\n                        case 'up':\n                        /* falls through */\n                        case 'down':\n                            return overflowY !== 'visible' && overflowY !== 'clip' && overflowY !== 'hidden';\n                    }\n                }\n                return false;\n            } else {\n                // parameter: element\n                return (\n                    element.nodeName === 'HTML' ||\n                    element.nodeName === 'BODY' ||\n                    (isScrollContainer(element) && isOverflow(element))\n                );\n            }\n        }\n    }\n\n    /**\n     * Decide whether an element is overflow or not.\n     * @function isOverflow\n     * @param element {Node}\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {boolean}\n     */\n    function isOverflow(element, dir) {\n        if (element && typeof element === 'object') {\n            if (dir && typeof dir === 'string') {\n                // parameter: element, dir\n                switch (dir) {\n                    case 'left':\n                    /* falls through */\n                    case 'right':\n                        return element.scrollWidth > element.clientWidth;\n                    case 'up':\n                    /* falls through */\n                    case 'down':\n                        return element.scrollHeight > element.clientHeight;\n                }\n            } else {\n                // parameter: element\n                return element.scrollWidth > element.clientWidth || element.scrollHeight > element.clientHeight;\n            }\n            return false;\n        }\n    }\n\n    /**\n     * Decide whether the scrollbar of the browsing context reaches to the end or not.\n     * @function isHTMLScrollBoundary\n     * @param element {Node} - The top browsing context\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {boolean}\n     */\n    function isHTMLScrollBoundary(element, dir) {\n        let result = false;\n        switch (dir) {\n            case 'left':\n                result = element.scrollLeft === 0;\n                break;\n            case 'right':\n                result = element.scrollWidth - element.scrollLeft - element.clientWidth === 0;\n                break;\n            case 'up':\n                result = element.scrollTop === 0;\n                break;\n            case 'down':\n                result = element.scrollHeight - element.scrollTop - element.clientHeight === 0;\n                break;\n        }\n        return result;\n    }\n\n    /**\n     * Decide whether the scrollbar of an element reaches to the end or not.\n     * @function isScrollBoundary\n     * @param element {Node}\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {boolean}\n     */\n    function isScrollBoundary(element, dir) {\n        if (isScrollable(element, dir)) {\n            const winScrollY = element.scrollTop;\n            const winScrollX = element.scrollLeft;\n\n            const height = element.scrollHeight - element.clientHeight;\n            const width = element.scrollWidth - element.clientWidth;\n\n            switch (dir) {\n                case 'left':\n                    return winScrollX === 0;\n                case 'right':\n                    return Math.abs(winScrollX - width) <= 1;\n                case 'up':\n                    return winScrollY === 0;\n                case 'down':\n                    return Math.abs(winScrollY - height) <= 1;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Decide whether an element is inside the scorller viewport or not\n     *\n     * @function isVisibleInScroller\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isVisibleInScroller(element) {\n        const elementRect = element.getBoundingClientRect();\n        let nearestScroller = getScrollContainer(element);\n\n        let scrollerRect = null;\n        if (nearestScroller !== window) {\n            scrollerRect = getBoundingClientRect(nearestScroller);\n        } else {\n            scrollerRect = new DOMRect(0, 0, window.innerWidth, window.innerHeight);\n        }\n\n        if (isInside(scrollerRect, elementRect, 'left') && isInside(scrollerRect, elementRect, 'down')) return true;\n        else return false;\n    }\n\n    /**\n     * Decide whether an element is focusable for spatial navigation.\n     * 1. If element is the browsing context (document, iframe), then it's focusable,\n     * 2. If the element is scrollable container (regardless of scrollable axis), then it's focusable,\n     * 3. The value of tabIndex >= 0, then it's focusable,\n     * 4. If the element is disabled, it isn't focusable,\n     * 5. If the element is expressly inert, it isn't focusable,\n     * 6. Whether the element is being rendered or not.\n     *\n     * @function isFocusable\n     * @param element {Node}\n     * @returns {boolean}\n     *\n     * @see {@link https://html.spec.whatwg.org/multipage/interaction.html#focusable-area}\n     */\n    function isFocusable(element) {\n        if (\n            element.tabIndex < 0 ||\n            isAtagWithoutHref(element) ||\n            isActuallyDisabled(element) ||\n            isExpresslyInert(element) ||\n            !isBeingRendered(element)\n        )\n            return false;\n        else if (!element.parentElement || (isScrollable(element) && isOverflow(element)) || element.tabIndex >= 0)\n            return true;\n    }\n\n    /**\n     * Decide whether an element is a tag without href attribute or not.\n     *\n     * @function isAtagWithoutHref\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isAtagWithoutHref(element) {\n        return (\n            element.tagName === 'A' &&\n            element.getAttribute('href') === null &&\n            element.getAttribute('tabIndex') === null\n        );\n    }\n\n    /**\n     * Decide whether an element is actually disabled or not.\n     *\n     * @function isActuallyDisabled\n     * @param element {Node}\n     * @returns {boolean}\n     *\n     * @see {@link https://html.spec.whatwg.org/multipage/semantics-other.html#concept-element-disabled}\n     */\n    function isActuallyDisabled(element) {\n        if (['BUTTON', 'INPUT', 'SELECT', 'TEXTAREA', 'OPTGROUP', 'OPTION', 'FIELDSET'].includes(element.tagName))\n            return element.disabled;\n        else return false;\n    }\n\n    /**\n     * Decide whether the element is expressly inert or not.\n     * @see {@link https://html.spec.whatwg.org/multipage/interaction.html#expressly-inert}\n     * @function isExpresslyInert\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isExpresslyInert(element) {\n        return element.inert && !element.ownerDocument.documentElement.inert;\n    }\n\n    /**\n     * Decide whether the element is being rendered or not.\n     * 1. If an element has the style as \"visibility: hidden | collapse\" or \"display: none\", it is not being rendered.\n     * 2. If an element has the style as \"opacity: 0\", it is not being rendered.(that is, invisible).\n     * 3. If width and height of an element are explicitly set to 0, it is not being rendered.\n     * 4. If a parent element is hidden, an element itself is not being rendered.\n     * (CSS visibility property and display property are inherited.)\n     * @see {@link https://html.spec.whatwg.org/multipage/rendering.html#being-rendered}\n     * @function isBeingRendered\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isBeingRendered(element) {\n        if (!isVisibleStyleProperty(element.parentElement)) return false;\n        if (\n            !isVisibleStyleProperty(element) ||\n            element.style.opacity === '0' ||\n            window.getComputedStyle(element).height === '0px' ||\n            window.getComputedStyle(element).width === '0px'\n        )\n            return false;\n        return true;\n    }\n\n    /**\n     * Decide whether this element is partially or completely visible to user agent.\n     * @function isVisible\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isVisible(element) {\n        return !element.parentElement || (isVisibleStyleProperty(element) && hitTest(element));\n    }\n\n    /**\n     * Decide whether this element is completely visible in this viewport for the arrow direction.\n     * @function isEntirelyVisible\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function isEntirelyVisible(element, container) {\n        const rect = getBoundingClientRect(element);\n        const containerElm = container || element.getSpatialNavigationContainer();\n        const containerRect = getBoundingClientRect(containerElm);\n\n        // FIXME: when element is bigger than container?\n        const entirelyVisible = !(\n            rect.left < containerRect.left ||\n            rect.right > containerRect.right ||\n            rect.top < containerRect.top ||\n            rect.bottom > containerRect.bottom\n        );\n\n        return entirelyVisible;\n    }\n\n    /**\n     * Decide the style property of this element is specified whether it's visible or not.\n     * @function isVisibleStyleProperty\n     * @param element {CSSStyleDeclaration}\n     * @returns {boolean}\n     */\n    function isVisibleStyleProperty(element) {\n        const elementStyle = window.getComputedStyle(element, null);\n        const thisVisibility = elementStyle.getPropertyValue('visibility');\n        const thisDisplay = elementStyle.getPropertyValue('display');\n        const invisibleStyle = ['hidden', 'collapse'];\n\n        return thisDisplay !== 'none' && !invisibleStyle.includes(thisVisibility);\n    }\n\n    /**\n     * Decide whether this element is entirely or partially visible within the viewport.\n     * @function hitTest\n     * @param element {Node}\n     * @returns {boolean}\n     */\n    function hitTest(element) {\n        const elementRect = getBoundingClientRect(element);\n        if (\n            element.nodeName !== 'IFRAME' &&\n            (elementRect.top < 0 ||\n                elementRect.left < 0 ||\n                elementRect.top > element.ownerDocument.documentElement.clientHeight ||\n                elementRect.left > element.ownerDocument.documentElement.clientWidth)\n        )\n            return false;\n\n        let offsetX = parseInt(element.offsetWidth) / 10;\n        let offsetY = parseInt(element.offsetHeight) / 10;\n\n        offsetX = isNaN(offsetX) ? 1 : offsetX;\n        offsetY = isNaN(offsetY) ? 1 : offsetY;\n\n        const hitTestPoint = {\n            // For performance, just using the three point(middle, leftTop, rightBottom) of the element for hit testing\n            middle: [(elementRect.left + elementRect.right) / 2, (elementRect.top + elementRect.bottom) / 2],\n            leftTop: [elementRect.left + offsetX, elementRect.top + offsetY],\n            rightBottom: [elementRect.right - offsetX, elementRect.bottom - offsetY],\n        };\n\n        for (const point in hitTestPoint) {\n            const elemFromPoint = element.ownerDocument.elementFromPoint(...hitTestPoint[point]);\n            if (element === elemFromPoint || element.contains(elemFromPoint)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Decide whether a child element is entirely or partially Included within container visually.\n     * @function isInside\n     * @param containerRect {DOMRect}\n     * @param childRect {DOMRect}\n     * @returns {boolean}\n     */\n    function isInside(containerRect, childRect) {\n        const rightEdgeCheck = containerRect.left < childRect.right && containerRect.right >= childRect.right;\n        const leftEdgeCheck = containerRect.left <= childRect.left && containerRect.right > childRect.left;\n        const topEdgeCheck = containerRect.top <= childRect.top && containerRect.bottom > childRect.top;\n        const bottomEdgeCheck = containerRect.top < childRect.bottom && containerRect.bottom >= childRect.bottom;\n        return (rightEdgeCheck || leftEdgeCheck) && (topEdgeCheck || bottomEdgeCheck);\n    }\n\n    /**\n     * Decide whether this element is entirely or partially visible within the viewport.\n     * Note: rect1 is outside of rect2 for the dir\n     * @function isOutside\n     * @param rect1 {DOMRect}\n     * @param rect2 {DOMRect}\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {boolean}\n     */\n    function isOutside(rect1, rect2, dir) {\n        switch (dir) {\n            case 'left':\n                return isRightSide(rect2, rect1);\n            case 'right':\n                return isRightSide(rect1, rect2);\n            case 'up':\n                return isBelow(rect2, rect1);\n            case 'down':\n                return isBelow(rect1, rect2);\n            default:\n                return false;\n        }\n    }\n\n    /* rect1 is right of rect2 */\n    function isRightSide(rect1, rect2) {\n        return (\n            rect1.left >= rect2.right ||\n            (rect1.left >= rect2.left &&\n                rect1.right > rect2.right &&\n                rect1.bottom > rect2.top &&\n                rect1.top < rect2.bottom)\n        );\n    }\n\n    /* rect1 is below of rect2 */\n    function isBelow(rect1, rect2) {\n        return (\n            rect1.top >= rect2.bottom ||\n            (rect1.top >= rect2.top &&\n                rect1.bottom > rect2.bottom &&\n                rect1.left < rect2.right &&\n                rect1.right > rect2.left)\n        );\n    }\n\n    /* rect1 is completely aligned or partially aligned for the direction */\n    function isAligned(rect1, rect2, dir) {\n        switch (dir) {\n            case 'left':\n            /* falls through */\n            case 'right':\n                return rect1.bottom > rect2.top && rect1.top < rect2.bottom;\n            case 'up':\n            /* falls through */\n            case 'down':\n                return rect1.right > rect2.left && rect1.left < rect2.right;\n            default:\n                return false;\n        }\n    }\n\n    /**\n     * Get distance between the search origin and a candidate element along the direction when candidate element is inside the search origin.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#find-the-shortest-distance}\n     * @function getDistanceFromPoint\n     * @param point {Point} - The search origin\n     * @param element {DOMRect} - A candidate element\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {Number} The euclidian distance between the spatial navigation container and an element inside it\n     */\n    function getDistanceFromPoint(point, element, dir) {\n        point = startingPoint;\n        // Get exit point, entry point -> {x: '', y: ''};\n        const points = getEntryAndExitPoints(dir, point, element);\n\n        // Find the points P1 inside the border box of starting point and P2 inside the border box of candidate\n        // that minimize the distance between these two points\n        const P1 = Math.abs(points.entryPoint.x - points.exitPoint.x);\n        const P2 = Math.abs(points.entryPoint.y - points.exitPoint.y);\n\n        // The result is euclidian distance between P1 and P2.\n        return Math.sqrt(Math.pow(P1, 2) + Math.pow(P2, 2));\n    }\n\n    /**\n     * Get distance between the search origin and a candidate element along the direction when candidate element is inside the search origin.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#find-the-shortest-distance}\n     * @function getInnerDistance\n     * @param rect1 {DOMRect} - The search origin\n     * @param rect2 {DOMRect} - A candidate element\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {Number} The euclidean distance between the spatial navigation container and an element inside it\n     */\n    function getInnerDistance(rect1, rect2, dir) {\n        const baseEdgeForEachDirection = {\n            left: 'right',\n            right: 'left',\n            up: 'bottom',\n            down: 'top',\n        };\n        const baseEdge = baseEdgeForEachDirection[dir];\n\n        return Math.abs(rect1[baseEdge] - rect2[baseEdge]);\n    }\n\n    /**\n     * Get the distance between the search origin and a candidate element considering the direction.\n     * @see {@link https://drafts.csswg.org/css-nav-1/#calculating-the-distance}\n     * @function getDistance\n     * @param searchOrigin {DOMRect | Point} - The search origin\n     * @param candidateRect {DOMRect} - A candidate element\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {Number} The distance scoring between two elements\n     */\n    function getDistance(searchOrigin, candidateRect, dir) {\n        const kOrthogonalWeightForLeftRight = 30;\n        const kOrthogonalWeightForUpDown = 2;\n\n        let orthogonalBias = 0;\n        let alignBias = 0;\n        const alignWeight = 5.0;\n\n        // Get exit point, entry point -> {x: '', y: ''};\n        const points = getEntryAndExitPoints(dir, searchOrigin, candidateRect);\n\n        // Find the points P1 inside the border box of starting point and P2 inside the border box of candidate\n        // that minimize the distance between these two points\n        const P1 = Math.abs(points.entryPoint.x - points.exitPoint.x);\n        const P2 = Math.abs(points.entryPoint.y - points.exitPoint.y);\n\n        // A: The euclidean distance between P1 and P2.\n        const A = Math.sqrt(Math.pow(P1, 2) + Math.pow(P2, 2));\n        let B, C;\n\n        // B: The absolute distance in the direction which is orthogonal to dir between P1 and P2, or 0 if dir is null.\n        // C: The intersection edges between a candidate and the starting point.\n\n        // D: The square root of the area of intersection between the border boxes of candidate and starting point\n        const intersectionRect = getIntersectionRect(searchOrigin, candidateRect);\n        const D = intersectionRect.area;\n\n        switch (dir) {\n            case 'left':\n            /* falls through */\n            case 'right':\n                // If two elements are aligned, add align bias\n                // else, add orthogonal bias\n                if (isAligned(searchOrigin, candidateRect, dir))\n                    alignBias = Math.min(intersectionRect.height / searchOrigin.height, 1);\n                else orthogonalBias = searchOrigin.height / 2;\n\n                B = (P2 + orthogonalBias) * kOrthogonalWeightForLeftRight;\n                C = alignWeight * alignBias;\n                break;\n\n            case 'up':\n            /* falls through */\n            case 'down':\n                // If two elements are aligned, add align bias\n                // else, add orthogonal bias\n                if (isAligned(searchOrigin, candidateRect, dir))\n                    alignBias = Math.min(intersectionRect.width / searchOrigin.width, 1);\n                else orthogonalBias = searchOrigin.width / 2;\n\n                B = (P1 + orthogonalBias) * kOrthogonalWeightForUpDown;\n                C = alignWeight * alignBias;\n                break;\n\n            default:\n                B = 0;\n                C = 0;\n                break;\n        }\n\n        return A + B - C - D;\n    }\n\n    /**\n     * Get the euclidean distance between the search origin and a candidate element considering the direction.\n     * @function getEuclideanDistance\n     * @param rect1 {DOMRect} - The search origin\n     * @param rect2 {DOMRect} - A candidate element\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {Number} The distance scoring between two elements\n     */\n    function getEuclideanDistance(rect1, rect2, dir) {\n        // Get exit point, entry point\n        const points = getEntryAndExitPoints(dir, rect1, rect2);\n\n        // Find the points P1 inside the border box of starting point and P2 inside the border box of candidate\n        // that minimize the distance between these two points\n        const P1 = Math.abs(points.entryPoint.x - points.exitPoint.x);\n        const P2 = Math.abs(points.entryPoint.y - points.exitPoint.y);\n\n        // Return the euclidean distance between P1 and P2.\n        return Math.sqrt(Math.pow(P1, 2) + Math.pow(P2, 2));\n    }\n\n    /**\n     * Get the absolute distance between the search origin and a candidate element considering the direction.\n     * @function getAbsoluteDistance\n     * @param rect1 {DOMRect} - The search origin\n     * @param rect2 {DOMRect} - A candidate element\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD)\n     * @returns {Number} The distance scoring between two elements\n     */\n    function getAbsoluteDistance(rect1, rect2, dir) {\n        // Get exit point, entry point\n        const points = getEntryAndExitPoints(dir, rect1, rect2);\n\n        // Return the absolute distance in the dir direction between P1 and P.\n        return dir === 'left' || dir === 'right'\n            ? Math.abs(points.entryPoint.x - points.exitPoint.x)\n            : Math.abs(points.entryPoint.y - points.exitPoint.y);\n    }\n\n    /**\n     * Get entry point and exit point of two elements considering the direction.\n     * @function getEntryAndExitPoints\n     * @param dir {SpatialNavigationDirection} - The directional information for the spatial navigation (e.g. LRUD). Default value for dir is 'down'.\n     * @param searchOrigin {DOMRect | Point} - The search origin which contains the exit point\n     * @param candidateRect {DOMRect} - One of candidates which contains the entry point\n     * @returns {Points} The exit point from the search origin and the entry point from a candidate\n     */\n    function getEntryAndExitPoints(dir = 'down', searchOrigin, candidateRect) {\n        /**\n         * User type definition for Point\n         * @typeof {Object} Points\n         * @property {Point} Points.entryPoint\n         * @property {Point} Points.exitPoint\n         */\n        const points = { entryPoint: { x: 0, y: 0 }, exitPoint: { x: 0, y: 0 } };\n\n        if (startingPoint) {\n            points.exitPoint = searchOrigin;\n\n            switch (dir) {\n                case 'left':\n                    points.entryPoint.x = candidateRect.right;\n                    break;\n                case 'up':\n                    points.entryPoint.y = candidateRect.bottom;\n                    break;\n                case 'right':\n                    points.entryPoint.x = candidateRect.left;\n                    break;\n                case 'down':\n                    points.entryPoint.y = candidateRect.top;\n                    break;\n            }\n\n            // Set orthogonal direction\n            switch (dir) {\n                case 'left':\n                case 'right':\n                    if (startingPoint.y <= candidateRect.top) {\n                        points.entryPoint.y = candidateRect.top;\n                    } else if (startingPoint.y < candidateRect.bottom) {\n                        points.entryPoint.y = startingPoint.y;\n                    } else {\n                        points.entryPoint.y = candidateRect.bottom;\n                    }\n                    break;\n\n                case 'up':\n                case 'down':\n                    if (startingPoint.x <= candidateRect.left) {\n                        points.entryPoint.x = candidateRect.left;\n                    } else if (startingPoint.x < candidateRect.right) {\n                        points.entryPoint.x = startingPoint.x;\n                    } else {\n                        points.entryPoint.x = candidateRect.right;\n                    }\n                    break;\n            }\n        } else {\n            // Set direction\n            switch (dir) {\n                case 'left':\n                    points.exitPoint.x = searchOrigin.left;\n                    points.entryPoint.x =\n                        candidateRect.right < searchOrigin.left ? candidateRect.right : searchOrigin.left;\n                    break;\n                case 'up':\n                    points.exitPoint.y = searchOrigin.top;\n                    points.entryPoint.y =\n                        candidateRect.bottom < searchOrigin.top ? candidateRect.bottom : searchOrigin.top;\n                    break;\n                case 'right':\n                    points.exitPoint.x = searchOrigin.right;\n                    points.entryPoint.x =\n                        candidateRect.left > searchOrigin.right ? candidateRect.left : searchOrigin.right;\n                    break;\n                case 'down':\n                    points.exitPoint.y = searchOrigin.bottom;\n                    points.entryPoint.y =\n                        candidateRect.top > searchOrigin.bottom ? candidateRect.top : searchOrigin.bottom;\n                    break;\n            }\n\n            // Set orthogonal direction\n            switch (dir) {\n                case 'left':\n                case 'right':\n                    if (isBelow(searchOrigin, candidateRect)) {\n                        points.exitPoint.y = searchOrigin.top;\n                        points.entryPoint.y =\n                            candidateRect.bottom < searchOrigin.top ? candidateRect.bottom : searchOrigin.top;\n                    } else if (isBelow(candidateRect, searchOrigin)) {\n                        points.exitPoint.y = searchOrigin.bottom;\n                        points.entryPoint.y =\n                            candidateRect.top > searchOrigin.bottom ? candidateRect.top : searchOrigin.bottom;\n                    } else {\n                        points.exitPoint.y = Math.max(searchOrigin.top, candidateRect.top);\n                        points.entryPoint.y = points.exitPoint.y;\n                    }\n                    break;\n\n                case 'up':\n                case 'down':\n                    if (isRightSide(searchOrigin, candidateRect)) {\n                        points.exitPoint.x = searchOrigin.left;\n                        points.entryPoint.x =\n                            candidateRect.right < searchOrigin.left ? candidateRect.right : searchOrigin.left;\n                    } else if (isRightSide(candidateRect, searchOrigin)) {\n                        points.exitPoint.x = searchOrigin.right;\n                        points.entryPoint.x =\n                            candidateRect.left > searchOrigin.right ? candidateRect.left : searchOrigin.right;\n                    } else {\n                        points.exitPoint.x = Math.max(searchOrigin.left, candidateRect.left);\n                        points.entryPoint.x = points.exitPoint.x;\n                    }\n                    break;\n            }\n        }\n\n        return points;\n    }\n\n    /**\n     * Find focusable elements within the container\n     * @see {@link https://drafts.csswg.org/css-nav-1/#find-the-shortest-distance}\n     * @function getIntersectionRect\n     * @param rect1 {DOMRect} - The search origin which contains the exit point\n     * @param rect2 {DOMRect} - One of candidates which contains the entry point\n     * @returns {IntersectionArea} The intersection area between two elements.\n     *\n     * @typeof {Object} IntersectionArea\n     * @property {Number} IntersectionArea.width\n     * @property {Number} IntersectionArea.height\n     */\n    function getIntersectionRect(rect1, rect2) {\n        const intersection_rect = { width: 0, height: 0, area: 0 };\n\n        const new_location = [Math.max(rect1.left, rect2.left), Math.max(rect1.top, rect2.top)];\n        const new_max_point = [Math.min(rect1.right, rect2.right), Math.min(rect1.bottom, rect2.bottom)];\n\n        intersection_rect.width = Math.abs(new_location[0] - new_max_point[0]);\n        intersection_rect.height = Math.abs(new_location[1] - new_max_point[1]);\n\n        if (!(new_location[0] >= new_max_point[0] || new_location[1] >= new_max_point[1])) {\n            // intersecting-cases\n            intersection_rect.area = Math.sqrt(intersection_rect.width * intersection_rect.height);\n        }\n\n        return intersection_rect;\n    }\n\n    /**\n     * Handle the spatial navigation behavior for HTMLInputElement, HTMLTextAreaElement\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input|HTMLInputElement (MDN)}\n     * @function handlingEditableElement\n     * @param e {Event} - keydownEvent\n     * @returns {boolean}\n     */\n    function handlingEditableElement(e) {\n        const SPINNABLE_INPUT_TYPES = ['email', 'date', 'month', 'number', 'time', 'week'],\n            TEXT_INPUT_TYPES = ['password', 'text', 'search', 'tel', 'url', null];\n        const eventTarget = document.activeElement;\n        const startPosition = eventTarget.selectionStart;\n        const endPosition = eventTarget.selectionEnd;\n        const focusNavigableArrowKey = {\n            left: false,\n            up: false,\n            right: false,\n            down: false,\n        };\n\n        const dir = ARROW_KEY_CODE[e.keyCode];\n        if (dir === undefined) {\n            return focusNavigableArrowKey;\n        }\n\n        if (SPINNABLE_INPUT_TYPES.includes(eventTarget.getAttribute('type')) && (dir === 'up' || dir === 'down')) {\n            focusNavigableArrowKey[dir] = true;\n        } else if (TEXT_INPUT_TYPES.includes(eventTarget.getAttribute('type')) || eventTarget.nodeName === 'TEXTAREA') {\n            if (startPosition === endPosition) {\n                // if there isn't any selected text\n                if (startPosition === 0) {\n                    focusNavigableArrowKey.left = true;\n                    focusNavigableArrowKey.up = true;\n                }\n                if (endPosition === eventTarget.value.length) {\n                    focusNavigableArrowKey.right = true;\n                    focusNavigableArrowKey.down = true;\n                }\n            }\n        } else {\n            // HTMLDataListElement, HTMLSelectElement, HTMLOptGroup\n            focusNavigableArrowKey[dir] = true;\n        }\n\n        return focusNavigableArrowKey;\n    }\n\n    /**\n     * Get the DOMRect of an element\n     * @function getBoundingClientRect\n     * @param {Node} element\n     * @returns {DOMRect}\n     */\n    function getBoundingClientRect(element) {\n        // memoization\n        let rect = mapOfBoundRect && mapOfBoundRect.get(element);\n        if (!rect) {\n            const boundingClientRect = element.getBoundingClientRect();\n            rect = {\n                top: Number(boundingClientRect.top.toFixed(2)),\n                right: Number(boundingClientRect.right.toFixed(2)),\n                bottom: Number(boundingClientRect.bottom.toFixed(2)),\n                left: Number(boundingClientRect.left.toFixed(2)),\n                width: Number(boundingClientRect.width.toFixed(2)),\n                height: Number(boundingClientRect.height.toFixed(2)),\n            };\n            mapOfBoundRect && mapOfBoundRect.set(element, rect);\n        }\n        return rect;\n    }\n\n    /**\n     * Get the candidates which is fully inside the target element in visual\n     * @param {Node} targetElement\n     * @returns {sequence<Node>}  overlappedCandidates\n     */\n    function getOverlappedCandidates(targetElement) {\n        const container = targetElement.getSpatialNavigationContainer();\n        const candidates = container.focusableAreas();\n        const overlappedCandidates = [];\n\n        candidates.forEach((element) => {\n            if (targetElement !== element && isEntirelyVisible(element, targetElement)) {\n                overlappedCandidates.push(element);\n            }\n        });\n\n        return overlappedCandidates;\n    }\n\n    /**\n     * Get the list of the experimental APIs\n     * @function getExperimentalAPI\n     */\n    function getExperimentalAPI() {\n        function canScroll(container, dir) {\n            return (\n                (isScrollable(container, dir) && !isScrollBoundary(container, dir)) ||\n                (!container.parentElement && !isHTMLScrollBoundary(container, dir))\n            );\n        }\n\n        function findTarget(findCandidate, element, dir, option) {\n            let eventTarget = element;\n            let bestNextTarget = null;\n\n            // 4\n            if (eventTarget === document || eventTarget === document.documentElement) {\n                eventTarget = document.body || document.documentElement;\n            }\n\n            // 5\n            // At this point, spatialNavigationSearch can be applied.\n            // If startingPoint is either a scroll container or the document,\n            // find the best candidate within startingPoint\n            if ((isContainer(eventTarget) || eventTarget.nodeName === 'BODY') && !(eventTarget.nodeName === 'INPUT')) {\n                if (eventTarget.nodeName === 'IFRAME') eventTarget = eventTarget.contentDocument.body;\n\n                const candidates = getSpatialNavigationCandidates(eventTarget, option);\n\n                // 5-2\n                if (Array.isArray(candidates) && candidates.length > 0) {\n                    return findCandidate\n                        ? getFilteredSpatialNavigationCandidates(eventTarget, dir, candidates)\n                        : eventTarget.spatialNavigationSearch(dir, { candidates });\n                }\n                if (canScroll(eventTarget, dir)) {\n                    return findCandidate ? [] : eventTarget;\n                }\n            }\n\n            // 6\n            // Let container be the nearest ancestor of eventTarget\n            let container = eventTarget.getSpatialNavigationContainer();\n            let parentContainer = container.parentElement ? container.getSpatialNavigationContainer() : null;\n\n            // When the container is the viewport of a browsing context\n            if (!parentContainer && window.location !== window.parent.location) {\n                parentContainer = window.parent.document.documentElement;\n            }\n\n            // 7\n            while (parentContainer) {\n                const candidates = filteredCandidates(\n                    eventTarget,\n                    getSpatialNavigationCandidates(container, option),\n                    dir,\n                    container,\n                );\n\n                if (Array.isArray(candidates) && candidates.length > 0) {\n                    bestNextTarget = eventTarget.spatialNavigationSearch(dir, {\n                        candidates,\n                        container,\n                    });\n                    if (bestNextTarget) {\n                        return findCandidate ? candidates : bestNextTarget;\n                    }\n                }\n\n                    // If there isn't any candidate and the best candidate among candidate:\n                    // 1) Scroll or 2) Find candidates of the ancestor container\n                // 8 - if\n                else if (canScroll(container, dir)) {\n                    return findCandidate ? [] : eventTarget;\n                } else if (container === document || container === document.documentElement) {\n                    container = window.document.documentElement;\n\n                    // The page is in an iframe\n                    if (window.location !== window.parent.location) {\n                        // eventTarget needs to be reset because the position of the element in the IFRAME\n                        // is unuseful when the focus moves out of the iframe\n                        eventTarget = window.frameElement;\n                        container = window.parent.document.documentElement;\n                        if (container.parentElement) parentContainer = container.getSpatialNavigationContainer();\n                        else {\n                            parentContainer = null;\n                            break;\n                        }\n                    }\n                } else {\n                    // avoiding when spatnav container with tabindex=-1\n                    if (isFocusable(container)) {\n                        eventTarget = container;\n                    }\n\n                    container = parentContainer;\n                    if (container.parentElement) parentContainer = container.getSpatialNavigationContainer();\n                    else {\n                        parentContainer = null;\n                        break;\n                    }\n                }\n            }\n\n            if (!parentContainer && container) {\n                // Getting out from the current spatnav container\n                const candidates = filteredCandidates(\n                    eventTarget,\n                    getSpatialNavigationCandidates(container, option),\n                    dir,\n                    container,\n                );\n\n                // 9\n                if (Array.isArray(candidates) && candidates.length > 0) {\n                    bestNextTarget = eventTarget.spatialNavigationSearch(dir, {\n                        candidates,\n                        container,\n                    });\n                    if (bestNextTarget) {\n                        return findCandidate ? candidates : bestNextTarget;\n                    }\n                }\n            }\n\n            if (canScroll(container, dir)) {\n                bestNextTarget = eventTarget;\n                return bestNextTarget;\n            }\n        }\n\n        return {\n            isContainer,\n            isScrollContainer,\n            isVisibleInScroller,\n            findCandidates: findTarget.bind(null, true),\n            findNextTarget: findTarget.bind(null, false),\n            getDistanceFromTarget: (element, candidateElement, dir) => {\n                if ((isContainer(element) || element.nodeName === 'BODY') && !(element.nodeName === 'INPUT')) {\n                    if (getSpatialNavigationCandidates(element).includes(candidateElement)) {\n                        return getInnerDistance(\n                            getBoundingClientRect(element),\n                            getBoundingClientRect(candidateElement),\n                            dir,\n                        );\n                    }\n                }\n                return getDistance(getBoundingClientRect(element), getBoundingClientRect(candidateElement), dir);\n            },\n        };\n    }\n\n    /**\n     * Makes to use the experimental APIs.\n     * @function enableExperimentalAPIs\n     * @param option {boolean} - If it is true, the experimental APIs can be used or it cannot.\n     */\n    function enableExperimentalAPIs(option) {\n        const currentKeyMode = window.__spatialNavigation__ && window.__spatialNavigation__.keyMode;\n        window.__spatialNavigation__ =\n            option === false ? getInitialAPIs() : Object.assign(getInitialAPIs(), getExperimentalAPI());\n        window.__spatialNavigation__.keyMode = currentKeyMode;\n        Object.seal(window.__spatialNavigation__);\n    }\n\n    /**\n     * Set the environment for using the spatial navigation polyfill.\n     * @function getInitialAPIs\n     */\n    function getInitialAPIs() {\n        return {\n            enableExperimentalAPIs,\n            get keyMode() {\n                return this._keymode ? this._keymode : 'ARROW';\n            },\n            set keyMode(mode) {\n                this._keymode = ['SHIFTARROW', 'ARROW', 'NONE'].includes(mode) ? mode : 'ARROW';\n            },\n            setStartingPoint: function (x, y) {\n                startingPoint = x && y ? { x, y } : null;\n            },\n        };\n    }\n\n    initiateSpatialNavigation();\n    enableExperimentalAPIs(true);\n    spatialNavigationHandler();\n})();\n\nlet currentSpatialNavigationContainer = null;\n\ndocument.addEventListener('navbeforefocus', (e) => {\n    if (e.target instanceof HTMLElement) {\n        e.preventDefault();\n\n        let { target } = e;\n\n        // focus on the first element when changing spatnav container\n        // const nextSpatialNavigationContainer = target.getSpatialNavigationContainer();\n        //\n        // if (currentSpatialNavigationContainer && currentSpatialNavigationContainer !== nextSpatialNavigationContainer) {\n        //     if (nextSpatialNavigationContainer.__lastElementFocused) {\n        //         target = nextSpatialNavigationContainer.__lastElementFocused;\n        //     } else {\n        //         [target] = nextSpatialNavigationContainer.focusableAreas({ mode: 'all' });\n        //     }\n        //     // target.focus();\n        // }\n        //\n        // currentSpatialNavigationContainer = nextSpatialNavigationContainer;\n        // currentSpatialNavigationContainer.__lastElementFocused = target;\n\n        requestAnimationFrame(async () => {\n            target.scrollIntoView({ behavior: 'smooth', block: 'center', inline: 'nearest' });\n            // if (isElementInViewport(target)) {\n            //     target.focus();\n            // }\n\n            await new Promise((resolve) => {\n                const intersectionObserver = new IntersectionObserver(\n                    ([entry]) => {\n                        if (entry.isIntersecting) {\n                            resolve();\n                        }\n                    },\n                    {\n                        threshold: 1,\n                    },\n                );\n                intersectionObserver.observe(target);\n            });\n\n            target.focus();\n        });\n    }\n});\n\ndocument.addEventListener('keyup', (event) => {\n    if (event.keyCode === 13) {\n        event.preventDefault();\n        if (document.activeElement && !(document.activeElement instanceof HTMLButtonElement)) {\n            document.activeElement.click();\n        }\n    }\n});\n\n// console.log('1');\n\n// let isIntersecting = false;\n// const intersectionObserver = new IntersectionObserver(([entry]) => {\n// console.log('2');\n//   isIntersecting = entry.isIntersecting;\n// }, {\n//   threshold: 1\n// });\n// intersectionObserver.observe($0)\n// console.log('3');\n\n// start observing\n// intersectionObserver.observe());\n\nfunction isElementInViewport(el) {\n    const rect = el.getBoundingClientRect();\n    return (\n        rect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n    );\n}\n","export enum ROUTES {\n    CATALOG = '/catalog',\n    CART = '/cart',\n    STATUS = '/status',\n    ADDRESS_SIMPLE = '/address-simple',\n    ADDRESS_FULL = '/address-full',\n    ADDRESS_FULL_ALL = '/address-full/all',\n    ADDRESS_FULL_PHONE = '/address-full/phone',\n    ADDRESS_FULL_APARTMENT = '/address-full/apartment',\n    ADDRESS_FULL_ENTRANCE = '/address-full/entrance',\n    ADDRESS_FULL_FLOOR = '/address-full/floor',\n    PROMO = '/promo',\n    NO_AREA = '/no-area',\n    SCREEN_SAVER = '/screen-saver',\n}\n","import { LocationState } from 'history';\nimport { Dispatch } from 'redux';\nimport { DGSuggestItem } from 'types/2gis-maps';\nimport { RouterState, RouterAction } from 'connected-react-router';\nimport { CatalogListItemViewProps } from 'pages/Catalog/ListItem/CatalogListItem';\nimport { CartListItemViewProps } from 'pages/Cart/ListItem/CartListItem';\nimport { AddressSimpleSuggestItemView } from 'pages/AddressSimple/SuggestItem/AddressSimpleSuggestItem';\nimport { ButtonProps } from 'components/Button/Button';\n\nimport * as actions from '../actions';\n\nimport { StoreProductItem } from './products';\nimport { StoreUser } from './user';\nimport { ROUTES } from './router';\n\nexport const initialState = {\n    cart: {\n        minimalPrice: 20000,\n        itemsMap: {} as Record<string, CartItem>,\n        order: [] as string[],\n        totalCount: 0,\n        // discount value?\n        totalPrice: 0, // в копейках\n        orderId: '',\n    },\n    products: {\n        itemsMap: {} as Record<string, StoreProductItem>,\n    },\n    // здесь важно поставить undefined, подробности смотри в редюсере роутера\n    router: (undefined as unknown) as RouterState<LocationState>,\n    userData: {\n        customerName: '',\n        phoneNumber: '',\n        // latitude: '55.737209', // Москва, Кутузовский проспект\n        // longitude: '37.538145', // Москва, Кутузовский проспект\n        // latitude: '59.84112819369227', // Питер, Дачный проспект\n        // longitude: '30.25827884674072', // Питер, Дачный проспект\n        // latitude: '59.940184', // Питер, Дворцовая набережная\n        // longitude: '30.315266', // Питер, Дворцовая набережная\n        latitude: '',\n        longitude: '',\n        address: '',\n        city: '',\n        street: '',\n        house: '',\n        building: '',\n        floor: '',\n        entrance: '',\n        apartment: '',\n        doorCode: '',\n    } as StoreUser,\n    userModel: {\n        customerName: '',\n        phoneNumber: '',\n        latitude: '',\n        longitude: '',\n        address: '',\n        city: '',\n        street: '',\n        house: '',\n        building: '',\n        floor: '',\n        entrance: '',\n        apartment: '',\n        doorCode: '',\n    } as StoreUser,\n    catalogPage: {\n        selectedItemId: '',\n        order: [] as string[],\n        itemsMap: {} as Record<string, CatalogListItemViewProps>,\n        screenIndexMap: {} as Record<string, number>,\n        wrapperXShift: 0,\n        listIndexOffset: 0,\n    },\n    cartPage: {\n        wrapperYShift: 0,\n        selectedItemIndex: 0,\n        topGradientHidden: true,\n        bottomGradientHidden: true,\n        order: [] as string[],\n        itemsMap: {} as Record<string, CartListItemViewProps>,\n        totalPrice: '',\n        toMinimumPrice: 0,\n        isOrderStatusWaiting: false,\n        hasRequiredData: false,\n        makePurchaseButton: {\n            disabled: false,\n        } as ButtonProps,\n    },\n    header: {\n        title: '',\n        address: {\n            text: '',\n            isVisible: false,\n        },\n        cart: {\n            isVisible: false,\n            count: 0,\n            price: '0',\n        },\n        isBackButtonVisible: false,\n    },\n    addressSimplePage: {\n        inputValue: '',\n        suggestsRaw: {} as Record<string, DGSuggestItem>,\n        suggests: [] as AddressSimpleSuggestItemView[],\n        selectedSuggestItemIndex: 0,\n        suggestListContainerYShift: 0,\n        isSubmitButtonDisabled: false,\n    },\n    addressFullPage: {\n        addressInputValue: '',\n        phoneNumberInputValue: '',\n        apartmentInputValue: '',\n        entranceInputValue: '',\n        floorInputValue: '',\n        isSubmitButtonDisabled: false,\n        nextFocus: ROUTES.ADDRESS_FULL_ALL as string,\n    },\n};\n\nexport type AppState = typeof initialState;\n\nexport type ActionTypes = typeof actions;\nexport type BaseAction = ReturnType<ActionTypes[keyof ActionTypes]>;\nexport type AppAction = BaseAction | RouterAction<LocationState>;\nexport type AppDispatch = Dispatch<AppAction>;\nexport type Reducer<T = AppAction> = (state: AppState, action: T) => void;\n\nexport interface CartItem {\n    itemId: string;\n    count: number;\n}\n","import { Reducer } from '../../constants';\nimport { StoreProductItem, ProductItem } from '../../constants/products';\n\nconst normalizeProductItem = (productItem: ProductItem): StoreProductItem => ({\n    name: productItem.name,\n    id: productItem.guid,\n    price: Number(productItem.price),\n    quantityLeft: Number(productItem.quantity_left),\n    imageUrl: productItem.images_urls[0],\n});\n\nconst normalizeProducts = (productsMaps: Record<string, ProductItem>): Record<string, StoreProductItem> =>\n    Object.keys(productsMaps).reduce<Record<string, StoreProductItem>>((acc, itemId) => {\n        acc[itemId] = normalizeProductItem(productsMaps[itemId]);\n\n        return acc;\n    }, {});\n\nexport const productsData: Reducer = (state, action) => {\n    switch (action.type) {\n        case 'SHOW_ITEMS': {\n            state.products.itemsMap = normalizeProducts(action.payload.stock);\n            break;\n        }\n\n        default:\n            break;\n    }\n};\n","import { Reducer } from 'store/constants';\nimport { ScenarioUser, StoreUser } from 'store/constants/user';\n\nconst normalizeUserData = (data: ScenarioUser): StoreUser => {\n    return {\n        customerName: data.customer_name,\n        phoneNumber: data.phone_num,\n        latitude: data.address.location.latitude,\n        longitude: data.address.location.longitude,\n        address: data.address.address_string,\n        city: data.address.city,\n        street: data.address.street,\n        house: data.address.house,\n        building: data.address.building,\n        floor: data.address.floor,\n        entrance: data.address.floor,\n        apartment: data.address.apartment,\n        doorCode: data.address.door_code,\n    };\n};\n\nexport const userData: Reducer = (state, action) => {\n    switch (action.type) {\n        case 'GO_TO_CATALOG': {\n            state.userData = normalizeUserData(action.payload.address);\n\n            break;\n        }\n\n        case 'ADDRESS_INPUT': {\n            const { latitude, longitude } = action.payload.device_location;\n            state.userData.latitude = latitude;\n            state.userData.longitude = longitude;\n\n            break;\n        }\n\n        case 'addressFull/VALIDATION_SUCCESS': {\n            state.userData.phoneNumber = state.userModel.phoneNumber;\n            state.userData.apartment = state.userModel.apartment;\n            state.userData.entrance = state.userModel.entrance;\n            state.userData.floor = state.userModel.floor;\n\n            break;\n        }\n\n        default:\n            break;\n    }\n};\n","import { Reducer, AppState, initialState } from '../../constants';\n\n// TODO: запилить проверку остатков при подсчете общего количества\n// https://sbtatlas.sigma.sbrf.ru/jira/browse/FOODTECHUI-40\nconst getTotalCount = (cart: AppState['cart']) =>\n    Object.values(cart.itemsMap).reduce((acc, item) => {\n        acc += item.count;\n\n        return acc;\n    }, 0);\n\n// TODO: запилить проверку остатков при подсчете общей стоимости\n// https://sbtatlas.sigma.sbrf.ru/jira/browse/FOODTECHUI-40\nconst getTotalPrice = (cart: AppState['cart'], products: AppState['products']) =>\n    cart.order.reduce((acc, itemId) => {\n        const productItem = products.itemsMap[itemId];\n        const cartItem = cart.itemsMap[itemId];\n\n        acc += cartItem.count * Number(productItem.price);\n\n        return acc;\n    }, 0);\n\nexport const cartModel: Reducer = (store, action) => {\n    const { cart, products } = store;\n\n    switch (action.type) {\n        case 'ADD_ITEM': {\n            const { count: countString, item: itemId } = action.payload;\n            const count = Number(countString);\n            const productItem = products.itemsMap[itemId];\n            const maxCount = productItem.quantityLeft;\n\n            if (!productItem) {\n                return;\n            }\n\n            const cartItem = cart.itemsMap[itemId];\n\n            if (cartItem) {\n                cartItem.count = Math.min(maxCount, cartItem.count + count);\n            } else if (count <= maxCount) {\n                cart.itemsMap[itemId] = {\n                    itemId,\n                    count,\n                };\n\n                cart.order.push(itemId);\n            }\n\n            cart.totalCount = getTotalCount(cart);\n            cart.totalPrice = getTotalPrice(cart, products);\n\n            break;\n        }\n\n        case 'REMOVE_ITEM': {\n            const { item: itemId, count: countString, shouldRemoveMention } = action.payload;\n            const count = Number(countString);\n\n            const cartItem = cart.itemsMap[itemId];\n            const productItem = products.itemsMap[itemId];\n\n            if (!cartItem || !productItem) {\n                return;\n            }\n\n            cartItem.count = Math.max(0, cartItem.count - count);\n\n            cart.totalCount = getTotalCount(cart);\n            cart.totalPrice = getTotalPrice(cart, products);\n\n            if (!cartItem.count && shouldRemoveMention) {\n                delete cart.itemsMap[itemId];\n                cart.order = cart.order.filter((cartItemId) => cartItemId !== itemId);\n            }\n\n            break;\n        }\n\n        case 'REMOVE_ALL': {\n            store.cart = { ...initialState.cart };\n\n            break;\n        }\n\n        case 'GO_TO_CATALOG': {\n            if (action.payload.clear) {\n                store.cart = { ...initialState.cart };\n            }\n\n            break;\n        }\n\n        case 'VALIDATION_OK': {\n            store.cart = { ...initialState.cart };\n            store.cart.orderId = action.payload.order_id;\n\n            break;\n        }\n\n        default:\n            break;\n    }\n};\n","import { AppState } from '../constants';\n\nexport const selectProductById = (state: AppState, itemId: string) => state.products.itemsMap[itemId];\nexport const selectCartItemById = (state: AppState, itemId: string) => state.cart.itemsMap[itemId];\nexport const selectPathname = (state: AppState) => state.router.location.pathname;\n","import { AppState, initialState, Reducer } from 'store/constants';\nimport { ROUTES } from 'store/constants/router';\nimport { selectPathname } from 'store/selectors';\nimport { DGBuilding } from 'types/2gis-maps';\n\nconst MAX_PHONE_NUMBER_SYMBOLS_COUNT = 12;\n\nconst updateUserAddressBasedOnBuilding = ({ userModel }: AppState, building: DGBuilding) => {\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    const { point, address, name, full_name } = building;\n    const [addressComponent] = address.components;\n    const { street, number } = addressComponent;\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    const [city] = full_name.split(', ');\n\n    userModel.city = city;\n    userModel.street = street;\n    userModel.house = number;\n    userModel.address = name;\n    userModel.latitude = String(point.lat);\n    userModel.longitude = String(point.lon);\n};\n\nconst normalizePhone = (phoneNumber: string) => {\n    let result = Array.from(phoneNumber).filter((symbol, index) => {\n        return /[0-9]/.test(symbol) || (index === 0 && symbol === '+');\n    });\n    const [firstSymbol, ...otherSymbols] = result;\n\n    if (firstSymbol === '8') {\n        result = ['+', '7', ...otherSymbols];\n    }\n\n    return result.slice(0, MAX_PHONE_NUMBER_SYMBOLS_COUNT).join('');\n};\n\nexport const userModel: Reducer = (state, action) => {\n    switch (action.type) {\n        case 'address/CHANGE_INPUT_VALUE': {\n            state.userModel = { ...initialState.userModel };\n            state.userModel.address = action.payload;\n\n            break;\n        }\n\n        case 'address/CLICK_SUGGEST_ITEM': {\n            const suggestItem = state.addressSimplePage.suggestsRaw[action.payload];\n\n            if (suggestItem.type === 'street') {\n                state.userModel.address = suggestItem.name;\n            } else if (suggestItem.type === 'building') {\n                updateUserAddressBasedOnBuilding(state, suggestItem);\n            }\n\n            break;\n        }\n\n        case 'ADDRESS_INPUT': {\n            state.userModel = { ...initialState.userModel };\n            state.userModel.address = action.payload.input ? `${action.payload.input} ` : '';\n\n            break;\n        }\n\n        case 'ADDRESS_INPUT_ADD': {\n            const lastValue = state.userModel.address;\n            const lastSymbol = lastValue[lastValue.length - 1];\n            const prefix = lastValue && lastSymbol !== ' ' ? ' ' : '';\n\n            state.userModel = { ...initialState.userModel };\n            state.userModel.address = `${lastValue}${prefix}${action.payload.input} `;\n\n            break;\n        }\n\n        case 'ADDRESS_INPUT_CLEAR': {\n            state.userModel = { ...initialState.userModel };\n\n            break;\n        }\n\n        case 'ADDRESS_FULL_INPUT_ADD': {\n            const pathname = selectPathname(state);\n\n            switch (pathname) {\n                case ROUTES.ADDRESS_FULL_PHONE: {\n                    state.userModel.phoneNumber = normalizePhone(state.userModel.phoneNumber + action.payload.input);\n\n                    break;\n                }\n\n                case ROUTES.ADDRESS_FULL_APARTMENT: {\n                    state.userModel.apartment += action.payload.input;\n\n                    break;\n                }\n\n                case ROUTES.ADDRESS_FULL_ENTRANCE: {\n                    state.userModel.entrance += action.payload.input;\n\n                    break;\n                }\n\n                case ROUTES.ADDRESS_FULL_FLOOR: {\n                    state.userModel.floor += action.payload.input;\n\n                    break;\n                }\n\n                default:\n                    break;\n            }\n\n            break;\n        }\n\n        case 'ADDRESS_FULL_INPUT_CLEAR': {\n            const pathname = selectPathname(state);\n\n            switch (pathname) {\n                case ROUTES.ADDRESS_FULL_PHONE: {\n                    state.userModel.phoneNumber = '';\n                    break;\n                }\n\n                case ROUTES.ADDRESS_FULL_APARTMENT: {\n                    state.userModel.apartment = '';\n                    break;\n                }\n\n                case ROUTES.ADDRESS_FULL_ENTRANCE: {\n                    state.userModel.entrance = '';\n                    break;\n                }\n\n                case ROUTES.ADDRESS_FULL_FLOOR: {\n                    state.userModel.floor = '';\n                    break;\n                }\n\n                case ROUTES.ADDRESS_FULL_ALL: {\n                    state.userModel.phoneNumber = '';\n                    state.userModel.apartment = '';\n                    state.userModel.entrance = '';\n                    state.userModel.floor = '';\n                    break;\n                }\n\n                default:\n                    break;\n            }\n\n            break;\n        }\n\n        case 'addressFull/PHONE_NUMBER_INPUT_CHANGE': {\n            const { inputType, data } = action.payload;\n\n            if (inputType === 'insertText') {\n                state.userModel.phoneNumber = normalizePhone(state.userModel.phoneNumber + data);\n            } else {\n                state.userModel.phoneNumber = state.userModel.phoneNumber.slice(0, -1);\n            }\n\n            break;\n        }\n\n        case 'addressFull/APARTMENT_INPUT_CHANGE': {\n            state.userModel.apartment = action.payload;\n\n            break;\n        }\n\n        case 'addressFull/ENTRANCE_INPUT_CHANGE': {\n            state.userModel.entrance = action.payload;\n\n            break;\n        }\n\n        case 'addressFull/FLOOR_INPUT_CHANGE': {\n            state.userModel.floor = action.payload;\n\n            break;\n        }\n\n        case 'GO_TO_CATALOG': {\n            state.userModel = { ...state.userData };\n\n            break;\n        }\n\n        default:\n            break;\n    }\n};\n","import { CatalogListItemViewProps } from 'pages/Catalog/ListItem/CatalogListItem';\nimport { AppState, Reducer } from 'store/constants';\nimport { ROUTES } from 'store/constants/router';\nimport { selectProductById, selectCartItemById, selectPathname } from 'store/selectors';\n\nconst SCREEN_WIDTH = 1920;\nconst CARD_WIDTH = 392;\nconst CARD_GAP = 32;\n\nconst SCREEN_ITEM_COUNT = Math.floor(SCREEN_WIDTH / (CARD_WIDTH + CARD_GAP));\n\nconst LIST_OFFSET = (-1 * (SCREEN_WIDTH % (CARD_WIDTH + CARD_GAP))) / 2;\n\nconst ITEM_WIDTH = CARD_WIDTH + CARD_GAP;\n\nconst getListIndexOffset = ({ catalogPage: { selectedItemId, order, listIndexOffset } }: AppState) => {\n    const selectedItemIndex = order.indexOf(selectedItemId);\n\n    if (selectedItemIndex === -1) {\n        return 0;\n    }\n\n    const scrollPageSize = 1;\n\n    if (selectedItemIndex <= listIndexOffset) {\n        return Math.max(0, listIndexOffset - scrollPageSize);\n    }\n\n    if (selectedItemIndex >= listIndexOffset + SCREEN_ITEM_COUNT - 1) {\n        return Math.min(listIndexOffset + scrollPageSize, order.length - SCREEN_ITEM_COUNT);\n    }\n\n    return listIndexOffset;\n};\n\nconst getWrapperXShift = ({ catalogPage: { listIndexOffset } }: AppState) =>\n    LIST_OFFSET + listIndexOffset * ITEM_WIDTH - CARD_GAP / 2;\n\nconst getScreenIndexMap = ({ catalogPage: { listIndexOffset, order } }: AppState): Record<string, number> =>\n    new Array(SCREEN_ITEM_COUNT).fill(0).reduce(\n        (result, _, index) => ({\n            ...result,\n            [order[index + listIndexOffset]]: index + 1,\n        }),\n        {} as Record<string, number>,\n    );\n\nconst preparePrice = (price: number) => Math.ceil(price / 100);\n\nconst prepareBadge = ({ cart, products }: AppState, itemId: string): CatalogListItemViewProps['badge'] => {\n    const cartItem = cart.itemsMap[itemId];\n    const productItem = products.itemsMap[itemId];\n\n    if (productItem.quantityLeft === 0) {\n        return { type: 'sold-out' };\n    }\n\n    if (cartItem && cartItem.count === productItem.quantityLeft) {\n        return { type: 'few-left' };\n    }\n\n    return undefined;\n};\n\nconst prepareCount = (state: AppState, itemId: string) => {\n    const cartItem = selectCartItemById(state, itemId);\n\n    return cartItem ? cartItem.count : 0;\n};\n\nconst calculateButtonDisabled = ({ cart, products }: AppState, itemId: string) => {\n    const productItem = products.itemsMap[itemId];\n    const cartItem = cart.itemsMap[itemId];\n\n    return cartItem && cartItem.count === productItem.quantityLeft;\n};\n\nconst prepareIndex = ({ catalogPage: { screenIndexMap } }: AppState, itemId: string) => screenIndexMap[itemId];\n\nconst prepareCatalogItemsMap = (state: AppState) => {\n    const { products, catalogPage } = state;\n\n    return Object.keys(products.itemsMap).reduce<AppState['catalogPage']['itemsMap']>((acc, itemId, index) => {\n        const productItem = selectProductById(state, itemId);\n\n        acc[itemId] = {\n            shouldFocusOnMount: catalogPage.selectedItemId === itemId,\n            imageUrl: productItem.imageUrl,\n            name: productItem.name,\n            price: preparePrice(productItem.price),\n            count: prepareCount(state, itemId),\n            index: prepareIndex(state, itemId),\n            badge: prepareBadge(state, itemId),\n            buttonDisabled: calculateButtonDisabled(state, itemId),\n            disabled: productItem.quantityLeft === 0,\n        };\n\n        return acc;\n    }, {});\n};\n\nconst getSelectedItemId = ({ catalogPage: { order, selectedItemId } }: AppState) => {\n    if (selectedItemId) {\n        return selectedItemId;\n    }\n\n    const [firstItemId] = order;\n\n    return firstItemId;\n};\n\nexport const catalogPageView: Reducer = (state, action) => {\n    const { products, catalogPage } = state;\n\n    switch (action.type) {\n        case 'ADD_ITEM': {\n            if (selectPathname(state) === ROUTES.CATALOG) {\n                catalogPage.selectedItemId = action.payload.item;\n            }\n\n            break;\n        }\n\n        case 'catalog/SELECT_ITEM': {\n            catalogPage.selectedItemId = action.payload;\n\n            break;\n        }\n\n        default:\n            break;\n    }\n\n    catalogPage.order = Object.keys(products.itemsMap);\n    catalogPage.selectedItemId = getSelectedItemId(state);\n    catalogPage.listIndexOffset = getListIndexOffset(state);\n    catalogPage.wrapperXShift = getWrapperXShift(state);\n    catalogPage.screenIndexMap = getScreenIndexMap(state);\n    catalogPage.itemsMap = prepareCatalogItemsMap(state);\n};\n","export function createAction<T extends string, P>(type: T, payload: P) {\n    return {\n        type,\n        payload,\n    };\n}\n\nexport function createEmptyAction<T extends string>(type: T) {\n    return {\n        type,\n    };\n}\n","import packageJSON from '../../package.json';\n\nconst PREFIX = packageJSON.cssPrefix;\n\ninterface ConfitionsInterface<T> {\n    T?: boolean;\n}\n\nexport default (blockName: string, delimeter = '__', modDelimeter = '_'): BemRenderer => {\n    function renderer(...elements: string[]): string {\n        if (!elements.length) {\n            return PREFIX + blockName;\n        }\n\n        return elements.map((element) => PREFIX + blockName + delimeter + element).join(' ');\n    }\n\n    renderer.elem = (element: string, mod: string, modVal?: string): string =>\n        PREFIX + blockName + delimeter + element + modDelimeter + mod + (modVal ? modDelimeter + modVal : '');\n\n    renderer.mod = (mod: string, modVal?: string): string =>\n        PREFIX + blockName + modDelimeter + mod + (modVal ? modDelimeter + modVal : '');\n\n    renderer.modify = (conditions: ConfitionsInterface<string> = {}, elem?: string): string => {\n        const elemToModify = elem ? blockName + delimeter + elem : blockName;\n\n        return [\n            PREFIX,\n            elemToModify,\n            ' ',\n            Object.entries(conditions)\n                .map(([mod, predicate]) => Boolean(predicate) && PREFIX + elemToModify + modDelimeter + mod)\n                .filter(Boolean)\n                .join(' '),\n        ].join('');\n    };\n\n    renderer.all = (...values: string[]): string => values.join(' ');\n\n    return renderer;\n};\n","export const splitByThousands = (data: number) =>\n    String(data)\n        .split('')\n        .reduceRight((acc, item, index, arr) => {\n            const indexFromEnd = index - (arr.length - 1);\n\n            if (indexFromEnd % 3 === 0) {\n                acc = ` ${acc}`;\n            }\n\n            return item + acc;\n        }, '');\n","// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport function noop() {}\n","import { ButtonProps } from 'components/Button/Button';\nimport { splitByThousands } from 'tools';\nimport { selectProductById, selectCartItemById } from 'store/selectors';\nimport { Reducer, AppState } from 'store/constants';\n\nconst prepareHasRequiredData = ({ userModel: { phoneNumber, address } }: AppState) => Boolean(address && phoneNumber);\n\nconst prepareItemsMap = (state: AppState) => {\n    const { cartPage } = state;\n\n    return cartPage.order.reduce<AppState['cartPage']['itemsMap']>((result, itemId) => {\n        const cartItem = selectCartItemById(state, itemId);\n        const { imageUrl, quantityLeft, price, name } = selectProductById(state, itemId);\n\n        if (cartItem) {\n            result[itemId] = {\n                imageUrl,\n                name,\n                price: Math.ceil(price / 100),\n                count: cartItem.count,\n                disabled: quantityLeft === 0,\n                moreButtonDisabled: quantityLeft === cartItem.count,\n            };\n        }\n\n        return result;\n    }, {});\n};\n\nconst ITEM_HEIGHT = 152;\n\nconst getWrapperYShift = ({ cartPage: { selectedItemIndex, order } }: AppState) => {\n    if (selectedItemIndex === -1) {\n        return 0;\n    }\n\n    // так как индекс начинается с 0, то расчеты бы имели смысл начиная\n    // со второго элемента (индекс = 1), но нам нужно начинать скролл с\n    // 3-го элемента, поэтому сдвигаем значение на 1\n    let relatedIndex = Math.max(0, selectedItemIndex - 1);\n\n    // ограничиваем максимальное значение индекса\n    relatedIndex = Math.min(Math.max(0, order.length - 4), relatedIndex);\n\n    // домножаем отступ на коэффициент высоты айтема\n    return relatedIndex * ITEM_HEIGHT;\n};\n\nconst prepareMakePurchaseButtonProps = (store: AppState): ButtonProps => {\n    const {\n        cart: { totalPrice, minimalPrice },\n        cartPage: { isOrderStatusWaiting },\n    } = store;\n\n    return {\n        disabled: isOrderStatusWaiting || totalPrice < minimalPrice,\n    };\n};\n\nconst prepareToMinimumPrice = ({ cart: { minimalPrice, totalPrice } }: AppState) =>\n    Math.max(0, Math.ceil((minimalPrice - totalPrice) / 100));\n\nconst prepareTotalPrice = ({ cart: { totalPrice } }: AppState) => splitByThousands(Math.ceil(totalPrice / 100));\n\nconst prepareTopGradientHidden = ({ cartPage: { selectedItemIndex } }: AppState) => selectedItemIndex === 0;\n\nconst prepareBottomGradientHidden = ({ cartPage: { selectedItemIndex, order } }: AppState) =>\n    selectedItemIndex === order.length - 1;\n\nexport const cartPageView: Reducer = (state, action) => {\n    const { cart, cartPage } = state;\n\n    switch (action.type) {\n        case 'cart/SELECT_ITEM': {\n            cartPage.selectedItemIndex = cartPage.order.indexOf(action.payload);\n\n            break;\n        }\n\n        case 'GO_TO_WAIT': {\n            cartPage.isOrderStatusWaiting = true;\n\n            break;\n        }\n\n        case 'VALIDATION_OK': {\n            cartPage.isOrderStatusWaiting = false;\n\n            break;\n        }\n\n        default:\n            break;\n    }\n\n    cartPage.order = cart.order;\n    cartPage.itemsMap = prepareItemsMap(state);\n    cartPage.totalPrice = prepareTotalPrice(state);\n    cartPage.toMinimumPrice = prepareToMinimumPrice(state);\n    cartPage.wrapperYShift = getWrapperYShift(state);\n    cartPage.makePurchaseButton = prepareMakePurchaseButtonProps(state);\n    cartPage.topGradientHidden = prepareTopGradientHidden(state);\n    cartPage.bottomGradientHidden = prepareBottomGradientHidden(state);\n    cartPage.hasRequiredData = prepareHasRequiredData(state);\n};\n","import React from 'react';\n\nexport function useFocusOnMount<T>() {\n    const ref = React.useRef<T>(null);\n\n    React.useEffect(() => {\n        if (ref.current instanceof HTMLElement) {\n            ref.current.focus();\n        }\n    }, []);\n\n    return ref;\n}\n","import React from 'react';\n\nexport const useInterval = (callback: (...args: any[]) => void, timeout: number) =>\n    React.useEffect(() => {\n        const intervalId = setInterval(callback, timeout);\n\n        return () => clearInterval(intervalId);\n    });\n","import { useDispatch as useReduxDispatch } from 'react-redux';\nimport { AppDispatch } from 'store/constants';\n\nexport const useDispatch = () => useReduxDispatch<AppDispatch>();\n","import { useSelector as useReduxSelector } from 'react-redux';\nimport { AppState } from 'store/constants';\n\nexport function useSelector<T = unknown>(mapStateToProps: (state: AppState) => T) {\n    return useReduxSelector<AppState, T>(mapStateToProps);\n}\n","import { useThrottledFn as _useThrottledFn, ThrottleOrDebounceOpts } from 'beautiful-react-hooks';\n\nconst defaultOptions: ThrottleOrDebounceOpts = {\n    leading: true,\n    trailing: false,\n};\n\nexport const useThrottledFn: typeof _useThrottledFn = (fn, timeout, options = defaultOptions, dependencies) =>\n    _useThrottledFn(fn, timeout, options, dependencies);\n","import { createAction, createEmptyAction } from 'tools/action-creator';\n\nimport {\n    ShowItemsCommandPayload,\n    AddItemCommandPayload,\n    RemoveItemCommandPayload,\n    RemoveAllCommandPayload,\n    GoToCatalogCommandPayload,\n    GoToWaitCommandPayload,\n    AskForAgainStatusOrderCommandPayload,\n    ValidationOkCommandPayload,\n    GoBackCommandPayload,\n    AddressInputPayload,\n    AddressInputAddPayload,\n    AddressInputClearPayload,\n    AddressFullInputAddPayload,\n    AddressFullInputClearPayload,\n    AddressFullValidationOkPayload,\n    AddressFullValidationErrorPayload,\n} from '../constants/native';\n\nexport const showItems = (payload: ShowItemsCommandPayload) => createAction('SHOW_ITEMS', payload);\n\nexport const addItem = (payload: AddItemCommandPayload) => createAction('ADD_ITEM', payload);\n\ninterface RemoveItemCommandPayloadExtended extends RemoveItemCommandPayload {\n    shouldRemoveMention?: boolean;\n}\nexport const removeItem = (payload: RemoveItemCommandPayloadExtended) => createAction('REMOVE_ITEM', payload);\n\nexport const removeAll = (payload: RemoveAllCommandPayload) => createEmptyAction('REMOVE_ALL');\n\nexport const goToCatalog = (payload: GoToCatalogCommandPayload) => createAction('GO_TO_CATALOG', payload);\n\nexport const goBack = (payload: GoBackCommandPayload) => createEmptyAction('GO_BACK');\n\nexport const goToWait = (payload: GoToWaitCommandPayload) => createEmptyAction('GO_TO_WAIT');\n\nexport const validationOk = (payload: ValidationOkCommandPayload) => createAction('VALIDATION_OK', payload);\n\nexport const addressInput = (payload: AddressInputPayload) => createAction('ADDRESS_INPUT', payload);\n\nexport const addressInputAdd = (payload: AddressInputAddPayload) => createAction('ADDRESS_INPUT_ADD', payload);\n\nexport const addressInputClear = (payload: AddressInputClearPayload) => createEmptyAction('ADDRESS_INPUT_CLEAR');\n\nexport const addressFullInputAdd = (payload: AddressFullInputAddPayload) =>\n    createAction('ADDRESS_FULL_INPUT_ADD', payload);\n\nexport const addressFullInputClear = (payload: AddressFullInputClearPayload) =>\n    createEmptyAction('ADDRESS_FULL_INPUT_CLEAR');\n\nexport const addressFullValidationOk = (payload: AddressFullValidationOkPayload) =>\n    createEmptyAction('ADDRESS_FULL_VALIDATION_OK');\n\nexport const addressFullValidationError = (payload: AddressFullValidationErrorPayload) =>\n    createEmptyAction('ADDRESS_FULL_VALIDATION_ERROR');\n\nexport const askAgainForOrderStatus = (payload: AskForAgainStatusOrderCommandPayload) =>\n    createEmptyAction('ASK_AGAIN_FOR_ORDER_STATUS');\n","import { createEmptyAction } from 'tools/action-creator';\n\nexport const askForStock = () => createEmptyAction('ASK_FOR_STOCK');\n\nexport const makePurchase = () => createEmptyAction('MAKE_PURCHASE');\n\nexport const goToCart = () => createEmptyAction('GO_TO_CART');\n\nexport const askForOrderStatus = () => createEmptyAction('ASK_FOR_ORDER_STATUS');\n\nexport const addressSubmit = () => createEmptyAction('ADDRESS_SUBMIT');\n\nexport const addressFullSubmit = () => createEmptyAction('ADDRESS_FULL_SUBMIT');\n","import { DGSuggestItem } from 'types/2gis-maps';\nimport { createAction } from 'tools/action-creator';\n\nexport const addressChangeInputValue = (payload: string) => createAction('address/CHANGE_INPUT_VALUE', payload);\n\nexport const addressSetSuggests = (payload: DGSuggestItem[]) => createAction('address/SET_SUGGESTS', payload);\n\nexport const addressSelectSuggestItem = (payload: number) => createAction('address/SELECT_SUGGEST_ITEM', payload);\n\nexport const addressClickSuggestItem = (payload: string) => createAction('address/CLICK_SUGGEST_ITEM', payload);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'hooks';\nimport { addressSelectSuggestItem, addressClickSuggestItem } from 'store/actions';\n\nexport const SUGGEST_ITEM_HEIGHT = 112;\nexport const SUGGEST_ITEM_MARGIN = 24;\n\nconst StyledRoot = styled.div`\n    margin-top: ${SUGGEST_ITEM_MARGIN}px;\n\n    display: flex;\n    align-items: center;\n    height: ${SUGGEST_ITEM_HEIGHT}px;\n    width: 900px;\n    padding: 36px 32px;\n    border: 4px solid transparent;\n    box-sizing: border-box;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n\n    border-radius: 24px;\n    font-weight: 500;\n    font-size: 32px;\n    color: #fff;\n    background: #1a1a1a;\n\n    transition: border 0.2s ease-in-out;\n\n    &:focus {\n        border-color: #68ea68;\n    }\n`;\n\ninterface SuggestListItemProps {\n    index: number;\n}\n\nexport interface AddressSimpleSuggestItemView {\n    id: string;\n    name: string;\n}\n\nexport const AddressSimpleSuggestListItem: React.FC<SuggestListItemProps> = ({ index }) => {\n    const { name, id } = useSelector(({ addressSimplePage: { suggests } }) => suggests[index]);\n    const dispatch = useDispatch();\n    const memoizedOnClick = React.useCallback(() => {\n        dispatch(addressClickSuggestItem(id));\n    }, [dispatch, id]);\n    const memoizedOnFocus = React.useCallback(() => {\n        dispatch(addressSelectSuggestItem(index));\n    }, [dispatch, index]);\n\n    return (\n        <StyledRoot tabIndex={0} onClick={memoizedOnClick} onFocus={memoizedOnFocus}>\n            {name}\n        </StyledRoot>\n    );\n};\n","import { DGSuggestItem } from 'types/2gis-maps';\nimport {\n    SUGGEST_ITEM_HEIGHT,\n    SUGGEST_ITEM_MARGIN,\n    AddressSimpleSuggestItemView,\n} from 'pages/AddressSimple/SuggestItem/AddressSimpleSuggestItem';\n\nimport { Reducer, AppState, initialState } from '../../constants';\n\nconst prepareSuggestItems = (state: AppState) => {\n    const {\n        addressSimplePage: { inputValue, suggestsRaw },\n    } = state;\n\n    return Object.values(suggestsRaw).reduce<AddressSimpleSuggestItemView[]>((result, suggestItem) => {\n        const { name, id, type } = suggestItem;\n\n        if (!(type === 'street' && name === inputValue)) {\n            result.push({\n                id,\n                name,\n            });\n        }\n\n        return result;\n    }, []);\n};\n\nconst prepareIsSubmitButtonDisabled = (state: AppState) => {\n    const { street, house, city, address, latitude, longitude } = state.userModel;\n\n    return !street || !house || !city || !address || !latitude || !longitude;\n};\n\nconst prepareSuggestListContainerYShift = ({ addressSimplePage: { selectedSuggestItemIndex, suggests } }: AppState) => {\n    return (\n        (SUGGEST_ITEM_HEIGHT + SUGGEST_ITEM_MARGIN) *\n        Math.min(suggests.length - 3, Math.max(0, selectedSuggestItemIndex - 1))\n    );\n};\n\nexport const addressSimplePageView: Reducer = (state, action) => {\n    const { addressSimplePage, userModel } = state;\n\n    switch (action.type) {\n        case 'address/CHANGE_INPUT_VALUE': {\n            addressSimplePage.selectedSuggestItemIndex = initialState.addressSimplePage.selectedSuggestItemIndex;\n\n            break;\n        }\n\n        case 'address/SET_SUGGESTS': {\n            addressSimplePage.suggestsRaw = action.payload.reduce<Record<string, DGSuggestItem>>((result, item) => {\n                result[item.id] = item;\n\n                return result;\n            }, {});\n\n            break;\n        }\n\n        case 'address/SELECT_SUGGEST_ITEM': {\n            addressSimplePage.selectedSuggestItemIndex = action.payload;\n\n            break;\n        }\n\n        case 'address/CLICK_SUGGEST_ITEM': {\n            addressSimplePage.selectedSuggestItemIndex = initialState.addressSimplePage.selectedSuggestItemIndex;\n\n            break;\n        }\n\n        default:\n            break;\n    }\n\n    addressSimplePage.inputValue = userModel.address;\n    addressSimplePage.suggests = prepareSuggestItems(state);\n    addressSimplePage.suggestListContainerYShift = prepareSuggestListContainerYShift(state);\n    addressSimplePage.isSubmitButtonDisabled = prepareIsSubmitButtonDisabled(state);\n};\n","import { AppState, Reducer } from 'store/constants';\nimport { ROUTES } from 'store/constants/router';\nimport { formatPhoneNumber } from 'tools/formatPhoneNumer';\n\nconst computeNextFocus = (state: AppState) => {\n    const { phoneNumber, apartment, entrance, floor } = state.userModel;\n\n    const options = {\n        [ROUTES.ADDRESS_FULL_PHONE]: phoneNumber,\n        [ROUTES.ADDRESS_FULL_APARTMENT]: apartment,\n        [ROUTES.ADDRESS_FULL_ENTRANCE]: entrance,\n        [ROUTES.ADDRESS_FULL_FLOOR]: floor,\n    };\n\n    const result = Object.entries(options).find(([_, value]) => !value);\n\n    return result ? result[0] : ROUTES.ADDRESS_FULL_ALL;\n};\n\nexport const addressFullPageView: Reducer = (state, action) => {\n    state.addressFullPage.nextFocus = computeNextFocus(state);\n    state.addressFullPage.addressInputValue = state.userModel.address;\n    state.addressFullPage.phoneNumberInputValue = formatPhoneNumber(state.userModel.phoneNumber);\n    state.addressFullPage.apartmentInputValue = state.userModel.apartment;\n    state.addressFullPage.entranceInputValue = state.userModel.entrance;\n    state.addressFullPage.floorInputValue = state.userModel.floor;\n    state.addressFullPage.isSubmitButtonDisabled = !state.userModel.phoneNumber;\n};\n","export const formatPhoneNumber = (phoneNumber: string) => {\n    return phoneNumber.split('').reduce((result, digit, index) => {\n        result += digit;\n\n        switch (index) {\n            case 1: {\n                result += ' ';\n                break;\n            }\n\n            case 4: {\n                result += ' ';\n                break;\n            }\n\n            case 7: {\n                result += ' ';\n                break;\n            }\n\n            case 9: {\n                result += ' ';\n                break;\n            }\n\n            default:\n                break;\n        }\n\n        return result;\n    }, '');\n};\n","import { splitByThousands } from 'tools';\nimport { AppState, Reducer } from 'store/constants';\nimport { ROUTES } from 'store/constants/router';\n\nconst routeTitleMap: Record<string, string> = {\n    [ROUTES.CATALOG]: 'Самокат',\n    [ROUTES.CART]: 'Корзина',\n    [ROUTES.STATUS]: 'Самокат',\n    [ROUTES.NO_AREA]: 'Адрес доставки',\n    [ROUTES.ADDRESS_FULL_ALL]: 'Адрес доставки и телефон',\n};\n\nconst getTitle = ({\n    router: {\n        location: { pathname },\n    },\n}: AppState) => routeTitleMap[pathname] || '';\n\nconst getAddress = ({\n    router: {\n        location: { pathname },\n    },\n    userData: { address },\n}: AppState) => ({\n    text: address,\n    isVisible: pathname === ROUTES.CATALOG,\n});\n\nconst getCart = ({\n    router: {\n        location: { pathname },\n    },\n    cart: { totalCount, totalPrice },\n}: AppState) => ({\n    isVisible: totalCount > 0 && pathname === ROUTES.CATALOG,\n    count: totalCount,\n    price: splitByThousands(Math.ceil(totalPrice / 100)),\n});\n\nexport const headerView: Reducer = (state) => {\n    const { header } = state;\n\n    header.title = getTitle(state);\n\n    header.address = getAddress(state);\n    header.cart = getCart(state);\n    header.isBackButtonVisible = Boolean(window.history.length);\n};\n","/* eslint-disable no-underscore-dangle */\n/* eslint-disable @typescript-eslint/camelcase */\nimport { createStore as createReduxStore, Middleware, applyMiddleware, compose, StoreEnhancer } from 'redux';\nimport { routerMiddleware, push, replace, goBack } from 'connected-react-router';\nimport { createHashHistory } from 'history';\nimport { AppStateInterface, AppStateItemSelector, CatalogItemSelector } from 'types/app-state';\n\nimport { POOR_USER_MOCK } from '../mocks';\n\nimport { AssistantSdkCommand } from './constants/native';\nimport { AssistantSdkServerAction } from './constants/server';\nimport { ROUTES } from './constants/router';\nimport { AppState, AppAction, AppDispatch } from './constants';\nimport { getRootReducer } from './reducers';\nimport * as actions from './actions';\nimport { selectPathname } from './selectors';\nimport { ScenarioUser, ScenarioUserAddress, ScenarioUserLocation, StoreUser } from './constants/user';\n\nconst serverActionMiddleware: Middleware<{}, AppState, AppDispatch> = () => (next) => (action: AppAction) => {\n    switch (action.type) {\n        case 'ASK_FOR_STOCK': {\n            window.AssistantClient.sendData({ action_id: action.type });\n            break;\n        }\n        case 'ADDRESS_SUBMIT': {\n            window.AssistantClient.sendData({ action_id: action.type });\n            break;\n        }\n        case 'ADDRESS_FULL_SUBMIT': {\n            window.AssistantClient.sendData({ action_id: action.type });\n\n            // эмуляция ответа бэка для отладки в браузере\n            if (process.env.REACT_APP_ENVIRONMENT === 'development') {\n                window.AssistantClient.onData({\n                    type: 'smart_app_data',\n                    // eslint-disable-next-line @typescript-eslint/camelcase\n                    smart_app_data: {\n                        command: 'GO_TO_VALIDATION',\n                    },\n                });\n            }\n\n            break;\n        }\n        case 'ASK_FOR_ORDER_STATUS': {\n            window.AssistantClient.sendData({ action_id: action.type });\n\n            // эмуляция ответа бэка для отладки в браузере\n            if (process.env.REACT_APP_ENVIRONMENT === 'development') {\n                window.AssistantClient.onData({\n                    type: 'smart_app_data',\n                    // eslint-disable-next-line @typescript-eslint/camelcase\n                    smart_app_data: {\n                        command: 'VALIDATION_OK',\n                        status: true,\n                        // eslint-disable-next-line @typescript-eslint/camelcase\n                        order_id: '364528',\n                    },\n                });\n            }\n\n            break;\n        }\n        case 'MAKE_PURCHASE': {\n            window.AssistantClient.sendData({ action_id: action.type });\n\n            // эмуляция ответа бэка для отладки в браузере\n            if (process.env.REACT_APP_ENVIRONMENT === 'development') {\n                window.AssistantClient.onData({\n                    type: 'smart_app_data',\n                    // eslint-disable-next-line @typescript-eslint/camelcase\n                    smart_app_data: {\n                        command: 'GO_TO_WAIT',\n                    },\n                });\n            }\n\n            break;\n        }\n        case 'GO_TO_CART':\n            window.AssistantClient.sendData({ action_id: action.type });\n            break;\n        default:\n            break;\n    }\n\n    return next(action);\n};\n\nexport const history = createHashHistory();\nconst enhancers: StoreEnhancer[] = [];\nconst middlewares: Middleware[] = [routerMiddleware(history), serverActionMiddleware];\n\nif (process.env.NODE_ENV !== 'production') {\n    if (typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION__) {\n        enhancers.push(window.__REDUX_DEVTOOLS_EXTENSION__());\n    }\n}\n\n// TODO: научиться инитить приложение на основе рекавери стейта\n// https://sbtatlas.sigma.sbrf.ru/jira/browse/FOODTECHUI-42\nexport const store = createReduxStore<AppState, AppAction, {}, {}>(\n    getRootReducer(history),\n    compose(applyMiddleware(...middlewares), ...enhancers),\n);\nconst { dispatch } = store;\n\nif (process.env.NODE_ENV !== 'production') {\n    window.__store = store;\n}\n\nexport const dispatchToReduxStore = ({ smart_app_data }: AssistantSdkCommand) => {\n    const state = store.getState();\n\n    switch (smart_app_data.command) {\n        case 'SHOW_ITEMS':\n            dispatch(actions.showItems(smart_app_data));\n            break;\n        case 'ADD_ITEM':\n            dispatch(actions.addItem(smart_app_data));\n            break;\n        case 'REMOVE_ALL':\n            dispatch(actions.removeAll(smart_app_data));\n            break;\n        case 'REMOVE_ITEM':\n            dispatch(actions.removeItem({ ...smart_app_data, shouldRemoveMention: true }));\n            break;\n        case 'GO_TO_CATALOG':\n            dispatch(actions.goToCatalog(smart_app_data));\n\n            // чтобы при перезагрузке страницы постоянно не переходить в каталог\n            if (process.env.REACT_APP_ENVIRONMENT !== 'development') {\n                dispatch(push(ROUTES.CATALOG));\n            }\n            break;\n        case 'GO_TO_NO_AREA': {\n            dispatch(push(ROUTES.NO_AREA));\n            break;\n        }\n        case 'GO_TO_VALIDATION': {\n            const currentPathname = selectPathname(state);\n\n            switch (currentPathname) {\n                // это значит что ввод доп. адреса сохранился успешно\n                // в след задаче сделаем в этом месте нормально\n                case ROUTES.ADDRESS_FULL_ALL: {\n                    dispatch(actions.addressFullValidationSuccess());\n\n                    // TODO: выпилить костыль\n                    // Не работает, из-за того что мы делаем реплейс при\n                    // переходе из поля ввода телефона на общий экран\n                    // а нужно делать бэк\n                    // нужно переписать на санки и поправить здесь\n                    // можно в этом месте просто реплейсить на корзину и все\n                    dispatch(goBack());\n                    dispatch(goBack());\n                    break;\n                }\n\n                default: {\n                    dispatch(push(ROUTES.CART));\n                    break;\n                }\n            }\n\n            break;\n        }\n        case 'GO_TO_PROMO': {\n            dispatch(push(ROUTES.PROMO));\n            break;\n        }\n        case 'GO_TO_ADDRESS_SIMPLE': {\n            dispatch(push(ROUTES.ADDRESS_SIMPLE));\n            break;\n        }\n        case 'GO_TO_ADDRESS_FULL': {\n            dispatch(push(ROUTES.ADDRESS_FULL_ALL));\n            break;\n        }\n        case 'VALIDATION_OK': {\n            dispatch(actions.validationOk(smart_app_data));\n            dispatch(push(ROUTES.STATUS));\n            break;\n        }\n        case 'ADDRESS_INPUT': {\n            dispatch(actions.addressInput(smart_app_data));\n            dispatch(push(ROUTES.ADDRESS_SIMPLE));\n            break;\n        }\n        case 'ADDRESS_INPUT_ADD': {\n            dispatch(actions.addressInputAdd(smart_app_data));\n            break;\n        }\n        case 'ADDRESS_INPUT_CLEAR': {\n            dispatch(actions.addressInputClear(smart_app_data));\n            break;\n        }\n        case 'ADDRESS_FULL_INPUT_ADD': {\n            dispatch(actions.addressFullInputAdd(smart_app_data));\n            break;\n        }\n        case 'ADDRESS_FULL_INPUT_CLEAR': {\n            dispatch(actions.addressFullInputClear(smart_app_data));\n            break;\n        }\n        case 'ADDRESS_FULL_VALIDATION_OK': {\n            const {\n                addressFullPage: { nextFocus },\n            } = state;\n\n            // TODO: наверное стоит прикрутить санки\n            dispatch(actions.addressFullValidationOk(smart_app_data));\n            dispatch(replace(nextFocus));\n\n            break;\n        }\n        case 'ADDRESS_FULL_VALIDATION_ERROR': {\n            dispatch(actions.addressFullValidationError(smart_app_data));\n            break;\n        }\n        case 'GO_TO_WAIT': {\n            dispatch(actions.goToWait(smart_app_data));\n            // TODO: выпилить этот костыль с таймаутом\n            // https://sbtatlas.sigma.sbrf.ru/jira/browse/FOODTECHUI-77\n            setTimeout(() => dispatch(actions.askForOrderStatus()), 1500);\n            break;\n        }\n        case 'GO_BACK': {\n            dispatch(actions.goBack(smart_app_data));\n            dispatch(goBack());\n            break;\n        }\n        case 'ASK_AGAIN_FOR_ORDER_STATUS': {\n            dispatch(actions.askAgainForOrderStatus(smart_app_data));\n            setTimeout(() => dispatch(actions.askForOrderStatus()), 2000);\n            break;\n        }\n        default:\n            break;\n    }\n};\n\nif (process.env.REACT_APP_ENVIRONMENT !== 'production' && module.hot) {\n    module.hot.accept('./reducers', () => {\n        // eslint-disable-next-line\n        const { getRootReducer } = require('./reducers');\n        const rootReducer = getRootReducer(history);\n\n        store.replaceReducer(rootReducer);\n    });\n}\n\nconst castCatalogItemSelectorFromStore = (): CatalogItemSelector => {\n    const {\n        catalogPage: { screenIndexMap },\n        products: { itemsMap },\n    } = store.getState();\n\n    return {\n        ignored_words: [],\n        items: Object.values(itemsMap).map(({ id, name: title }) => {\n            const number = screenIndexMap[id];\n\n            return {\n                id,\n                title,\n                ...(number > 0 ? { number } : {}),\n                action: {\n                    type: 'ADD_ITEM',\n                    payload: {\n                        item: id,\n                        count: '1',\n                    },\n                },\n            };\n        }),\n    };\n};\n\nconst castItemSelectorFromStore = (): AppStateItemSelector => {\n    const { router } = store.getState();\n\n    switch (router.location.pathname) {\n        case ROUTES.CATALOG:\n            return { item_selector: castCatalogItemSelectorFromStore() };\n\n        default:\n            return {};\n    }\n};\n\nconst serializeAddress = (storeUser: StoreUser): ScenarioUserAddress => {\n    const {\n        address,\n        city,\n        street,\n        house,\n        building,\n        floor,\n        entrance,\n        apartment,\n        doorCode,\n        latitude,\n        longitude,\n    } = storeUser;\n\n    const location: ScenarioUserLocation = { latitude, longitude };\n\n    return {\n        location,\n        address_string: address,\n        city,\n        street,\n        house,\n        building,\n        floor,\n        entrance,\n        apartment,\n        door_code: doorCode,\n        confirmed: 'true',\n    };\n};\n\nconst prepareAddress = (state: AppState): ScenarioUser => {\n    let source;\n\n    switch (selectPathname(state)) {\n        case ROUTES.ADDRESS_SIMPLE:\n        case ROUTES.ADDRESS_FULL:\n        case ROUTES.ADDRESS_FULL_ALL:\n        case ROUTES.ADDRESS_FULL_PHONE:\n        case ROUTES.ADDRESS_FULL_APARTMENT:\n        case ROUTES.ADDRESS_FULL_ENTRANCE:\n        case ROUTES.ADDRESS_FULL_FLOOR: {\n            // TODO: может быть здесь достаточно только ADDRESS_FULL_ALL\n            source = state.userModel;\n\n            break;\n        }\n\n        default: {\n            source = state.userData;\n\n            break;\n        }\n    }\n\n    return {\n        phone_num: source.phoneNumber,\n        customer_name: source.customerName,\n        address: serializeAddress(source),\n    };\n};\n\nconst castFromStore = (): AppStateInterface => {\n    const state = store.getState();\n    const { cart, router } = state;\n\n    return {\n        foodtech: {\n            currentScreen: router.location.pathname.substring(1),\n            products: Object.keys(cart.itemsMap).map((itemId) => ({\n                id: itemId,\n                quantity: cart.itemsMap[itemId].count,\n            })),\n            totalPrice: {\n                value: cart.totalPrice,\n                discountValue: cart.totalPrice,\n            },\n            ...prepareAddress(state),\n        },\n        // ...castItemSelectorFromStore(),\n    };\n};\n\nwindow.AssistantClient = window.AssistantClient || {};\n\nif (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n    // eslint-disable-next-line no-underscore-dangle\n    window.__inbox = window.__inbox || [];\n    // eslint-disable-next-line no-underscore-dangle\n    window.__outbox = window.__outbox || [];\n}\n\n/**\n * Assistand SDK API implementation:\n */\nwindow.AssistantClient.onStart = () => {\n    if (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n        console.log('invoke onStart callback');\n    }\n};\n\nwindow.AssistantClient.onData = (command: AssistantSdkCommand) => {\n    if (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n        // eslint-disable-next-line no-underscore-dangle\n        window.__inbox.push(command);\n    }\n\n    if (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n        console.log(`server command: ${JSON.stringify(command)}`);\n    }\n\n    dispatchToReduxStore(command);\n};\n\nwindow.AssistantClient.sendData = (message: AssistantSdkServerAction) => {\n    if (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n        // eslint-disable-next-line no-underscore-dangle\n        window.__outbox.push({ message, store: castFromStore() });\n    }\n\n    if (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n        console.log(`sendData: ${JSON.stringify(message)}`);\n    }\n\n    if (window.AssistantHost && typeof window.AssistantHost.sendData === 'function') {\n        window.AssistantHost.sendData(JSON.stringify(message), null);\n    }\n};\n\nwindow.AssistantClient.onRequestState = () => {\n    const state = castFromStore();\n    const stateString = JSON.stringify(state);\n\n    if (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n        console.log('invoke request state callback', stateString);\n    }\n\n    if (window.AssistantHost && typeof window.AssistantHost.updateState === 'function') {\n        window.AssistantHost.updateState(stateString);\n    }\n\n    return state;\n};\n\nif (window.AssistantHost && typeof window.AssistantHost.ready === 'function') {\n    if (process.env.REACT_APP_ENVIRONMENT !== 'production') {\n        console.log('call ready native method');\n    }\n\n    window.AssistantHost.ready();\n}\n\n// эмуляция первой команды от бэка\nif (process.env.REACT_APP_ENVIRONMENT === 'development' && !window.location.href.includes('address-simple')) {\n    setTimeout(() => {\n        window.AssistantClient.onData({\n            type: 'smart_app_data',\n            // eslint-disable-next-line @typescript-eslint/camelcase\n            smart_app_data: {\n                command: 'GO_TO_CATALOG',\n                // eslint-disable-next-line @typescript-eslint/camelcase\n                address: POOR_USER_MOCK,\n            },\n        });\n    }, 100);\n}\n","import { produce } from 'immer';\nimport { History } from 'history';\n\nimport { Reducer, initialState, AppAction } from '../constants';\n\nimport { productsData } from './data/products';\nimport { userData } from './data/user';\nimport { getRouterModel } from './model/router';\nimport { cartModel } from './model/cart';\nimport { userModel } from './model/user';\nimport { catalogPageView } from './view/catalogPage';\nimport { cartPageView } from './view/cartPage';\nimport { addressSimplePageView } from './view/addressSimplePage';\nimport { addressFullPageView } from './view/addressFullPage';\nimport { headerView } from './view/header';\n\nexport const getRootReducer = (history: History) => {\n    const routerModel = getRouterModel(history);\n\n    return (state = initialState, action: AppAction) =>\n        produce(state, (draft) => {\n            [\n                // уровень данных\n                productsData,\n                userData,\n\n                // уровень бизнес логики\n                routerModel,\n                cartModel,\n                userModel,\n\n                // уровень пропсов для для отрисовки компонентов\n                catalogPageView,\n                cartPageView,\n                addressSimplePageView,\n                addressFullPageView,\n                headerView,\n            ].forEach((reducer: Reducer) => reducer(draft, action));\n        });\n};\n","import { History, LocationState } from 'history';\nimport { connectRouter, LocationChangeAction } from 'connected-react-router';\n\nimport { Reducer } from '../../constants';\n\nexport const getRouterModel = (history: History): Reducer => {\n    const changeRouter = connectRouter<LocationState>(history);\n\n    return (state, action) => {\n        /**\n         * @see https://github.com/supasate/connected-react-router/blob/master/src/reducer.js#L58\n         * Здесь костылим тип экшена, потому что в библиотеке\n         * криво написаны тайпинги. На самом деле, метод принимает любые экшены,\n         * но работает только LocationChangeAction (там стоит ифак на него).\n         *\n         * Проблема в том, что если не вызывать этот метод с другими экшенами,\n         * то по экшену @@INIT этот метод не вернет изначальное состояние router.\n         */\n        state.router = changeRouter(state.router, action as LocationChangeAction);\n    };\n};\n","import { createAction, createEmptyAction } from 'tools';\n\ninterface AddressFullPhoneNumberInputChangePayload {\n    inputType: InputEvent['inputType'];\n    data: InputEvent['data'];\n}\nexport const addressFullPhoneNumberInputChange = (payload: AddressFullPhoneNumberInputChangePayload) =>\n    createAction('addressFull/PHONE_NUMBER_INPUT_CHANGE', payload);\n\nexport const addressFullApartmentInputChange = (payload: string) =>\n    createAction('addressFull/APARTMENT_INPUT_CHANGE', payload);\n\nexport const addressFullEntranceInputChange = (payload: string) =>\n    createAction('addressFull/ENTRANCE_INPUT_CHANGE', payload);\n\nexport const addressFullFloorInputChange = (payload: string) => createAction('addressFull/FLOOR_INPUT_CHANGE', payload);\n\nexport const addressFullValidationSuccess = () => createEmptyAction('addressFull/VALIDATION_SUCCESS');\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector, useThrottledFn } from 'hooks';\nimport { ROUTES } from 'store/constants/router';\nimport { push } from 'connected-react-router';\n\nimport addressIcon from './address.svg';\n\nconst StyledAddress = styled.div`\n    display: flex;\n    align-items: center;\n\n    text-decoration: none;\n    margin-left: 8px;\n\n    border-radius: 40px;\n    padding: 20px 40px;\n\n    height: 80px;\n    box-sizing: border-box;\n\n    transition: 0.2s ease-in-out;\n    will-change: background-color;\n\n    &:focus {\n        background: #08a652;\n    }\n`;\n\nconst StyledAddressIcon = styled.div`\n    width: 32px;\n    height: 38px;\n\n    background-image: url(${addressIcon});\n    background-repeat: no-repeat;\n    background-size: contain;\n`;\n\nconst StyledAddressText = styled.div`\n    margin-left: 20px;\n    height: 40px;\n    line-height: 40px;\n    color: #fff;\n    font-size: 32px;\n    font-weight: 600;\n`;\n\nconst THROTTLE_TIMEOUT_MS = 200;\n\nexport const HeaderAddress: React.FC = () => {\n    const dispatch = useDispatch();\n\n    const { text, isVisible } = useSelector(({ header }) => header.address);\n\n    const handleClick = useThrottledFn(() => dispatch(push(ROUTES.ADDRESS_SIMPLE)), THROTTLE_TIMEOUT_MS, undefined, [\n        dispatch,\n    ]);\n\n    if (!isVisible) {\n        return null;\n    }\n\n    return (\n        <StyledAddress tabIndex={0} onClick={handleClick}>\n            <StyledAddressIcon />\n            <StyledAddressText>{text}</StyledAddressText>\n        </StyledAddress>\n    );\n};\n","import React from 'react';\nimport { push } from 'connected-react-router';\nimport styled from 'styled-components';\nimport { goToCart } from 'store/actions';\nimport { AppState } from 'store/constants';\nimport { ROUTES } from 'store/constants/router';\nimport { useDispatch, useSelector, useThrottledFn } from 'hooks';\n\nimport cartIcon from './cart.svg';\n\nconst StyledHeaderCart = styled.div`\n    display: flex;\n    align-items: center;\n    margin-left: 8px;\n    border-radius: 40px;\n    padding: 20px 40px;\n    height: 80px;\n    box-sizing: border-box;\n    transition: 0.2s ease-in-out;\n    will-change: background-color;\n\n    &:focus {\n        background: #08a652;\n    }\n`;\n\nconst StyledIcon = styled.div`\n    position: relative;\n    width: 40px;\n    height: 36px;\n    background-image: url('${cartIcon}');\n    background-repeat: no-repeat;\n    background-size: contain;\n`;\n\nconst StyledBadge = styled.span`\n    position: absolute;\n    top: -14px;\n    right: -12px;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    width: 32px;\n    height: 32px;\n    line-height: 28px;\n\n    font-size: 20px;\n\n    box-sizing: border-box;\n\n    color: #fff;\n    border-radius: 50%;\n    background: #08a652;\n\n    transition: 0.2s ease-in-out;\n    will-change: background-color;\n\n    ${StyledHeaderCart}:focus & {\n        color: #08a652;\n\n        background: #fff;\n        border: 2px solid #08a652;\n    }\n`;\n\nconst StyledPrice = styled.div`\n    height: 48px;\n    margin-left: 16px;\n    font-size: 32px;\n    font-weight: 600;\n    line-height: 50px;\n    color: #fff;\n`;\n\nconst THROTTLE_TIMEOUT_MS = 200;\n\nexport const HeaderCart: React.FC = () => {\n    const dispatch = useDispatch();\n\n    const { count, price, isVisible } = useSelector(({ header }: AppState) => header.cart);\n\n    const handleClick = useThrottledFn(\n        () => {\n            dispatch(push(ROUTES.CART));\n            dispatch(goToCart());\n        },\n        THROTTLE_TIMEOUT_MS,\n        undefined,\n        [dispatch],\n    );\n\n    if (!isVisible) {\n        return null;\n    }\n\n    return (\n        <StyledHeaderCart tabIndex={0} onClick={handleClick}>\n            <StyledIcon>\n                <StyledBadge>{count}</StyledBadge>\n            </StyledIcon>\n            <StyledPrice>{price}&nbsp;₽</StyledPrice>\n        </StyledHeaderCart>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'hooks';\n\nimport { HeaderAddress } from '../HeaderAddress/HeaderAddress';\nimport { HeaderCart } from '../HeaderCart/HeaderCart';\n\nimport backButtonIcon from './chevron-right.svg';\nimport logoIcon from './logo.svg';\n\nconst StyledHeader = styled.div`\n    position: relative;\n\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    box-sizing: border-box;\n\n    --spatial-navigation-contain: contain;\n\n    height: 160px;\n\n    padding: 60px 88px 28px 128px;\n`;\n\nconst StyledBackButton = styled.span`\n    position: absolute;\n    top: 78px;\n    left: 56px;\n\n    width: 20px;\n    height: 36px;\n\n    background-image: url(${backButtonIcon});\n    background-repeat: no-repeat;\n    background-size: contain;\n\n    transition: transform 0.2s ease-in-out;\n`;\n\nconst StyledSection = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst StyledLogo = styled.div`\n    width: 72px;\n    height: 72px;\n    border-radius: 8px;\n\n    background-image: url(${logoIcon});\n    background-repeat: no-repeat;\n    background-size: contain;\n`;\n\nconst StyledTitle = styled.div`\n    display: inline-block;\n    margin-left: 24px;\n    height: 48px;\n    line-height: 44px;\n    font-size: 40px;\n    font-weight: bold;\n    color: #fff;\n`;\n\nexport const Header: React.FC = () => {\n    const { title, isBackButtonVisible } = useSelector(({ header }) => header);\n\n    return (\n        <StyledHeader>\n            {isBackButtonVisible && <StyledBackButton />}\n            <StyledSection>\n                <StyledLogo />\n                <StyledTitle>{title}</StyledTitle>\n            </StyledSection>\n            <StyledSection>\n                <HeaderAddress />\n                <HeaderCart />\n            </StyledSection>\n        </StyledHeader>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst contentMap = {\n    'sold-out': 'Раскупили',\n    'few-left': 'Осталось мало',\n    sale: 'Скидка',\n};\n\nconst backgroundMap = {\n    'sold-out': '#080808',\n    'few-left': '#F6650A',\n    sale: '#08A652',\n};\n\nconst StyledBadge = styled.div`\n    padding: 8px 16px;\n    font-weight: 500;\n    font-size: 24px;\n    line-height: 32px;\n    color: #fff;\n    border-radius: 16px;\n    background-color: ${(props: BadgeProps) => backgroundMap[props.type]};\n`;\n\nexport interface BadgeProps extends React.HTMLAttributes<HTMLDivElement> {\n    type: 'sold-out' | 'few-left' | 'sale';\n}\n\nexport const Badge: React.FC<BadgeProps> = ({ type, children, ...props }) => (\n    <StyledBadge type={type} {...props}>\n        {contentMap[type]} {children}\n    </StyledBadge>\n);\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { addItem, selectCatalogItem } from 'store/actions';\nimport { useDispatch, useFocusOnMount, useSelector, useThrottledFn } from 'hooks';\nimport { Badge, BadgeProps } from 'components/Badge/Badge';\nimport plusIcon from 'assets/icons/plus.svg';\n\nconst StyledDescription = styled.div`\n    position: relative;\n    padding: 32px 32px 36px;\n    box-sizing: border-box;\n    height: 200px;\n    background: rgba(255, 255, 255, 0.05);\n`;\n\nconst StyledName = styled.div`\n    height: 80px;\n    line-height: 40px;\n    font-size: 32px;\n    font-weight: 500;\n    color: #fff;\n\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 2;\n    overflow: hidden;\n`;\n\nconst StyledPriceContainer = styled.div`\n    margin-top: 12px;\n    display: flex;\n`;\n\nconst StyledPrice = styled.div`\n    height: 40px;\n    line-height: 40px;\n    font-size: 32px;\n    font-weight: 600;\n    color: #fff;\n`;\n\nconst StyledCount = styled.div`\n    height: 40px;\n    line-height: 40px;\n    margin-left: 8px;\n    font-size: 32px;\n    font-weight: 600;\n    color: #08a652;\n`;\n\ninterface StyledThumbProps {\n    imageUrl: string;\n}\nconst StyledThumb = styled.div<StyledThumbProps>`\n    display: block;\n    height: 392px;\n    width: 392px;\n\n    background-image: url('${(props) => props.imageUrl}');\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n`;\n\ninterface StyledIndexBadgeProps {\n    visible: boolean;\n}\n\nconst StyledIndexBadge = styled.div<StyledIndexBadgeProps>`\n    position: absolute;\n    left: 16px;\n    top: 16px;\n\n    height: 64px;\n    width: 64px;\n    text-align: center;\n    line-height: 64px;\n    font-size: 28px;\n    font-weight: 600;\n    color: rgba(0, 0, 0, 0.55);\n\n    background: #eaeaec;\n    border-radius: 40px;\n\n    transition: transform 0.2s ease-in-out, opacity 0.2s ease-in-out;\n\n    ${({ visible }) =>\n        visible\n            ? css`\n                  transform: scale(1);\n                  opacity: 1;\n              `\n            : css`\n                  transform: scale(0);\n                  opacity: 0;\n              `}\n`;\n\ninterface StyledButtonProps {\n    disabled?: boolean;\n}\nconst StyledButton = styled.div<StyledButtonProps>`\n    position: absolute;\n    top: -52px;\n    right: 24px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 72px;\n    height: 72px;\n    opacity: 0;\n    border-radius: 50%;\n    background: ${({ disabled }) => (disabled ? '#3b4b5e' : '#08a652')};\n    transition: opacity 0.2s ease-in-out;\n\n    &::before {\n        content: '';\n\n        display: block;\n\n        height: 32px;\n        width: 32px;\n\n        opacity: ${({ disabled }) => (disabled ? '0.5' : '1')};\n\n        transition: background 0.2s ease-in-out, opacity 0.2s ease-in-out;\n\n        background-image: url('${plusIcon}');\n        background-repeat: no-repeat;\n        background-size: contain;\n        background-position: center;\n    }\n`;\n\nconst CatalogListItemBadge = styled(Badge)`\n    position: absolute;\n    top: 16px;\n    right: 16px;\n    z-index: 1;\n`;\n\ninterface StyledCatalogListItemProps {\n    disabled?: boolean;\n}\nconst StyledCatalogListItem = styled.div<StyledCatalogListItemProps>`\n    position: relative;\n    width: 392px;\n    height: 592px;\n\n    display: flex;\n    flex-direction: column;\n    grid-row: 1;\n\n    overflow: hidden;\n    border-radius: 24px;\n    box-shadow: 0 16px 48px rgba(0, 0, 0, 0.1);\n\n    transition: 0.4s ease-in-out;\n    will-change: transform;\n    will-change: background-color;\n\n    &:focus {\n        transform: scale(1.08);\n\n        background-color: rgba(255, 255, 255, 0.1);\n\n        ${({ disabled }) =>\n            !disabled &&\n            css`\n                ${StyledButton} {\n                    opacity: 1;\n                }\n            `}\n    }\n\n    ${({ disabled }) =>\n        disabled &&\n        css`\n            ${StyledDescription},\n            ${StyledThumb} {\n                opacity: 0.5;\n            }\n        `}\n`;\n\nconst THROTTLE_TIMEOUT_MS = 150;\n\nexport interface CatalogListItemProps {\n    id: string;\n}\n\nexport interface CatalogListItemViewProps {\n    shouldFocusOnMount: boolean;\n    imageUrl: string;\n    count: number;\n    name: string;\n    index: number;\n    price: number;\n    badge?: BadgeProps;\n    disabled?: boolean;\n    buttonDisabled?: boolean;\n}\n\nexport const CatalogListItem: React.FC<CatalogListItemProps> = ({ id }) => {\n    const dispatch = useDispatch();\n    const { shouldFocusOnMount, imageUrl, count, index, name, price, badge, disabled, buttonDisabled } = useSelector(\n        ({ catalogPage }) => catalogPage.itemsMap[id],\n    );\n\n    const handleClick = useThrottledFn(\n        () => {\n            if (!disabled) {\n                dispatch(addItem({ item: id, count: '1' }));\n            }\n        },\n        THROTTLE_TIMEOUT_MS,\n        undefined,\n        [dispatch, id, disabled],\n    );\n\n    const handleFocus = React.useCallback(() => dispatch(selectCatalogItem(id)), [dispatch, id]);\n\n    const onMountRef = useFocusOnMount<HTMLDivElement>();\n\n    return (\n        <StyledCatalogListItem\n            ref={shouldFocusOnMount ? onMountRef : undefined}\n            tabIndex={0}\n            disabled={disabled}\n            onFocus={handleFocus}\n            onClick={handleClick}\n        >\n            {badge ? <CatalogListItemBadge {...badge} /> : ''}\n            <StyledIndexBadge visible={index > 0}>{index}</StyledIndexBadge>\n            <StyledThumb imageUrl={imageUrl} />\n            <StyledDescription>\n                <StyledButton disabled={buttonDisabled} />\n                <StyledName>{name}</StyledName>\n                <StyledPriceContainer>\n                    <StyledPrice>{price} ₽</StyledPrice>\n                    {count ? <StyledCount>×{count}</StyledCount> : ''}\n                </StyledPriceContainer>\n            </StyledDescription>\n        </StyledCatalogListItem>\n    );\n};\n","import { createAction } from 'tools/action-creator';\n\nexport const selectCatalogItem = (payload: string) => createAction('catalog/SELECT_ITEM', payload);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'hooks';\n\nimport { CatalogListItem } from '../ListItem/CatalogListItem';\n\nconst preventScroll = (e: React.UIEvent<HTMLDivElement>) => {\n    e.currentTarget.scrollLeft = 0;\n};\n\nconst StyledCatalogList = styled.div`\n    margin-top: 72px;\n    height: 640px;\n    overflow: hidden;\n`;\n\nconst StyledContainer = styled.div`\n    position: relative;\n    height: 660px;\n    overflow: hidden;\n    --spatial-navigation-contain: contain;\n`;\n\ninterface StyledWrapperProps {\n    XShift: number;\n}\nconst StyledWrapper = styled.div<StyledWrapperProps>`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 392px);\n    grid-auto-flow: row;\n    grid-gap: 32px;\n\n    will-change: transform;\n    width: max-content;\n    min-width: 100%;\n\n    padding: 24px 0 44px;\n    height: 660px;\n    box-sizing: border-box;\n\n    transition: transform 0.4s ease-in-out;\n    transform: translateX(${({ XShift }) => -1 * XShift}px);\n`;\n\nexport const CatalogList: React.FC = () => {\n    const order = useSelector(({ catalogPage }) => catalogPage.order);\n    const wrapperXShift = useSelector(({ catalogPage }) => catalogPage.wrapperXShift);\n\n    return (\n        <StyledCatalogList>\n            <StyledContainer onScroll={preventScroll}>\n                <StyledWrapper XShift={wrapperXShift}>\n                    {order.map((itemId) => (\n                        <CatalogListItem key={itemId} id={itemId} />\n                    ))}\n                </StyledWrapper>\n            </StyledContainer>\n        </StyledCatalogList>\n    );\n};\n","import React from 'react';\nimport ContentLoader, { IContentLoaderProps } from 'react-content-loader';\n\ninterface SkeletonProps extends IContentLoaderProps {\n    itemWidth: number;\n    itemHeight: number;\n    borderRadius: number;\n    rowCount: number;\n    columnCount: number;\n    paddingBetweenColumns: number;\n    paddingBetweenRows: number;\n}\n\nexport const Skeleton: React.FC<SkeletonProps> = ({\n    itemWidth,\n    itemHeight,\n    borderRadius,\n    rowCount,\n    columnCount,\n    paddingBetweenColumns,\n    paddingBetweenRows,\n    ...props\n}) => {\n    const list = Array.from(Array(columnCount)).map((_, columnIndex) =>\n        Array.from(Array(rowCount)).map((_, rowIndex) => (\n            <rect\n                key={`${columnIndex} ${rowIndex}`}\n                x={columnIndex * (itemWidth + paddingBetweenColumns)}\n                y={rowIndex * (itemHeight + paddingBetweenRows)}\n                width={itemWidth}\n                height={itemHeight}\n                rx={borderRadius}\n                ry={borderRadius}\n            />\n        )),\n    );\n\n    return <ContentLoader {...props}>{list}</ContentLoader>;\n};\n","import React from 'react';\nimport Bem from 'tools/bem';\n\nexport default (Component: React.FC<any>, componentName?: string) => (props?: any, context?: any) => (\n    <Component {...props} context={context} bem={Bem(componentName || Component.name)} />\n);\n","import React from 'react';\nimport { Skeleton } from 'components/Skeleton/Skeleton';\nimport withBem from 'hoc/withBem';\n\nimport './CatalogSkeleton.scss';\n\ntype CatalogSkeletonProps = BemProps;\n\nconst itemWidth = 392;\nconst itemHeight = 592;\nconst columnCount = 5;\nconst paddingBetween = 32;\n\nexport const Component: React.FC<CatalogSkeletonProps> = ({ bem }) => (\n    <div className={bem()}>\n        <Skeleton\n            viewBox={`0 0 ${itemWidth * columnCount + paddingBetween * (columnCount - 1)} ${itemHeight}`}\n            width=\"100%\"\n            height=\"100%\"\n            backgroundColor=\"#262828\"\n            foregroundColor=\"#414545\"\n            itemWidth={itemWidth}\n            itemHeight={itemHeight}\n            borderRadius={24}\n            rowCount={2}\n            columnCount={5}\n            paddingBetweenRows={paddingBetween}\n            paddingBetweenColumns={paddingBetween}\n            speed={2}\n        />\n    </div>\n);\n\nexport const CatalogSkeleton = withBem(Component, 'CatalogSkeleton');\n","import React from 'react';\nimport { useSelector, useDispatch } from 'hooks';\nimport { SHOW_ITEMS_MOCK } from 'mocks';\nimport { askForStock } from 'store/actions';\nimport { Header } from 'components/Header/Header';\n\nimport { CatalogList } from './List/CatalogList';\nimport { CatalogSkeleton } from './Skeleton/CatalogSkeleton';\n\nexport const Catalog: React.FC = () => {\n    const dispatch = useDispatch();\n    const order = useSelector(({ catalogPage }) => catalogPage.order);\n\n    React.useEffect(() => {\n        dispatch(askForStock());\n    }, [dispatch]);\n\n    React.useEffect(() => {\n        if (process.env.REACT_APP_ENVIRONMENT === 'development') {\n            window.AssistantClient.onData({\n                type: 'smart_app_data',\n                // eslint-disable-next-line\n                smart_app_data: {\n                    command: 'SHOW_ITEMS',\n                    stock: SHOW_ITEMS_MOCK,\n                },\n            });\n\n            window.AssistantClient.onData({\n                type: 'smart_app_data',\n                // eslint-disable-next-line\n                smart_app_data: {\n                    command: 'ADD_ITEM',\n                    item: '21ff407a-fa98-11e8-80c5-0cc47a817925',\n                    count: '2',\n                },\n            });\n        }\n    }, []);\n\n    return (\n        <>\n            <Header />\n            {order.length ? <CatalogList /> : <CatalogSkeleton />}\n        </>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useFocusOnMount } from 'hooks';\n\nconst StyledButton = styled.button`\n    padding: 20px 40px;\n    border-radius: 40px;\n    display: flex;\n    border: none;\n    color: #fff;\n    font-weight: 600;\n    font-size: 32px;\n    align-items: center;\n    justify-content: center;\n    background-color: rgba(255, 255, 255, 0.1);\n    transition: background-color 0.3s ease-in-out;\n\n    &:focus {\n        background-color: #08a652;\n    }\n\n    &[disabled] {\n        opacity: 0.5;\n    }\n`;\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n    shouldFocusOnMount?: boolean;\n    forwardRef?: React.RefObject<unknown>;\n}\n\nexport const Button: React.FC<ButtonProps> = ({ className, shouldFocusOnMount, forwardRef, ...props }) => {\n    const mountFocusRef = useFocusOnMount<HTMLButtonElement>();\n    const ref = forwardRef || shouldFocusOnMount ? mountFocusRef : null;\n\n    return <StyledButton className={className} ref={ref} type=\"button\" {...props} />;\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { push } from 'connected-react-router';\nimport { makePurchase } from 'store/actions';\nimport { ROUTES } from 'store/constants/router';\nimport { useDispatch, useSelector, useThrottledFn } from 'hooks';\nimport { Button } from 'components/Button/Button';\n\nconst StyledCartInfo = styled.div`\n    position: relative;\n    display: flex;\n    padding-top: 48px;\n    box-sizing: border-box;\n    flex-direction: column;\n    align-items: center;\n    width: 776px;\n`;\n\nconst StyledBadge = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 132px;\n    height: 124px;\n`;\n\nconst StyledBadgeBody = styled.div`\n    position: relative;\n    width: 132px;\n    height: 86px;\n    background: #e12d39;\n    border-radius: 108px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst StyledBadgeName = styled.div`\n    color: #fff;\n    height: 34px;\n    font-size: 32px;\n    font-weight: 600;\n    line-height: 34px;\n    text-align: center;\n`;\n\nconst StyledBadgeDescription = styled.div`\n    height: 20px;\n    color: rgba(255, 255, 255, 0.8);\n    font-size: 24px;\n    font-weight: 500;\n    line-height: 20px;\n    text-align: center;\n`;\n\nconst StyledBadgeKernel = styled.div`\n    height: 34px;\n    width: 4px;\n    background: #e12d39;\n    border-bottom-left-radius: 2px;\n    border-bottom-right-radius: 2px;\n`;\n\nconst StyledBadgeShadowBig = styled.div`\n    margin-top: -2px;\n    width: 74px;\n    height: 6px;\n    background: #06182e;\n    filter: blur(6px);\n    display: flex;\n    justify-content: center;\n`;\n\nconst StyledBadgeShadowSmall = styled.div`\n    margin-top: -4px;\n    width: 50px;\n    height: 4px;\n    background: #06182e;\n    filter: blur(4px);\n`;\n\nconst StyledAddress = styled.div`\n    margin-top: 48px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: 56px;\n    font-weight: 600;\n    font-size: 48px;\n    line-height: 56px;\n    color: #fff;\n`;\n\nconst StyledPersonal = styled.div`\n    margin-top: 8px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nconst StyledPersonalLocation = styled.div`\n    margin-top: 8px;\n    height: 40px;\n    font-size: 32px;\n    font-weight: 500;\n    line-height: 40px;\n    color: #fff;\n`;\n\nconst StyledPersonalPhoneNumber = styled.div`\n    margin-top: 60px;\n    height: 56px;\n    font-weight: 600;\n    font-size: 48px;\n    line-height: 56px;\n    color: #fff;\n`;\n\nconst StyledPersonalName = styled.div`\n    margin-top: 8px;\n    height: 40px;\n    font-size: 32px;\n    font-weight: 500;\n    line-height: 40px;\n    color: #fff;\n`;\n\nconst StyledAskPersonal = styled.div`\n    margin-top: 14px;\n    text-align: center;\n    font-size: 32px;\n    line-height: 44px;\n    color: rgba(255, 255, 255, 0.74);\n`;\n\nconst CartInfoButton = styled(Button)`\n    margin-top: 64px;\n\n    padding: 20px 40px;\n    border-radius: 40px;\n\n    display: flex;\n\n    border: none;\n\n    color: #fff;\n\n    font-weight: 600;\n    font-size: 32px;\n\n    align-items: center;\n    justify-content: center;\n\n    background-color: rgba(255, 255, 255, 0.1);\n\n    transition: background-color 0.3s ease-in-out;\n\n    &:focus {\n        background-color: #08a652;\n    }\n`;\n\nconst THROTTLE_TIMEOUT_MS = 200;\n\nexport const CartInfo: React.FC = () => {\n    const dispatch = useDispatch();\n    const { phoneNumber, address, floor, entrance, apartment, customerName } = useSelector(({ userData }) => userData);\n    const { makePurchaseButton, hasRequiredData } = useSelector(({ cartPage }) => cartPage);\n    const handlePurchaseClick = useThrottledFn(() => dispatch(makePurchase()), THROTTLE_TIMEOUT_MS, undefined, [\n        dispatch,\n    ]);\n\n    const handleSetAddressClick = useThrottledFn(\n        () => dispatch(push(ROUTES.ADDRESS_FULL_ALL)),\n        THROTTLE_TIMEOUT_MS,\n        undefined,\n        [dispatch],\n    );\n\n    return (\n        <StyledCartInfo>\n            <StyledBadge>\n                <StyledBadgeBody>\n                    <StyledBadgeName>15-30</StyledBadgeName>\n                    <StyledBadgeDescription>мин</StyledBadgeDescription>\n                </StyledBadgeBody>\n                <StyledBadgeKernel />\n                <StyledBadgeShadowBig />\n                <StyledBadgeShadowSmall />\n            </StyledBadge>\n            <StyledAddress>{address}</StyledAddress>\n            {hasRequiredData ? (\n                <>\n                    <StyledPersonal>\n                        <StyledPersonalLocation>\n                            квартира {apartment}, подъезд {entrance}, этаж {floor}\n                        </StyledPersonalLocation>\n                        <StyledPersonalPhoneNumber>{phoneNumber}</StyledPersonalPhoneNumber>\n                        <StyledPersonalName>{customerName}</StyledPersonalName>\n                    </StyledPersonal>\n                    <CartInfoButton {...makePurchaseButton} shouldFocusOnMount onClick={handlePurchaseClick}>\n                        Перейти к оплате\n                    </CartInfoButton>\n                </>\n            ) : (\n                <>\n                    <StyledAskPersonal>\n                        Чтобы сделать заказ, укажите квартиру, подъезд и другую дополнительную информацию\n                    </StyledAskPersonal>\n                    <CartInfoButton shouldFocusOnMount onClick={handleSetAddressClick}>\n                        Дополнить адрес\n                    </CartInfoButton>\n                </>\n            )}\n        </StyledCartInfo>\n    );\n};\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { useSelector, useDispatch, useThrottledFn } from 'hooks';\nimport { Button } from 'components/Button/Button';\nimport { addItem, removeItem, selectCartItem } from 'store/actions';\nimport plusIcon from 'assets/icons/plus.svg';\nimport minusIcon from 'assets/icons/minus.svg';\n\nconst StyledIndexBadge = styled.div`\n    position: absolute;\n    left: 8px;\n    top: 8px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 64px;\n    width: 64px;\n    font-size: 28px;\n    font-weight: 600;\n    border-radius: 50%;\n    color: rgba(0, 0, 0, 0.55);\n    background-color: #eaeaec;\n`;\n\ninterface StyledThumbProps {\n    imageUrl: string;\n}\nconst StyledThumb = styled.div<StyledThumbProps>`\n    height: 120px;\n    width: 120px;\n    border-radius: 16px;\n    margin-right: 32px;\n    background-image: url('${({ imageUrl }) => imageUrl}');\n    background-size: contain;\n    background-position: center;\n    background-repeat: no-repeat;\n`;\n\nconst StyledInfo = styled.div`\n    width: 384px;\n    margin-right: 48px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`;\n\ninterface StyledNameProps {\n    oneLine?: boolean;\n}\nconst StyledName = styled.div<StyledNameProps>`\n    line-height: 40px;\n    font-size: 32px;\n    font-weight: 500;\n    color: #fff;\n\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 2;\n    overflow: hidden;\n\n    ${({ oneLine }) =>\n        oneLine &&\n        css`\n            -webkit-line-clamp: 1;\n        `}\n`;\n\nconst StyledPrice = styled.div`\n    margin-top: 4px;\n    height: 36px;\n    line-height: 36px;\n    font-size: 28px;\n    color: rgba(255, 255, 255, 0.47);\n`;\n\nconst StyledSoldOut = styled.div`\n    margin-top: 4px;\n    font-weight: 500;\n    font-size: 28px;\n    line-height: 36px;\n    color: #f6650a;\n`;\n\ninterface StyledSelectorProps {\n    focused?: boolean;\n}\nconst StyledSelector = styled.div<StyledSelectorProps>`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    padding: 8px;\n    box-sizing: border-box;\n\n    width: 216px;\n    height: 80px;\n    border-radius: 40px;\n\n    will-change: background-color;\n\n    transition: 0.2s ease-in-out;\n\n    ${({ focused }) =>\n        focused &&\n        css`\n            background: rgba(255, 255, 255, 0.05);\n        `}\n`;\n\nconst StyledSelectorValue = styled.div`\n    font-size: 32px;\n    line-height: 40px;\n    font-weight: 600;\n    color: #fff;\n`;\n\nconst CartListItemRemoveButton = styled(Button)`\n    background: rgba(255, 255, 255, 0.05);\n\n    &:focus {\n        background-color: #e12d39;\n    }\n`;\n\ninterface StyledSelectorButtonProps {\n    view: 'less' | 'more' | 'remove';\n}\nconst StyledSelectorButton = styled.button<StyledSelectorButtonProps>`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: rgba(255, 255, 255, 0.05);\n    border-radius: 32px;\n    height: 64px;\n    width: 64px;\n    border: none;\n    will-change: background-color;\n    transition: 0.2s ease-in-out;\n\n    &::before {\n        content: '';\n\n        height: 24px;\n        width: 24px;\n\n        background-repeat: no-repeat;\n        background-size: contain;\n        background-position: center;\n    }\n\n    &[disabled] {\n        opacity: 0.4;\n    }\n\n    ${({ view }) =>\n        view === 'less' &&\n        css`\n            &:focus {\n                background: #08a652;\n            }\n\n            &::before {\n                background-image: url('${minusIcon}');\n            }\n        `}\n\n    ${({ view }) =>\n        view === 'more' &&\n        css`\n            &:focus {\n                background: #08a652;\n            }\n\n            &::before {\n                background-image: url('${plusIcon}');\n            }\n        `}\n\n    ${({ view }) =>\n        view === 'remove' &&\n        css`\n            transform: rotate(45deg);\n\n            &:focus {\n                background-color: #e12d39;\n            }\n\n            &::before {\n                background-image: url('${plusIcon}');\n            }\n        `}\n`;\n\ninterface StyledCartListItemProps {\n    disabled?: boolean;\n}\nconst StyledCartListItem = styled.div<StyledCartListItemProps>`\n    position: relative;\n    display: flex;\n    height: 152px;\n    width: 832px;\n    align-items: center;\n    padding: 16px;\n    box-sizing: border-box;\n\n    ${({ disabled }) =>\n        disabled &&\n        css`\n            ${StyledIndexBadge}\n            ${StyledThumb}\n            ${StyledName}\n            ${StyledPrice} {\n                    opacity: .24;\n            }\n\n            ${StyledPrice} {\n                color: #fff;\n        `}\n`;\n\nexport interface CartListItemProps {\n    id: string;\n    index: number;\n}\n\nexport interface CartListItemViewProps {\n    imageUrl: string;\n    name: string;\n    price: number;\n    count: number;\n    disabled?: boolean;\n    moreButtonDisabled?: boolean;\n}\n\nconst THROTTLE_TIMEOUT_MS = 100;\n\nexport const CartListItem: React.FC<CartListItemProps> = ({ index, id }) => {\n    const { imageUrl, name, price, count, disabled, moreButtonDisabled } = useSelector(\n        ({ cartPage: { itemsMap } }) => itemsMap[id],\n    );\n    const dispatch = useDispatch();\n\n    const handleLessClick = useThrottledFn(\n        () => {\n            dispatch(\n                removeItem({\n                    item: id,\n                    count: '1',\n                    shouldRemoveMention: !count,\n                }),\n            );\n        },\n        THROTTLE_TIMEOUT_MS,\n        undefined,\n        [dispatch, id, count],\n    );\n\n    const handleMoreClick = useThrottledFn(\n        () => {\n            dispatch(\n                addItem({\n                    item: id,\n                    count: '1',\n                }),\n            );\n        },\n        THROTTLE_TIMEOUT_MS,\n        undefined,\n        [dispatch, id],\n    );\n\n    const handleRemoveClick = useThrottledFn(\n        () => {\n            dispatch(\n                removeItem({\n                    item: id,\n                    count: String(count),\n                    shouldRemoveMention: true,\n                }),\n            );\n        },\n        THROTTLE_TIMEOUT_MS,\n        undefined,\n        [dispatch, id, count],\n    );\n\n    const handleFocus = React.useCallback(() => dispatch(selectCartItem(id)), [dispatch, id]);\n\n    return (\n        <StyledCartListItem>\n            <StyledIndexBadge>{index}</StyledIndexBadge>\n            <StyledThumb imageUrl={imageUrl} />\n            <StyledInfo>\n                <StyledName>{name}</StyledName>\n                <StyledPrice>{price} ₽</StyledPrice>\n                {disabled ? <StyledSoldOut>Раскупили</StyledSoldOut> : ''}\n            </StyledInfo>\n            {disabled ? (\n                <CartListItemRemoveButton onFocus={handleFocus} onClick={handleRemoveClick}>\n                    Удалить\n                </CartListItemRemoveButton>\n            ) : (\n                <StyledSelector>\n                    <StyledSelectorButton\n                        type=\"button\"\n                        aria-label=\"less\"\n                        view={count ? 'less' : 'remove'}\n                        onFocus={handleFocus}\n                        onClick={handleLessClick}\n                    />\n                    <StyledSelectorValue>{count}</StyledSelectorValue>\n                    <StyledSelectorButton\n                        type=\"button\"\n                        aria-label=\"more\"\n                        view=\"more\"\n                        disabled={moreButtonDisabled}\n                        onFocus={handleFocus}\n                        onClick={handleMoreClick}\n                    />\n                </StyledSelector>\n            )}\n        </StyledCartListItem>\n    );\n};\n","import { createAction } from 'tools/action-creator';\n\nexport const selectCartItem = (payload: string) => createAction('cart/SELECT_ITEM', payload);\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { useSelector } from 'hooks';\nimport { SHOW_ITEMS_MOCK } from 'mocks';\n\nimport { CartListItem } from '../ListItem/CartListItem';\n\nconst preventScroll = (e: React.UIEvent<HTMLDivElement>) => {\n    e.currentTarget.scrollTop = 0;\n};\n\nconst StyledCartList = styled.div`\n    position: relative;\n    height: 792px;\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`;\n\nconst StyledContainer = styled.div`\n    position: relative;\n    width: 832px;\n    max-height: 608px;\n    overflow: hidden;\n    --spatial-navigation-contain: contain;\n`;\n\ninterface StyledWrapperProps {\n    YShift: number;\n}\nconst StyledWrapper = styled.div<StyledWrapperProps>`\n    overflow-x: hidden;\n    width: 832px;\n    padding-right: 10px;\n    will-change: transform;\n    transition: transform 0.5s ease-in-out;\n\n    transform: translateY(-${({ YShift }) => YShift}px);\n`;\n\nconst StyledTotalPrice = styled.div`\n    margin-top: 32px;\n    margin-left: 16px;\n    line-height: 56px;\n    font-size: 48px;\n    font-weight: 600;\n    color: #fff;\n`;\n\nconst StyledMinimalPrice = styled.div`\n    margin: 8px 0 0 16px;\n    font-weight: 500;\n    font-size: 32px;\n    line-height: 40px;\n    color: #f6650a;\n`;\n\ninterface StyledGradientProps {\n    view: 'top' | 'bottom';\n    hidden?: boolean;\n}\nconst StyledGradient = styled.div<StyledGradientProps>`\n    position: absolute;\n    left: 0;\n    right: 0;\n    height: 160px;\n    z-index: 1;\n    background: linear-gradient(0, #001124 0%, rgba(0, 17, 36, 0) 89.09%);\n    transition: opacity .2s ease-in-out;\n\n    ${({ view }) =>\n        view === 'top' &&\n        css`\n            top: -1px;\n\n            transform: rotate(180deg);\n        `}\n\n    ${({ view }) =>\n        view === 'bottom' &&\n        css`\n            bottom: -1px;\n        `}\n\n    opacity: ${({ hidden }) => (hidden ? '0' : '1')};\n`;\n\nexport const CartList: React.FC = () => {\n    const { order, totalPrice, toMinimumPrice, topGradientHidden, bottomGradientHidden, wrapperYShift } = useSelector(\n        ({ cartPage }) => cartPage,\n    );\n\n    React.useEffect(() => {\n        if (process.env.REACT_APP_ENVIRONMENT === 'development') {\n            if (!order.length) {\n                window.AssistantClient.onData({\n                    type: 'smart_app_data',\n                    // eslint-disable-next-line\n                    smart_app_data: {\n                        command: 'SHOW_ITEMS',\n                        stock: SHOW_ITEMS_MOCK,\n                    },\n                });\n\n                Object.keys(SHOW_ITEMS_MOCK).forEach((itemId) => {\n                    window.AssistantClient.onData({\n                        type: 'smart_app_data',\n                        // eslint-disable-next-line\n                        smart_app_data: {\n                            command: 'ADD_ITEM',\n                            item: itemId,\n                            count: String(Math.max(1, Math.floor(Math.random() * 5))),\n                        },\n                    });\n                });\n            }\n        }\n    }, [order]);\n\n    return (\n        <StyledCartList>\n            <StyledContainer onScroll={preventScroll}>\n                <StyledGradient view=\"top\" hidden={topGradientHidden} />\n                <StyledWrapper YShift={wrapperYShift}>\n                    {order.map((itemId, index) => (\n                        <CartListItem key={itemId} index={index + 1} id={itemId} />\n                    ))}\n                </StyledWrapper>\n                <StyledGradient view=\"bottom\" hidden={bottomGradientHidden} />\n            </StyledContainer>\n            <StyledTotalPrice>Сумма заказа {totalPrice} ₽</StyledTotalPrice>\n            {toMinimumPrice ? (\n                <StyledMinimalPrice>До минимального заказа еще {toMinimumPrice} ₽</StyledMinimalPrice>\n            ) : (\n                ''\n            )}\n        </StyledCartList>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'hooks';\nimport { Header } from 'components/Header/Header';\nimport mapImage from 'assets/images/map.png';\n\nimport { CartInfo } from './Info/CartInfo';\nimport { CartList } from './List/CartList';\n\nconst StyledBackground = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    background-image: url('${mapImage}');\n\n    &::before {\n        content: '';\n        position: absolute;\n        left: 0;\n        top: 0;\n        right: 0;\n        bottom: 0;\n\n        background: linear-gradient(90.98deg, #001124 50.03%, rgba(0, 17, 36, 0) 99.56%);\n    }\n`;\n\nconst StyledContainer = styled.div`\n    display: flex;\n    position: relative;\n    justify-content: space-between;\n    padding: 0 112px;\n`;\n\nconst StyledOverlap = styled.div`\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    background: rgba(0, 0, 0, 0.6);\n`;\n\nexport const Cart: React.FC = () => {\n    const { isOrderStatusWaiting } = useSelector(({ cartPage }) => cartPage);\n\n    return (\n        <>\n            <StyledBackground />\n            <Header />\n            <StyledContainer>\n                <CartList />\n                <CartInfo />\n            </StyledContainer>\n            {isOrderStatusWaiting ? <StyledOverlap /> : ''}\n        </>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'hooks';\nimport { Header } from 'components/Header/Header';\nimport { Button } from 'components/Button/Button';\n\nimport FirstFigureIcon from './figure-1.svg';\nimport SecondFigureIcon from './figure-2.svg';\nimport ThirdFigureIcon from './figure-3.svg';\nimport FourthFigureIcon from './figure-4.svg';\nimport SixthFigureIcon from './figure-6.svg';\nimport SeventhFigureIcon from './figure-7.svg';\nimport EighthFigureIcon from './figure-8.svg';\nimport NinthFigureIcon from './figure-9.svg';\n\nconst StatusButton = styled(Button)`\n    margin-top: 60px;\n`;\n\nconst StatusContainer = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 206px 0 0;\n`;\n\nconst StatusOrderNumber = styled.div`\n    font-size: 32px;\n    font-weight: 600;\n    line-height: 44px;\n    color: rgba(255, 255, 255, 0.74);\n`;\n\nconst StatusOrderTime = styled.div`\n    margin-top: 16px;\n    font-weight: bold;\n    font-size: 64px;\n    line-height: 72px;\n    text-align: center;\n    color: #fff;\n`;\n\nconst StatusFigure = styled.div`\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: contain;\n`;\n\nconst StatusFirstFigure = styled(StatusFigure)`\n    position: absolute;\n    top: 92px;\n    left: 834px;\n\n    height: 61px;\n    width: 61px;\n\n    background-image: url('${FirstFigureIcon}');\n`;\n\nconst StatusSecondFigure = styled(StatusFigure)`\n    position: absolute;\n    top: 0;\n    left: 482px;\n\n    height: 61px;\n    width: 61px;\n\n    background-image: url('${SecondFigureIcon}');\n`;\n\nconst StatusThirdFigure = styled(StatusFigure)`\n    position: absolute;\n    top: 280px;\n    left: 236px;\n\n    height: 46px;\n    width: 46px;\n\n    background-image: url('${ThirdFigureIcon}');\n`;\n\nconst StatusFourthFigure = styled(StatusFigure)`\n    position: absolute;\n    top: 158px;\n    left: 1487px;\n\n    height: 53px;\n    width: 53px;\n\n    background-image: url('${FourthFigureIcon}');\n`;\n\nconst StatusFifthFigure = styled(StatusFigure)`\n    position: absolute;\n    top: 594px;\n    left: 340px;\n\n    height: 53px;\n    width: 53px;\n\n    transform: rotate(90deg);\n\n    background-image: url('${FirstFigureIcon}');\n`;\n\nconst StatusSixthFigure = styled(StatusFigure)`\n    position: absolute;\n    top: 500px;\n    left: 652px;\n\n    height: 60px;\n    width: 60px;\n\n    background-image: url('${SixthFigureIcon}');\n`;\n\nconst StatusSeventhFigure = styled(StatusFigure)`\n    position: absolute;\n    top: 705px;\n    left: 1044px;\n\n    height: 40px;\n    width: 40px;\n\n    background-image: url('${SeventhFigureIcon}');\n`;\n\nconst StatusEighthFigure = styled(StatusFigure)`\n    position: absolute;\n    top: 492px;\n    left: 1268px;\n\n    height: 40px;\n    width: 40px;\n\n    background-image: url('${EighthFigureIcon}');\n`;\n\nconst StatusNinthFigure = styled(StatusFigure)`\n    position: absolute;\n    top: 590px;\n    left: 1604px;\n\n    height: 90px;\n    width: 90px;\n\n    background-image: url('${NinthFigureIcon}');\n`;\n\nexport const Status: React.FC = () => {\n    const { orderId } = useSelector(({ cart }) => cart);\n\n    return (\n        <>\n            <Header />\n            <StatusContainer>\n                <StatusOrderNumber>Заказ #{orderId} оформлен</StatusOrderNumber>\n                <StatusOrderTime>\n                    Спасибо за заказ!\n                    <br />\n                    Будем у вас через 15-30 минут.\n                </StatusOrderTime>\n                <StatusButton shouldFocusOnMount>Очень жду</StatusButton>\n                <StatusFirstFigure />\n                <StatusSecondFigure />\n                <StatusThirdFigure />\n                <StatusFourthFigure />\n                <StatusFifthFigure />\n                <StatusSixthFigure />\n                <StatusSeventhFigure />\n                <StatusEighthFigure />\n                <StatusNinthFigure />\n            </StatusContainer>\n        </>\n    );\n};\n","import React from 'react';\nimport { push } from 'connected-react-router';\nimport withBem from 'hoc/withBem';\nimport { useDispatch } from 'hooks';\nimport { ROUTES } from 'store/constants/router';\nimport { Button } from 'components/Button/Button';\n\nimport './Promo.scss';\n\ntype PromoProps = BemProps;\n\nconst POPCORN_TYPES_COUNT = 4;\n\nconst Component: React.FC<PromoProps> = ({ bem }) => {\n    const dispatch = useDispatch();\n    const currentIndex = 0;\n\n    const memoizedOnClickSubmitButton = React.useCallback(() => {\n        dispatch(push(ROUTES.ADDRESS_SIMPLE));\n    }, [dispatch]);\n\n    return (\n        <div className={bem.modify({ [`type-${currentIndex + 1}`]: true })}>\n            <div className={bem('glow')}>\n                <div className={bem.modify({ [`type-${currentIndex + 1}`]: true }, 'glow-1')} />\n                <div className={bem.modify({ [`type-${currentIndex + 1}`]: true }, 'glow-2')} />\n                <div className={bem.modify({ [`type-${currentIndex + 1}`]: true }, 'glow-3')} />\n                <div className={bem.modify({ [`type-${currentIndex + 1}`]: true }, 'glow-4')} />\n            </div>\n            <div className={bem('title')}>\n                Попкорн и напитки\n                <br />к просмотру фильмов\n                <br />и сериалов\n            </div>\n            <div className={bem('subtitle')}>\n                Доставим бесплатно в течении 15-30 минут для Москвы и Санкт-Петербурга\n            </div>\n            {Array.from(Array(POPCORN_TYPES_COUNT)).map((_, index) => (\n                <div\n                    key={index}\n                    className={bem.modify({ [`type-${index + 1}`]: true, hidden: index !== currentIndex }, 'image')}\n                />\n            ))}\n            <div className={bem('button-container')}>\n                <Button className={bem('button')} shouldFocusOnMount onClick={memoizedOnClickSubmitButton}>\n                    Указать адрес\n                </Button>\n                <Button className={bem('button')}>Не сейчас</Button>\n            </div>\n        </div>\n    );\n};\n\nexport const Promo = withBem(Component, 'Promo');\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport faceIcon from './face.svg';\n\nconst StyledBadge = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    align-items: center;\n\n    width: 132px;\n    height: 124px;\n`;\n\nconst StyledBadgeBody = styled.div`\n    width: 84px;\n    height: 84px;\n    border-radius: 50%;\n\n    background-image: url(${faceIcon});\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: cover;\n`;\n\nconst StyledBadgeKernel = styled.div`\n    height: 36px;\n    width: 4px;\n\n    background: #e12d39;\n    border-bottom-left-radius: 2px;\n    border-bottom-right-radius: 2px;\n`;\n\nconst StyledBadgeShadowBig = styled.div`\n    margin-top: -2px;\n\n    width: 74px;\n    height: 6px;\n    background: #06182e;\n    filter: blur(6px);\n\n    display: flex;\n    justify-content: center;\n`;\n\nconst StyledBadgeShadowSmall = styled.div`\n    margin-top: -4px;\n    width: 50px;\n    height: 4px;\n    background: #06182e;\n    filter: blur(4px);\n`;\n\nexport const Badge: FC = () => (\n    <StyledBadge>\n        <StyledBadgeBody />\n        <StyledBadgeKernel />\n        <StyledBadgeShadowBig />\n        <StyledBadgeShadowSmall />\n    </StyledBadge>\n);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { replace } from 'connected-react-router';\nimport { useDispatch, useSelector } from 'hooks';\nimport { Header } from 'components/Header/Header';\nimport { Button } from 'components/Button/Button';\nimport { ROUTES } from 'store/constants/router';\n\nimport backgroundImage from '../../assets/images/map.png';\n\nimport { Badge } from './Badge/Badge';\n\nconst StyledNoArea = styled.div`\n    height: 100%;\n    position: relative;\n    background: #001124;\n`;\n\nconst StyledHeader = styled(Header)`\n    position: relative;\n    z-index: 10;\n`;\n\nconst StyledContainer = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    padding: 64px 0;\n\n    z-index: 10;\n`;\n\nconst StyledTitle = styled.div`\n    margin-top: 48px;\n    font-weight: bold;\n    font-size: 72px;\n    line-height: 72px;\n    color: #fff;\n`;\n\nconst StyledSubtitle = styled.div`\n    margin-top: 12px;\n    font-weight: 500;\n    font-size: 32px;\n    line-height: 40px;\n    color: #fff;\n`;\n\nconst StyledButton = styled(Button)`\n    margin-top: 40px;\n`;\n\nconst StyledBackground = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: url(${backgroundImage});\n    background-blend-mode: luminosity;\n\n    z-index: 1;\n\n    &::before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n\n        background: linear-gradient(0, #001124 0, rgba(0, 17, 36, 0) 65%);\n        transform: rotate(-180deg);\n    }\n\n    &::after {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n\n        background: linear-gradient(0, #001124 0, rgba(0, 17, 36, 0) 65%);\n    }\n`;\n\nexport const NoArea: React.FC = () => {\n    const dispatch = useDispatch();\n    const address = useSelector(({ userData }) => userData.address);\n    const handleButtonClick = React.useCallback(() => {\n        dispatch(replace(ROUTES.ADDRESS_SIMPLE));\n    }, [dispatch]);\n\n    return (\n        <StyledNoArea>\n            <StyledHeader />\n            <StyledContainer>\n                <Badge />\n                <StyledTitle>{address}</StyledTitle>\n                <StyledSubtitle>К сожалению, пока не доставляем по этому адресу</StyledSubtitle>\n                <StyledButton shouldFocusOnMount onClick={handleButtonClick}>\n                    Изменить\n                </StyledButton>\n            </StyledContainer>\n            <StyledBackground />\n        </StyledNoArea>\n    );\n};\n","import React from 'react';\nimport withBem from 'hoc/withBem';\n\nimport './ScreenSaver.scss';\n\ntype ScreenSaverProps = BemProps;\n\nconst Component: React.FC<ScreenSaverProps> = ({ bem }) => (\n    <div className={bem()}>\n        Это скринсейвер\n        <br />\n        Здесь будет роскошный прелоадер с попкорном\n    </div>\n);\n\nexport const ScreenSaver = withBem(Component, 'ScreenSaver');\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { useFocusOnMount } from 'hooks';\n\ninterface StyledTitleProps {\n    isMinified?: boolean;\n    isFocused?: boolean;\n}\nconst StyledTitle = styled.div<StyledTitleProps>`\n    position: absolute;\n    left: 32px;\n    top: 36px;\n\n    font-weight: 500;\n    font-size: 32px;\n    line-height: 40px;\n\n    color: ${({ isFocused }) => (isFocused ? '#2ac673' : 'rgba(255, 255, 255, 0.28)')};\n    transition: font-size 0.2s ease-in-out, top 0.2s ease-in-out, color 0.2s ease-in-out;\n\n    ${({ isMinified }) =>\n        isMinified &&\n        css`\n            top: 12px;\n            font-size: 24px;\n        `};\n`;\n\ninterface StyledInputProps {\n    disabled?: boolean;\n}\nconst StyledInput = styled.input<StyledInputProps>`\n    margin-top: 50px;\n    height: 40px;\n    width: 100%;\n    font-weight: 500;\n    font-size: 32px;\n    color: ${({ disabled }) => (disabled ? 'rgba(255, 255, 255, 0.28)' : '#fff')};\n    caret-color: #2ac673;\n    line-height: 40px;\n    padding: 0;\n    border: none;\n    background: transparent;\n`;\n\ninterface StyledRootProps {\n    isFocused?: boolean;\n}\nconst StyledRoot = styled.div<StyledRootProps>`\n    position: relative;\n    height: 112px;\n    box-sizing: border-box;\n    padding: 0 32px;\n\n    border-top: 4px solid #1a1a1a;\n    border-left: 4px solid #1a1a1a;\n    border-right: 4px solid #1a1a1a;\n    border-bottom: 4px solid rgba(255, 255, 255, 0.12);\n\n    border-radius: 24px;\n    background-color: #1a1a1a;\n\n    transition: border 0.2s ease-in-out;\n\n    ${({ isFocused }) =>\n        isFocused &&\n        css`\n            border-width: 4px;\n            border-style: solid;\n            border-color: #2ac673;\n        `}\n`;\n\ninterface InputProps {\n    title: string;\n    value: string;\n    className?: string;\n    type?: string;\n    disabled?: boolean;\n    onSubmit?: (event: React.SyntheticEvent<HTMLInputElement>) => void;\n    onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    onRootKeyPress?: (event: React.KeyboardEvent<HTMLInputElement>) => void;\n    shouldFocusOnMount?: boolean;\n    shouldFocusInputOnMount?: boolean;\n}\n\nexport const Input: React.FC<InputProps> = ({\n    title,\n    value,\n    className,\n    type = 'text',\n    disabled,\n    onSubmit,\n    onChange,\n    onRootKeyPress,\n    shouldFocusOnMount,\n    shouldFocusInputOnMount,\n}) => {\n    const [isFocused, setFocus] = React.useState(false);\n    const [isUsing, setUsing] = React.useState(false);\n    const inputRef = React.useRef<HTMLInputElement>(null);\n    const onMountRef = useFocusOnMount<HTMLDivElement>();\n    const handleRootFocus = React.useCallback(() => setFocus(true), [setFocus]);\n    const handleRootBlur = React.useCallback(() => {\n        setFocus(false);\n        setUsing(false);\n    }, [setFocus, setUsing]);\n    const handleRootKeyPress = React.useCallback(\n        (e: React.KeyboardEvent<HTMLInputElement>) => {\n            if (inputRef && inputRef.current) {\n                if (onRootKeyPress) {\n                    onRootKeyPress(e);\n                }\n\n                if (!e.defaultPrevented) {\n                    inputRef.current.focus();\n                    setUsing(true);\n                }\n            }\n        },\n        [onRootKeyPress, setUsing],\n    );\n    const handleInputKeyPress = React.useCallback(\n        (event: React.KeyboardEvent<HTMLInputElement>) => {\n            if (onSubmit && event && event.key === 'Enter') {\n                event.stopPropagation();\n                onSubmit(event);\n            }\n        },\n        [onSubmit],\n    );\n\n    React.useEffect(() => {\n        if (shouldFocusInputOnMount && inputRef && inputRef.current) {\n            inputRef.current.focus();\n            setUsing(true);\n        }\n    }, [shouldFocusInputOnMount, inputRef, setUsing]);\n\n    const isTitleMinified = isUsing || Boolean(value);\n\n    return (\n        <StyledRoot\n            tabIndex={disabled ? -1 : 0}\n            className={className}\n            ref={shouldFocusOnMount ? onMountRef : undefined}\n            isFocused={isFocused}\n            onFocus={handleRootFocus}\n            onBlur={handleRootBlur}\n            onKeyPress={handleRootKeyPress}\n        >\n            <StyledTitle isMinified={isTitleMinified} isFocused={isFocused}>\n                {title}\n            </StyledTitle>\n            <StyledInput\n                tabIndex={-1}\n                ref={inputRef}\n                type={type}\n                disabled={disabled}\n                onKeyPress={handleInputKeyPress}\n                onChange={onChange}\n                value={value}\n            />\n        </StyledRoot>\n    );\n};\n","export const makeRequest = (url: string, params: Record<string, string | number | boolean>) => {\n    const paramsString = Object.keys(params)\n        .reduce<string[]>((acc, key) => {\n            acc.push(`${key}=${params[key as keyof typeof params]}`);\n\n            return acc;\n        }, [])\n        .join('&');\n\n    url = `${url}?${paramsString}`;\n\n    return fetch(url).then((response: Response) => {\n        if (!response.ok) {\n            throw response.statusText;\n        }\n\n        return response.json();\n    });\n};\n","import * as Sentry from '@sentry/react';\nimport { DGSuggestItem, DGSuggestResponse } from 'types/2gis-maps';\nimport { makeRequest } from 'tools/request';\n\nconst DG_KEY = 'ruvqwj0703';\n\ninterface GetSuggestsParams {\n    q: string;\n    latitude: string;\n    longitude: string;\n}\nexport const getSuggests = ({ q, longitude, latitude }: GetSuggestsParams): Promise<DGSuggestItem[]> => {\n    if (q === '') {\n        return Promise.resolve([] as DGSuggestItem[]);\n    }\n\n    return Promise.resolve()\n        .then(() => {\n            const params = {\n                q,\n                key: DG_KEY,\n                local: 'ru_RU',\n                fields: ['items.address', 'items.point'].join(','),\n                type: ['building', 'street'].join(','),\n                // высчитываем левую верхнюю и правую нижнюю точки так, чтобы\n                // радиус вокруг исходной точки был примерно 40км\n                viewpoint1: [Number(longitude) - 0.4, Number(latitude) + 0.4].join(','),\n                viewpoint2: [Number(longitude) + 0.4, Number(latitude) - 0.4].join(','),\n                // eslint-disable-next-line @typescript-eslint/camelcase\n                is_viewport_change: false,\n            };\n\n            return makeRequest('https://catalog.api.2gis.ru/3.0/suggests', params);\n        })\n        .then((response) => {\n            if (response.meta.code !== 200) {\n                Sentry.captureException(response.meta.error);\n\n                throw response.meta.error;\n            }\n\n            return response;\n        })\n        .then(({ result }: DGSuggestResponse) => {\n            if (!result) {\n                Sentry.captureException('Пустой результат в ответе саджестов 2gis');\n\n                return [];\n            }\n\n            return result.items;\n        });\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Input } from 'components/Input/Input';\nimport { useSelector, useDispatch } from 'hooks';\nimport { useMediaQuery } from 'beautiful-react-hooks';\nimport { addressChangeInputValue, addressSetSuggests, addressSubmit } from 'store/actions';\nimport { Header } from 'components/Header/Header';\nimport { getSuggests } from 'tools/2gis';\nimport { Button } from 'components/Button/Button';\n\nimport {\n    AddressSimpleSuggestListItem,\n    SUGGEST_ITEM_HEIGHT,\n    SUGGEST_ITEM_MARGIN,\n} from './SuggestItem/AddressSimpleSuggestItem';\n\nconst StyledContainer = styled.div`\n    display: flex;\n    align-items: start;\n    height: 100%;\n    padding: 160px 360px 0;\n`;\n\nconst StyledInputContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    flex: 1 0;\n`;\n\nconst AddressSimpleButton = styled(Button)`\n    margin-left: 32px;\n    padding: 32px 48px;\n    background: rgba(255, 255, 255, 0.12);\n    border-radius: 140px;\n    font-weight: 600;\n    font-size: 40px;\n    line-height: 48px;\n    color: #ffffff;\n`;\n\ninterface StyledSuggestListProps {\n    hidden?: boolean;\n}\nconst StyledSuggestList = styled.div<StyledSuggestListProps>`\n    height: ${({ hidden }) => (hidden ? 0 : (SUGGEST_ITEM_HEIGHT + SUGGEST_ITEM_MARGIN) * 3)}px;\n    overflow: hidden;\n    transition: height 0.5s ease-in-out;\n`;\n\ninterface StyledSuggestListContainerProps {\n    yShift: number;\n}\nconst StyledSuggestListContainer = styled.div<StyledSuggestListContainerProps>`\n    display: flex;\n    flex-direction: column;\n\n    transition: transform 0.5s ease-in-out;\n    transform: translateY(-${({ yShift }) => yShift}px);\n`;\n\nconst preventScroll = (event: React.SyntheticEvent<HTMLDivElement>) => {\n    event.currentTarget.scrollTop = 0;\n};\n\nconst VIEWPORT_HEIGHT_WITH_OPENED_KEYBOARD = 659;\n\nexport const AddressSimple: React.FC = () => {\n    const dispatch = useDispatch();\n    const isKeyboardExpanded = useMediaQuery(`(max-height: ${VIEWPORT_HEIGHT_WITH_OPENED_KEYBOARD}px)`);\n    const { inputValue, suggests, suggestListContainerYShift, isSubmitButtonDisabled } = useSelector(\n        ({ addressSimplePage }) => addressSimplePage,\n    );\n    const latitude = useSelector(({ userData }) => userData.latitude);\n    const longitude = useSelector(({ userData }) => userData.longitude);\n\n    const memoizedOnInputChange = React.useCallback<(e: React.ChangeEvent<HTMLInputElement>) => void>(\n        (event) => {\n            dispatch(addressChangeInputValue(event.currentTarget.value));\n        },\n        [dispatch],\n    );\n    const memoizedOnClickButton = React.useCallback(() => {\n        dispatch(addressSubmit());\n    }, [dispatch]);\n\n    React.useEffect(() => {\n        getSuggests({ q: inputValue, latitude, longitude })\n            .then((items) => {\n                dispatch(addressSetSuggests(items));\n            })\n            .catch(() => {\n                dispatch(addressSetSuggests([]));\n            });\n    }, [dispatch, inputValue, latitude, longitude]);\n\n    return (\n        <>\n            <Header />\n            <StyledContainer>\n                <StyledInputContainer>\n                    <Input shouldFocusOnMount value={inputValue} title=\"Улица и дом\" onChange={memoizedOnInputChange} />\n                    <StyledSuggestList hidden={isKeyboardExpanded} onScroll={preventScroll}>\n                        <StyledSuggestListContainer yShift={suggestListContainerYShift}>\n                            {suggests.map((item, index) => (\n                                <AddressSimpleSuggestListItem key={item.id} index={index} />\n                            ))}\n                        </StyledSuggestListContainer>\n                    </StyledSuggestList>\n                </StyledInputContainer>\n                <AddressSimpleButton disabled={isSubmitButtonDisabled} onClick={memoizedOnClickButton}>\n                    Сохранить\n                </AddressSimpleButton>\n            </StyledContainer>\n        </>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { push } from 'connected-react-router';\nimport { useDispatch, useSelector } from 'hooks';\nimport { Input } from 'components/Input/Input';\nimport { Button } from 'components/Button/Button';\nimport { ROUTES } from 'store/constants/router';\nimport { addressFullSubmit } from 'store/actions';\nimport { noop } from 'tools';\n\nconst StyledFirstRow = styled.div`\n    grid-area: first-row;\n    display: grid;\n    grid-column-gap: 32px;\n    grid-template-columns: 1.4fr 1fr;\n    color: #fff;\n`;\n\nconst StyledSecondRow = styled.div`\n    grid-area: second-row;\n    display: grid;\n    grid-column-gap: 32px;\n    grid-template-columns: 1fr 1fr 1fr;\n    color: #fff;\n`;\n\nconst StyledThirdRow = styled.div`\n    grid-area: third-row;\n`;\n\nconst SubmitButton = styled(Button)`\n    flex-grow: 0;\n`;\n\nconst StyledRoot = styled.div`\n    display: grid;\n    padding: 148px 130px 0;\n    box-sizing: border-box;\n    grid-row-gap: 80px;\n    grid-column-gap: 32px;\n    grid-template-areas: 'first-row' 'second-row' 'third-row';\n\n    will-change: transform;\n`;\n\nexport const AddressFullAll: React.FC = () => {\n    const dispatch = useDispatch();\n    const {\n        addressInputValue,\n        phoneNumberInputValue,\n        apartmentInputValue,\n        entranceInputValue,\n        floorInputValue,\n        isSubmitButtonDisabled,\n        nextFocus,\n    } = useSelector(({ addressFullPage }) => addressFullPage);\n    const handleSubmitClick = React.useCallback(() => {\n        dispatch(addressFullSubmit());\n    }, [dispatch]);\n\n    return (\n        <StyledRoot>\n            <StyledFirstRow>\n                <Input\n                    title=\"Улица и дом\"\n                    disabled\n                    onChange={noop} // реакт запрещает прокидывать в инпут значение без обработчика изменений\n                    onRootKeyPress={() => dispatch(push(ROUTES.ADDRESS_SIMPLE))}\n                    value={addressInputValue}\n                />\n                <Input\n                    title=\"Номер телефона\"\n                    shouldFocusOnMount={nextFocus === ROUTES.ADDRESS_FULL_PHONE}\n                    onChange={noop} // реакт запрещает прокидывать в инпут значение без обработчика изменений\n                    onRootKeyPress={() => dispatch(push(ROUTES.ADDRESS_FULL_PHONE))}\n                    value={phoneNumberInputValue}\n                />\n            </StyledFirstRow>\n            <StyledSecondRow>\n                <Input\n                    title=\"Квартира\"\n                    shouldFocusOnMount={nextFocus === ROUTES.ADDRESS_FULL_APARTMENT}\n                    onChange={noop} // реакт запрещает прокидывать в инпут значение без обработчика изменений\n                    onRootKeyPress={() => dispatch(push(ROUTES.ADDRESS_FULL_APARTMENT))}\n                    value={apartmentInputValue}\n                />\n                <Input\n                    title=\"Подъезд\"\n                    shouldFocusOnMount={nextFocus === ROUTES.ADDRESS_FULL_ENTRANCE}\n                    onChange={noop} // реакт запрещает прокидывать в инпут значение без обработчика изменений\n                    onRootKeyPress={() => dispatch(push(ROUTES.ADDRESS_FULL_ENTRANCE))}\n                    value={entranceInputValue}\n                />\n                <Input\n                    title=\"Этаж\"\n                    shouldFocusOnMount={nextFocus === ROUTES.ADDRESS_FULL_FLOOR}\n                    onChange={noop} // реакт запрещает прокидывать в инпут значение без обработчика изменений\n                    onRootKeyPress={() => dispatch(push(ROUTES.ADDRESS_FULL_FLOOR))}\n                    value={floorInputValue}\n                />\n            </StyledSecondRow>\n            <StyledThirdRow>\n                <SubmitButton\n                    shouldFocusOnMount={nextFocus === ROUTES.ADDRESS_FULL_ALL}\n                    disabled={isSubmitButtonDisabled}\n                    onClick={handleSubmitClick}\n                >\n                    Сохранить\n                </SubmitButton>\n            </StyledThirdRow>\n        </StyledRoot>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { replace } from 'connected-react-router';\nimport { Input } from 'components/Input/Input';\nimport { useDispatch, useSelector } from 'hooks';\nimport { addressFullPhoneNumberInputChange } from 'store/actions';\n\nconst StyledInput = styled(Input)`\n    margin: 80px auto 0;\n    width: 900px;\n`;\n\nexport const AddressFullPhone = () => {\n    const dispatch = useDispatch();\n    const inputValue = useSelector(({ addressFullPage }) => addressFullPage.phoneNumberInputValue);\n    const nextFocus = useSelector(({ addressFullPage }) => addressFullPage.nextFocus);\n    const handleInputChange = React.useCallback(\n        ({ nativeEvent }: React.ChangeEvent<HTMLInputElement>) => {\n            // без этого тайпгварда TS не хочет показывать правильные поля\n            if (nativeEvent instanceof InputEvent) {\n                const { inputType, data } = nativeEvent;\n\n                dispatch(addressFullPhoneNumberInputChange({ inputType, data }));\n            }\n        },\n        [dispatch],\n    );\n    const handleInputSubmit = React.useCallback(() => {\n        dispatch(replace(nextFocus));\n    }, [dispatch, nextFocus]);\n\n    return (\n        <StyledInput\n            title=\"Номер телефона\"\n            value={inputValue}\n            shouldFocusInputOnMount\n            onChange={handleInputChange}\n            onSubmit={handleInputSubmit}\n        />\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { replace } from 'connected-react-router';\nimport { Input } from 'components/Input/Input';\nimport { useDispatch, useSelector } from 'hooks';\nimport { addressFullApartmentInputChange } from 'store/actions';\n\nconst StyledInput = styled(Input)`\n    margin: 80px auto 0;\n    width: 900px;\n`;\n\nexport const AddressFullApartment = () => {\n    const dispatch = useDispatch();\n    const inputValue = useSelector(({ addressFullPage }) => addressFullPage.apartmentInputValue);\n    const nextFocus = useSelector(({ addressFullPage }) => addressFullPage.nextFocus);\n    const handleInputChange = React.useCallback(\n        (e: React.ChangeEvent<HTMLInputElement>) => {\n            dispatch(addressFullApartmentInputChange(e.target.value));\n        },\n        [dispatch],\n    );\n    const handleInputSubmit = React.useCallback(() => {\n        dispatch(replace(nextFocus));\n    }, [dispatch, nextFocus]);\n\n    return (\n        <StyledInput\n            title=\"Квартира\"\n            value={inputValue}\n            shouldFocusInputOnMount\n            onChange={handleInputChange}\n            onSubmit={handleInputSubmit}\n        />\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { replace } from 'connected-react-router';\nimport { Input } from 'components/Input/Input';\nimport { useDispatch, useSelector } from 'hooks';\nimport { addressFullEntranceInputChange } from 'store/actions';\n\nconst StyledInput = styled(Input)`\n    margin: 80px auto 0;\n    width: 900px;\n`;\n\nexport const AddressFullEntrance = () => {\n    const dispatch = useDispatch();\n    const inputValue = useSelector(({ addressFullPage }) => addressFullPage.entranceInputValue);\n    const nextFocus = useSelector(({ addressFullPage }) => addressFullPage.nextFocus);\n    const handleInputChange = React.useCallback(\n        (e: React.ChangeEvent<HTMLInputElement>) => {\n            dispatch(addressFullEntranceInputChange(e.target.value));\n        },\n        [dispatch],\n    );\n    const handleInputSubmit = React.useCallback(() => {\n        dispatch(replace(nextFocus));\n    }, [dispatch, nextFocus]);\n\n    return (\n        <StyledInput\n            title=\"Подъезд\"\n            value={inputValue}\n            shouldFocusInputOnMount\n            onChange={handleInputChange}\n            onSubmit={handleInputSubmit}\n        />\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { replace } from 'connected-react-router';\nimport { Input } from 'components/Input/Input';\nimport { useDispatch, useSelector } from 'hooks';\nimport { addressFullFloorInputChange } from 'store/actions';\n\nconst StyledInput = styled(Input)`\n    margin: 80px auto 0;\n    width: 900px;\n`;\n\nexport const AddressFullFloor = () => {\n    const dispatch = useDispatch();\n    const inputValue = useSelector(({ addressFullPage }) => addressFullPage.floorInputValue);\n    const nextFocus = useSelector(({ addressFullPage }) => addressFullPage.nextFocus);\n    const handleInputChange = React.useCallback(\n        (e: React.ChangeEvent<HTMLInputElement>) => {\n            dispatch(addressFullFloorInputChange(e.target.value));\n        },\n        [dispatch],\n    );\n    const handleInputSubmit = React.useCallback(() => {\n        dispatch(replace(nextFocus));\n    }, [dispatch, nextFocus]);\n\n    return (\n        <StyledInput\n            title=\"Этаж\"\n            value={inputValue}\n            shouldFocusInputOnMount\n            onChange={handleInputChange}\n            onSubmit={handleInputSubmit}\n        />\n    );\n};\n","import React from 'react';\nimport { Switch, Route } from 'react-router';\nimport { ROUTES } from 'store/constants/router';\nimport { Header } from 'components/Header/Header';\n\nimport { AddressFullAll } from './AddressFullAll';\nimport { AddressFullPhone } from './AddressFullPhone';\nimport { AddressFullApartment } from './AddressFullApartment';\nimport { AddressFullEntrance } from './AddressFullEntrance';\nimport { AddressFullFloor } from './AddressFullFloor';\n\nexport const AddressFull = () => (\n    <>\n        <Header />\n        <Switch>\n            <Route path={ROUTES.ADDRESS_FULL_ALL}>\n                <AddressFullAll />\n            </Route>\n            <Route path={ROUTES.ADDRESS_FULL_PHONE}>\n                <AddressFullPhone />\n            </Route>\n            <Route path={ROUTES.ADDRESS_FULL_APARTMENT}>\n                <AddressFullApartment />\n            </Route>\n            <Route path={ROUTES.ADDRESS_FULL_ENTRANCE}>\n                <AddressFullEntrance />\n            </Route>\n            <Route path={ROUTES.ADDRESS_FULL_FLOOR}>\n                <AddressFullFloor />\n            </Route>\n        </Switch>\n    </>\n);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { Switch, Route } from 'react-router';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { store, history } from 'store';\nimport { ROUTES } from 'store/constants/router';\nimport { Catalog } from 'pages/Catalog/Catalog';\nimport { Cart } from 'pages/Cart/Cart';\nimport { Status } from 'pages/Status/Status';\nimport { Promo } from 'pages/Promo/Promo';\nimport { NoArea } from 'pages/NoArea/NoArea';\nimport { ScreenSaver } from 'pages/ScreenSaver/ScreenSaver';\nimport { AddressSimple } from 'pages/AddressSimple/AddressSimple';\nimport { AddressFull } from 'pages/AddressFull/AddressFull';\n\nimport 'style/global.scss';\n\nconst StyledContainer = styled.div`\n    overflow: hidden;\n    width: 100%;\n    height: 100vh;\n    outline: none;\n    font-family: 'SB Sans Text', Helvetica, Arial, sans-serif;\n    background: #000;\n`;\n\nconst preventScroll = (event: React.SyntheticEvent<HTMLDivElement>) => {\n    event.currentTarget.scrollTop = 0;\n};\n\nexport const Root: React.FC = () => (\n    <ReduxProvider store={store}>\n        <ConnectedRouter history={history}>\n            <StyledContainer onScroll={preventScroll}>\n                <Switch>\n                    <Route path={ROUTES.CATALOG}>\n                        <Catalog />\n                    </Route>\n                    <Route path={ROUTES.CART}>\n                        <Cart />\n                    </Route>\n                    <Route path={ROUTES.STATUS}>\n                        <Status />\n                    </Route>\n                    <Route path={ROUTES.ADDRESS_SIMPLE}>\n                        <AddressSimple />\n                    </Route>\n                    <Route path={ROUTES.ADDRESS_FULL}>\n                        <AddressFull />\n                    </Route>\n                    <Route path={ROUTES.PROMO}>\n                        <Promo />\n                    </Route>\n                    <Route path={ROUTES.NO_AREA}>\n                        <NoArea />\n                    </Route>\n                    <Route path={ROUTES.SCREEN_SAVER}>\n                        <ScreenSaver />\n                    </Route>\n                </Switch>\n            </StyledContainer>\n        </ConnectedRouter>\n    </ReduxProvider>\n);\n","import 'core-js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Sentry from '@sentry/react';\nimport { Root } from 'components/Root/Root';\n\nimport 'tools/new-spatial-navigation';\n\nif (process.env.REACT_APP_ENVIRONMENT === 'production') {\n    Sentry.init({ dsn: 'https://b33b53e4a61946f1a44139076cefb598@o414705.ingest.sentry.io/5304676' });\n}\n\nexport const renderApp = (App: React.FC) => {\n    ReactDOM.render(<App />, document.getElementById('application_root'));\n};\n\nrenderApp(Root);\n\nif (process.env.REACT_APP_ENVIRONMENT !== 'production' && module.hot) {\n    module.hot.accept('./components/Root/Root', () => {\n        // eslint-disable-next-line\n        const { Root } = require('./components/Root/Root.tsx');\n        renderApp(Root);\n    });\n}\n\nconsole.log('rev', process.env.REACT_APP_REV);\n","module.exports = __webpack_public_path__ + \"static/media/plus.1b914755.svg\";","module.exports = __webpack_public_path__ + \"static/media/map.14a1524d.png\";","module.exports = __webpack_public_path__ + \"static/media/figure-1.cad64c9b.svg\";"],"sourceRoot":""}