{"version":3,"sources":["pages/Cart/Cart.assets/bg@touch.jpg","pages/Cart/Info/CartInfo@sberbox.tsx","pages/Cart/ListItem/CartListItem@sberbox.tsx","pages/Cart/List/CartList@sberbox.tsx","pages/Cart/Cart@sberbox.tsx","pages/Cart/ListItem/CartListItem@touch.tsx","pages/Cart/List/CartList@touch.tsx","pages/Cart/Info/CartInfo@touch.tsx","pages/Cart/Cart@touch.tsx"],"names":["module","exports","StyledAskPersonal","styled","ParagraphText1","secondary","CartInfoButton","Button","CartInfoSberbox","dispatch","useDispatch","address","customerName","useSelector","userData","deliveryTime","isMakePurchaseButtonDisabled","makePurchaseButtonView","hasRequiredData","phoneNumber","personalAddress","cartPage","handlePurchaseClick","React","useCallback","makePurchaseAction","handleSetAddressClick","goToAddressFullAllThunk","time","phone","name","view","disabled","shouldFocusOnMount","shouldLockAfterClick","onClick","MultilineText","text","ButtonViews","primary","StyledSelector","div","StyledSelectorValue","Body2","isWarning","warning","selectorIconSizePx","icon","s","sizePx","StyledSelectorButton","button","selectorButtonSizePx","buttonSecondary","transition","default","focusBorderMixin","borderRadius","isRemoving","css","critical","StyledAddIcon","AddSvg","StyledRemoveIcon","RemoveSvg","LessButton","onFocus","type","aria-label","AddButton","StyledDeleteButton","CartListItemSberbox","index","id","imageUrl","price","oldPrice","label","count","isWantMoreThanHave","isMoreButtonDisabled","itemsMap","handleLessClick","removeItemAction","item","shouldRemoveMention","handleMoreClick","addItemAction","handleRemoveClick","String","Infinity","handleFocus","cartSelectItemAction","StyledMinimalPrice","Body1","CartListSberbox","order","totalPrice","toMinimumPrice","wrapperYShift","topGradientVisible","bottomGradientVisible","itemList","useMemo","map","itemId","key","length","Boolean","CartSberbox","CartBackground","StyledCartListItemTouch","StyledThumb","StyledInfo","StyledName","Footnote1","StyledPrice","StyledIndexBadge","IndexBadge","StyledCountTouchButton","surfaceLiquid01","isDanger","StyledLessIcon","StyledCount","Footnote2","CartListItemTouch","cartPageTouch","size","StyledCartListTouch","StyledContainer","StyledTotalPrice","span","accent","CartListTouch","StyledBackground","bgImage","StyledCartInfoTouch","StyledPlaceInfo","StyledTime","ParagraphText2","fontWeights","Semibold","StyledUnit","Caption","StyledAddress","Headline4","StyledPersonal","StyledPersonalLocation","CartInfoTouch","pinColor","CartTouch"],"mappings":"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","file":"static/js/Cart.04af1b45.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg@touch.1c0b9508.jpg\";","import { MultilineText } from 'components/MultilineText/MultilineText';\nimport React from 'react';\nimport { goToAddressFullAllThunk } from 'store/thunks/native';\nimport styled from 'styled-components';\nimport { ParagraphText1 } from '@sberdevices/plasma-styles';\nimport { secondary } from '@sberdevices/plasma-tokens';\nimport { useDispatch } from 'hooks/useDispatch';\nimport { useSelector } from 'hooks/useSelector';\nimport { makePurchaseAction } from 'store/actions/server';\nimport {\n    CartInfoPinSberbox,\n    CartInfoContainerSberbox,\n    CartPersonalSberbox,\n    CartAddressSberbox,\n} from 'components/Cart/Info/CartInfo@sberbox';\nimport { Button, ButtonViews } from 'components/Button/Button';\n\nconst StyledAskPersonal = styled(ParagraphText1)`\n    margin-top: 14px;\n\n    text-align: center;\n\n    color: ${secondary};\n`;\n\nconst CartInfoButton = styled(Button)`\n    margin-top: 60px;\n    padding: 20px 32px;\n\n    &[disabled] {\n        opacity: 0.3;\n    }\n`;\n\nconst askPersonal = 'Чтобы сделать заказ, укажите номер телефона, \\nквартиру и другую дополнительную \\nинформацию';\n\nexport const CartInfoSberbox: React.FC = () => {\n    const dispatch = useDispatch();\n    const { address, customerName } = useSelector(({ userData }) => userData);\n    const {\n        deliveryTime,\n        isMakePurchaseButtonDisabled,\n        makePurchaseButtonView,\n        hasRequiredData,\n        phoneNumber,\n        personalAddress,\n    } = useSelector(({ cartPage }) => cartPage);\n    const handlePurchaseClick = React.useCallback(() => dispatch(makePurchaseAction()), [dispatch]);\n\n    const handleSetAddressClick = React.useCallback(() => {\n        dispatch(goToAddressFullAllThunk());\n    }, [dispatch]);\n\n    return (\n        <CartInfoContainerSberbox>\n            <CartInfoPinSberbox time={deliveryTime} />\n            <CartAddressSberbox>{address}</CartAddressSberbox>\n            {hasRequiredData ? (\n                <>\n                    <CartPersonalSberbox address={personalAddress} phone={phoneNumber} name={customerName} />\n                    <CartInfoButton\n                        view={makePurchaseButtonView}\n                        disabled={isMakePurchaseButtonDisabled}\n                        shouldFocusOnMount\n                        shouldLockAfterClick\n                        onClick={handlePurchaseClick}\n                    >\n                        Перейти к оплате\n                    </CartInfoButton>\n                </>\n            ) : (\n                <>\n                    <StyledAskPersonal>\n                        <MultilineText text={askPersonal} />\n                    </StyledAskPersonal>\n                    <CartInfoButton view={ButtonViews.primary} shouldFocusOnMount onClick={handleSetAddressClick}>\n                        Продолжить\n                    </CartInfoButton>\n                </>\n            )}\n        </CartInfoContainerSberbox>\n    );\n};\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Body2 } from '@sberdevices/plasma-styles';\nimport { buttonSecondary, critical, primary, warning } from '@sberdevices/plasma-tokens';\nimport { useSelector } from 'hooks/useSelector';\nimport { useDispatch } from 'hooks/useDispatch';\nimport { removeItemAction, addItemAction } from 'store/actions/native';\nimport { cartSelectItemAction } from 'store/actions/cartPage';\nimport { Button, ButtonViews } from 'components/Button/Button';\nimport { LabelProps } from 'components/Label/Label';\nimport {\n    CartListItemRootSberbox,\n    CartListItemThumbSberbox,\n    CartListItemInfoSberbox,\n} from 'components/Cart/ListItem/CartListItem@sberbox';\nimport { icon } from 'style/const/icon';\nimport { transition } from 'style/const/transition';\nimport { focusBorderMixin } from 'style/mixin/focus';\nimport { ReactComponent as AddSvg } from 'assets/icons/add.svg';\nimport { ReactComponent as RemoveSvg } from 'assets/icons/remove.svg';\n\nconst StyledSelector = styled.div`\n    box-sizing: border-box;\n    padding: 8px;\n    width: 216px;\n\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\n\ninterface StyledSelectorValue {\n    isWarning?: boolean;\n}\nconst StyledSelectorValue = styled(Body2)<StyledSelectorValue>`\n    color: ${({ isWarning }) => (isWarning ? warning : primary)};\n`;\n\nconst selectorButtonSizePx = 64;\nconst selectorBorderRadiusPx = selectorButtonSizePx / 2;\nconst selectorIconSizePx = icon.s.sizePx;\n\ninterface StyledSelectorButtonProps {\n    isRemoving?: boolean;\n}\n\nconst StyledSelectorButton = styled.button<StyledSelectorButtonProps>`\n    position: relative;\n\n    height: ${selectorButtonSizePx}px;\n    width: ${selectorButtonSizePx}px;\n    border: none;\n    border-radius: ${selectorBorderRadiusPx}px;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background: ${buttonSecondary};\n\n    will-change: background-color, transform, opacity;\n    transition: ${transition.default};\n\n    ${focusBorderMixin({ borderRadius: selectorBorderRadiusPx })}\n\n    ${({ isRemoving }) =>\n        isRemoving &&\n        css`\n            transform: rotate(45deg);\n            background: ${critical};\n        `}\n\n    &[disabled] {\n        opacity: 0.3;\n    }\n`;\n\nconst StyledAddIcon = styled(AddSvg)`\n    height: ${selectorIconSizePx}px;\n    width: ${selectorIconSizePx}px;\n`;\n\nconst StyledRemoveIcon = styled(RemoveSvg)`\n    height: ${selectorIconSizePx}px;\n    width: ${selectorIconSizePx}px;\n`;\n\ntype ButtonProps = React.ButtonHTMLAttributes<HTMLButtonElement> & StyledSelectorButtonProps;\n\nconst LessButton: React.FC<ButtonProps> = ({ onClick, onFocus, isRemoving }) => (\n    <StyledSelectorButton type=\"button\" aria-label=\"less\" onClick={onClick} onFocus={onFocus} isRemoving={isRemoving}>\n        {isRemoving ? <StyledAddIcon /> : <StyledRemoveIcon />}\n    </StyledSelectorButton>\n);\n\nconst AddButton: React.FC<ButtonProps> = ({ onClick, onFocus }) => (\n    <StyledSelectorButton type=\"button\" aria-label=\"more\" onClick={onClick} onFocus={onFocus}>\n        <StyledAddIcon />\n    </StyledSelectorButton>\n);\n\nconst StyledDeleteButton = styled(Button)`\n    padding: 20px 32px;\n`;\n\nexport interface CartListItemProps {\n    id: string;\n    index: number;\n}\n\nexport interface CartListItemViewProps {\n    imageUrl: string;\n    name: string;\n    price: number;\n    oldPrice?: number;\n    count: number;\n    isWantMoreThanHave?: boolean;\n    disabled?: boolean;\n    label?: LabelProps;\n    isMoreButtonDisabled?: boolean;\n}\n\nexport const CartListItemSberbox: React.FC<CartListItemProps> = ({ index, id }) => {\n    const {\n        imageUrl,\n        name,\n        price,\n        oldPrice,\n        label,\n        count,\n        isWantMoreThanHave,\n        disabled,\n        isMoreButtonDisabled,\n    } = useSelector(({ cartPage: { itemsMap } }) => itemsMap[id]);\n    const dispatch = useDispatch();\n\n    const handleLessClick = React.useCallback(() => {\n        dispatch(\n            removeItemAction({\n                item: id,\n                count: '1',\n                shouldRemoveMention: !count,\n            }),\n        );\n    }, [dispatch, id, count]);\n\n    const handleMoreClick = React.useCallback(() => {\n        dispatch(\n            addItemAction({\n                item: id,\n                count: '1',\n            }),\n        );\n    }, [dispatch, id]);\n\n    const handleRemoveClick = React.useCallback(() => {\n        dispatch(\n            removeItemAction({\n                item: id,\n                count: String(Infinity),\n                shouldRemoveMention: true,\n            }),\n        );\n    }, [dispatch, id]);\n\n    const handleFocus = React.useCallback(() => dispatch(cartSelectItemAction(id)), [dispatch, id]);\n\n    return (\n        <CartListItemRootSberbox disabled={disabled}>\n            <CartListItemThumbSberbox imageUrl={imageUrl} index={index} />\n            <CartListItemInfoSberbox disabled={disabled} label={label} name={name} price={price} oldPrice={oldPrice} />\n            {disabled ? (\n                <StyledDeleteButton view={ButtonViews.secondary} onFocus={handleFocus} onClick={handleRemoveClick}>\n                    Удалить\n                </StyledDeleteButton>\n            ) : (\n                <StyledSelector>\n                    <LessButton onFocus={handleFocus} onClick={handleLessClick} isRemoving={count === 0} />\n                    <StyledSelectorValue isWarning={isWantMoreThanHave}>{count}</StyledSelectorValue>\n                    <AddButton disabled={isMoreButtonDisabled} onFocus={handleFocus} onClick={handleMoreClick} />\n                </StyledSelector>\n            )}\n        </CartListItemRootSberbox>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Body1 } from '@sberdevices/plasma-styles';\nimport { warning } from '@sberdevices/plasma-tokens';\nimport { useSelector } from 'hooks/useSelector';\nimport {\n    CartListContainerSberbox,\n    CartListScrollerSberbox,\n    CartTotalPriceSberbox,\n} from 'components/Cart/List/CartList@sberbox';\n\nimport { CartListItemSberbox } from '../ListItem/CartListItem@sberbox';\n\nconst StyledMinimalPrice = styled(Body1)`\n    margin-top: 8px;\n\n    padding-left: 16px;\n\n    color: ${warning};\n`;\n\nexport const CartListSberbox: React.FC = () => {\n    const { order, totalPrice, toMinimumPrice, wrapperYShift, topGradientVisible, bottomGradientVisible } = useSelector(\n        ({ cartPage }) => cartPage,\n    );\n\n    const itemList = React.useMemo(\n        () => order.map((itemId, index) => <CartListItemSberbox key={itemId} index={index + 1} id={itemId} />),\n        [order],\n    );\n\n    return (\n        <CartListContainerSberbox>\n            {order.length > 0 && (\n                <CartListScrollerSberbox\n                    topGradientVisible={topGradientVisible}\n                    bottomGradientVisible={bottomGradientVisible}\n                    wrapperYShift={wrapperYShift}\n                >\n                    {itemList}\n                </CartListScrollerSberbox>\n            )}\n            <CartTotalPriceSberbox>Сумма заказа {totalPrice} ₽</CartTotalPriceSberbox>\n            {Boolean(toMinimumPrice) && (\n                <StyledMinimalPrice>До минимального заказа еще {toMinimumPrice} ₽</StyledMinimalPrice>\n            )}\n        </CartListContainerSberbox>\n    );\n};\n","import React from 'react';\nimport { CartRootSberbox } from 'components/Cart/Root/CartRoot@sberbox';\nimport { CartBackground } from 'components/Cart/Background/CartBackground';\n\nimport { CartInfoSberbox } from './Info/CartInfo@sberbox';\nimport { CartListSberbox } from './List/CartList@sberbox';\n\nconst CartSberbox: React.FC = () => (\n    <>\n        <CartRootSberbox>\n            <CartListSberbox />\n            <CartInfoSberbox />\n        </CartRootSberbox>\n        <CartBackground />\n    </>\n);\n\nexport default CartSberbox;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Footnote1, Footnote2 } from '@sberdevices/plasma-styles';\nimport { critical, primary, secondary, surfaceLiquid01 } from '@sberdevices/plasma-tokens';\nimport { useSelector } from 'hooks/useSelector';\nimport { useDispatch } from 'hooks/useDispatch';\nimport { addItemAction, removeItemAction } from 'store/actions/native';\nimport { IndexBadge } from 'components/IndexBadge/IndexBadge';\nimport { ReactComponent as AddSvg } from 'assets/icons/add.svg';\nimport { ReactComponent as RemoveSvg } from 'assets/icons/remove.svg';\n\nconst StyledCartListItemTouch = styled.div`\n    position: relative;\n    padding: 10px 16px;\n    margin-bottom: 4px;\n\n    display: flex;\n`;\n\nconst thumbSizePx = 40;\n\ninterface StyledThumbProps {\n    imageUrl: string;\n}\n\nconst StyledThumb = styled.div<StyledThumbProps>`\n    position: relative;\n\n    margin-right: 10px;\n\n    height: ${thumbSizePx}px;\n    width: ${thumbSizePx}px;\n\n    background-image: url('${({ imageUrl }) => imageUrl}');\n    background-size: contain;\n    background-position: center;\n    background-repeat: no-repeat;\n`;\n\nconst StyledInfo = styled.div`\n    display: flex;\n    flex-grow: 1;\n    flex-direction: column;\n    justify-content: center;\n`;\n\nconst StyledName = styled(Footnote1)`\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 2;\n    overflow: hidden;\n\n    color: ${primary};\n`;\n\nconst StyledPrice = styled(Footnote1)`\n    margin-top: 2px;\n\n    color: ${secondary};\n`;\n\nconst StyledIndexBadge = styled(IndexBadge)`\n    top: -4px;\n    right: -4px;\n`;\n\nconst StyledSelector = styled.div`\n    flex-shrink: 0;\n\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    margin-left: 16px;\n\n    min-width: 90px;\n`;\n\ninterface StyledCountTouchButtonProps {\n    isDanger?: boolean;\n}\n\nconst StyledCountTouchButton = styled.div<StyledCountTouchButtonProps>`\n    cursor: pointer;\n    background-color: ${surfaceLiquid01};\n    border-radius: 8px;\n    display: flex;\n    width: 32px;\n    height: 32px;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    font-size: 14px;\n\n    ${({ isDanger }) =>\n        isDanger &&\n        css`\n            background-color: ${critical};\n        `}\n`;\n\nconst StyledAddIcon = styled(AddSvg)`\n    height: 12px;\n    width: 12px;\n`;\n\nconst StyledLessIcon = styled(RemoveSvg)`\n    height: 12px;\n    width: 12px;\n`;\n\nconst StyledRemoveIcon = styled(AddSvg)`\n    transform: rotate(45deg);\n    height: 15px;\n    width: 15px;\n`;\n\nconst StyledCount = styled(Footnote2)`\n    color: ${primary};\n`;\n\nexport interface CartListItemTouchProps {\n    id: string;\n    index: number;\n}\n\nexport interface CartListItemTouchViewProps {\n    imageUrl: string;\n    name: string;\n    price: number;\n    count: number;\n    disabled?: boolean;\n    isMoreButtonDisabled?: boolean;\n}\n\nexport const CartListItemTouch: React.FC<CartListItemTouchProps> = ({ index, id }) => {\n    const { imageUrl, name, price, count, disabled } = useSelector(({ cartPageTouch: { itemsMap } }) => itemsMap[id]);\n\n    const dispatch = useDispatch();\n\n    const handleLessClick = React.useCallback(() => {\n        dispatch(\n            removeItemAction({\n                item: id,\n                count: '1',\n                shouldRemoveMention: !count,\n            }),\n        );\n    }, [dispatch, id, count]);\n\n    const handleMoreClick = React.useCallback(() => {\n        dispatch(\n            addItemAction({\n                item: id,\n                count: '1',\n            }),\n        );\n    }, [dispatch, id]);\n\n    return (\n        <StyledCartListItemTouch>\n            <StyledThumb imageUrl={imageUrl}>\n                <StyledIndexBadge size=\"xxs\" index={index + 1} />\n            </StyledThumb>\n            <StyledInfo>\n                <StyledName>{name}</StyledName>\n                <StyledPrice>{price} ₽</StyledPrice>\n            </StyledInfo>\n            {disabled ? null : (\n                <StyledSelector>\n                    <StyledCountTouchButton isDanger={!count} onClick={handleLessClick}>\n                        {count ? <StyledLessIcon /> : <StyledRemoveIcon />}\n                    </StyledCountTouchButton>\n                    <StyledCount>{count}</StyledCount>\n                    <StyledCountTouchButton onClick={handleMoreClick}>\n                        <StyledAddIcon />\n                    </StyledCountTouchButton>\n                </StyledSelector>\n            )}\n        </StyledCartListItemTouch>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Body1, Body2 } from '@sberdevices/plasma-styles';\nimport { accent, primary, warning } from '@sberdevices/plasma-tokens';\nimport { useSelector } from 'hooks/useSelector';\n\nimport { CartListItemTouch } from '../ListItem/CartListItem@touch';\n\nconst StyledCartListTouch = styled.div`\n    box-sizing: border-box;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n    margin-top: 17px;\n`;\n\nconst StyledContainer = styled.div`\n    height: 190px;\n    margin-bottom: 24px;\n`;\n\nconst StyledTotalPrice = styled(Body2)`\n    padding-left: 16px;\n\n    color: ${primary};\n`;\n\nconst StyledPrice = styled.span`\n    color: ${accent};\n`;\n\nconst StyledMinimalPrice = styled(Body1)`\n    margin-top: 8px;\n\n    padding-left: 16px;\n\n    color: ${warning};\n`;\n\nexport const CartListTouch: React.FC = () => {\n    const { order, totalPrice, toMinimumPrice } = useSelector(({ cartPageTouch }) => cartPageTouch);\n\n    return (\n        <StyledCartListTouch>\n            {order.length > 0 && (\n                <StyledContainer>\n                    {order.map((itemId, index) => (\n                        <CartListItemTouch key={itemId} id={itemId} index={index} />\n                    ))}\n                </StyledContainer>\n            )}\n            <StyledTotalPrice>\n                Сумма к оплате\n                <StyledPrice> {totalPrice} ₽</StyledPrice>\n            </StyledTotalPrice>\n            {Boolean(toMinimumPrice) && (\n                <StyledMinimalPrice>До минимального заказа еще {toMinimumPrice} ₽</StyledMinimalPrice>\n            )}\n        </StyledCartListTouch>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Body1, Caption, Headline4, ParagraphText2 } from '@sberdevices/plasma-styles';\nimport { fontWeights, primary, secondary, critical } from '@sberdevices/plasma-tokens';\nimport { useSelector } from 'hooks/useSelector';\nimport { Pin } from 'components/Pin/Pin@touch';\n\nimport bgImage from '../Cart.assets/bg@touch.jpg';\n\nconst StyledBackground = styled.div`\n    position: absolute;\n    top: -65px;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    background-image: url('${bgImage}');\n\n    opacity: 0.6;\n`;\n\nconst StyledCartInfoTouch = styled.div`\n    position: relative;\n\n    height: 236px;\n\n    padding: 15px 16px 0;\n    box-sizing: border-box;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    &::before {\n        content: '';\n        position: absolute;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        height: 96px;\n        background: linear-gradient(360deg, #080808 0%, rgba(8, 8, 8, 0) 100%);\n\n        z-index: 1;\n\n        pointer-events: none;\n    }\n`;\n\nconst StyledPlaceInfo = styled.div`\n    position: relative;\n    z-index: 1;\n`;\n\nconst StyledTime = styled(ParagraphText2)`\n    font-weight: ${fontWeights.Semibold};\n    color: ${primary};\n`;\n\nconst StyledUnit = styled(Caption)`\n    margin-top: -4px;\n\n    color: ${primary};\n`;\n\nconst StyledAddress = styled(Headline4)`\n    margin-top: 14px;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    -webkit-line-clamp: 2;\n\n    color: ${primary};\n    text-align: center;\n`;\n\nconst StyledPersonal = styled(Body1)`\n    margin-top: 6px;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n`;\n\nconst StyledPersonalLocation = styled(Body1)`\n    -webkit-line-clamp: 2;\n\n    color: ${secondary};\n`;\n\nexport const CartInfoTouch: React.FC = () => {\n    const { address } = useSelector(({ userData }) => userData);\n    const { deliveryTime, hasRequiredData, personalAddress } = useSelector(({ cartPageTouch }) => cartPageTouch);\n\n    return (\n        <StyledCartInfoTouch>\n            <StyledPlaceInfo>\n                <Pin pinColor={critical}>\n                    <StyledTime>{deliveryTime}</StyledTime>\n                    <StyledUnit>мин</StyledUnit>\n                </Pin>\n                <StyledAddress>{address}</StyledAddress>\n                {hasRequiredData ? (\n                    <StyledPersonal>\n                        <StyledPersonalLocation>{personalAddress}</StyledPersonalLocation>\n                    </StyledPersonal>\n                ) : null}\n            </StyledPlaceInfo>\n            <StyledBackground />\n        </StyledCartInfoTouch>\n    );\n};\n","import React from 'react';\n\nimport { CartListTouch } from './List/CartList@touch';\nimport { CartInfoTouch } from './Info/CartInfo@touch';\n\nconst CartTouch: React.FC = () => {\n    return (\n        <>\n            <CartInfoTouch />\n            <CartListTouch />\n        </>\n    );\n};\n\nexport default CartTouch;\n"],"sourceRoot":""}