{"version":3,"sources":["tools/browsers-control/detect.js","pages/Cart/Info/device.svg","tools/browsers-control/index.ts","tools/browsers-control/browser.js","index.tsx","stores/ui.ts","configs/index.js","mocks/index.ts","tools/history.js","stores/user.ts","stores/product.ts","stores/products.ts","stores/cart.ts","stores/casts.ts","stores/index.ts","components/Suggest/Suggest.tsx","components/Grids/Container/index.tsx","components/Grids/Row/index.tsx","tools/bem.ts","hoc/withBem.tsx","components/Header/Header.tsx","components/HeaderAddress/HeaderAddress.tsx","components/HeaderCart/HeaderCart.tsx","components/Card/index.tsx","pages/Catalog/ListItem/CatalogListItem.tsx","pages/Catalog/List/CatalogList.tsx","pages/Catalog/Catalog.tsx","components/Grids/Col/index.tsx","components/Typography/index.tsx","pages/Cart/Info/CartInfo.tsx","pages/Cart/ListItem/CartListItem.tsx","pages/Cart/List/CartList.tsx","pages/Cart/Cart.tsx","containers/DeliveryTime/index.tsx","pages/Status/Status.tsx","containers/AppContainer/index.tsx","tools/connect.tsx"],"names":["root","undefined","Array","prototype","map","callback","thisArg","T","A","k","this","TypeError","O","Object","len","length","kValue","mappedValue","call","detect","_this","parsers","types","regexes","browser_parsers","regex","family_replacement","manufacturer","other","family_replacment","tablet","v2_replacement","v1_replacement","os_parsers","os_v2_replacement","os_v1_replacement","os_replacement","mobile_os_families","device_parsers","device_replacement","mobile_browser_families","results","parser","families","type","ArrayProto","nativeForEach","Function","forEach","indexOf","find","ua","obj","ret","i","each","iterator","context","l","key","_","has","check","str","toVersionString","output","major","minor","patch","toString","suffix","family","parse","regexp","RegExp","rep","major_rep","major_version_replacement","m","match","replace","parseInt","man","a","source","browser","name","version","os","device","mobile_agents","arr","props","hasOwnProperty","prop","module","exports","define","require","window","UserAgent","navigator","userAgent","browsersContol","browserVerify","userBrowser","browserName","browserVersion","isIe","nodeElement","document","createElement","setAttribute","innerHTML","isNotAllowedBrowser","minVersion","some","chackBrowser","setStore","store","environment","default","browserContols","renderApp","App","ReactDOM","render","history","getElementById","body","appendChild","AppContainer","hot","accept","routes","Ui","model","page","optional","enumeration","values","CATALOG","previous","maybeNull","isLoading","boolean","visibles","array","string","actions","self","ui","gotoPage","to","push","goToCart","CART","AssistantClient","sendMessage","server_action","action_id","setVisible","itemId","removeVisible","splice","getIndex","process","isProduction","cssPrefix","pkg","api","REACT_APP_API","development","staging","production","test","USER_MOCK","address","location","CART_MOCK","PRODUCTS_MOCK","id","clear_name","guid","images_urls","price","createBrowserHistory","User","ProductItem","identifier","clearName","number","imagesUrls","index","visible","Products","title","items","selectedId","products","setVisibility","item","value","selectItem","CartItem","product","reference","count","Cart","orderId","views","reduce","acc","cart","clear","cast","addToCart","removeFromCart","shouldRemoveMention","findIndex","Math","max","confirmPayment","casts","SHOW_ITEMS","command","stock","Number","applySnapshot","ADD_ITEM","itemName","REMOVE_ITEM","REMOVE_ALL","GO_TO_VALIDATION","GO_TO_CATALOG","VALIDATION_OK","order_id","STATUS","user","onMessage","message","smart_app_data","castFn","__messages","afterCreate","AssistantHost","ready","create","updateState","onStart","onData","JSON","stringify","onRequestState","state","count_in_cart","itemsMap","action","current_screen","foodtech","keys","quantity","totalPrice","discountValue","Suggest","className","Container","children","Row","noGutters","verticalPadding","topPadding","bottomPadding","style","styles","paddingTop","paddingBottom","elClassname","PREFIX","config","blockName","delimeter","modDelimeter","renderer","elements","element","join","elem","mod","modVal","modify","conditions","elemToModify","entries","predicate","Boolean","filter","all","Component","componentName","bem","Bem","Header","connectToStore","withBem","subtitle","HeaderAddress","tabIndex","onClick","MAP","HeaderCart","badge","size","width","height","CatalogListItem","countInCart","src","alt","CatalogList","Catalog","React","useEffect","console","log","onKeyDown","event","code","addEventListener","removeEventListener","hasItemsInCart","suggest","SIZES","Col","sizeClasses","sizeProp","hiddenClasses","autoClasses","offsetClasses","decoration","decorationClass","CartInfo","CartListItem","onLessClick","onMoreClick","CartList","s","xl","time","Status","NavigationRightElement","rightElement","pageRef","useRef","fallback","ref","Suspense","path","newStore","connect","selector","baseComponent","component","ownProps","Error","useObserver","displayName","storeData"],"mappings":"yFAAA,OAkBA,SAAWA,EAAMC,GAIRC,MAAMC,UAAUC,MACjBF,MAAMC,UAAUC,IAAM,SAAUC,EAAUC,GACtC,IAAIC,EAAGC,EAAGC,EACV,GAAY,MAARC,KACA,MAAM,IAAIC,UAAU,gCAGxB,MAAMC,EAAIC,OAAOH,MAGXI,EAAMF,EAAEG,SAAW,EAGzB,GAAwB,oBAAbV,EACP,MAAM,IAAIM,UAAUN,EAAW,sBAYnC,IATIC,IACAC,EAAID,GAIRE,EAAI,IAAIN,MAAMY,GAEdL,EAAI,EAEGA,EAAIK,GAAK,CACZ,IAAIE,EAAQC,EAMRR,KAAKG,IAELI,EAASJ,EAAEH,GAGXQ,EAAcZ,EAASa,KAAKX,EAAGS,EAAQP,EAAGG,GAO1CJ,EAAEC,GAAKQ,GAGXR,IAGJ,OAAOD,IAIf,MAAMW,EAAUnB,EAAKmB,OAAU,WAE3B,MAAMC,EAAQ,aAurCdA,EAAMC,QAAU,CACZ,iBACA,kBACA,aACA,qBACA,2BAGJD,EAAME,MAAQ,CAAC,UAAW,KAAM,UAEhCF,EAAMG,QA/rCU,CACZC,gBAAiB,CACb,CACIC,MAAO,2CACPC,mBAAoB,MACpBC,aAAc,YAElB,CACIF,MAAO,0DACPC,mBAAoB,SACpBE,OAAO,GAEX,CACIH,MAAO,2CACPC,mBAAoB,8BACpBE,OAAO,GAEX,CACIH,MAAO,gDACPC,mBAAoB,kBAExB,CACID,MAAO,gCACPI,kBAAmB,kBAEvB,CACIJ,MAAO,2BACPC,mBAAoB,kBAExB,CACID,MAAO,oCACPC,mBAAoB,kBAExB,CACID,MAAO,kEACPC,mBAAoB,gBAExB,CACID,MAAO,yCACPC,mBAAoB,iBAExB,CACID,MAAO,yCACPC,mBAAoB,gBAExB,CACID,MAAO,0DACPC,mBAAoB,iBAExB,CACID,MAAO,0DACPC,mBAAoB,gBAExB,CACID,MAAO,kEACPC,mBAAoB,gBAExB,CACID,MAAO,qDACPC,mBAAoB,SACpBI,QAAQ,GAEZ,CACIL,MAAO,8DAEX,CACIA,MAAO,kCACPC,mBAAoB,QACpBE,OAAO,GAEX,CACIH,MAAO,sCACPC,mBAAoB,WACpBE,OAAO,GAEX,CACIH,MAAO,uCACPC,mBAAoB,YAExB,CACID,MAAO,wCACPC,mBAAoB,YAExB,CACID,MAAO,uCACPC,mBAAoB,YAExB,CACID,MAAO,4BACPC,mBAAoB,sBACpBE,OAAO,GAEX,CACIH,MAAO,wDACPC,mBAAoB,eACpBI,QAAQ,GAEZ,CACIL,MAAO,gDACPC,mBAAoB,gBAExB,CACID,MAAO,aACPC,mBAAoB,gBAExB,CACID,MAAO,+BACPC,mBAAoB,cAExB,CACID,MAAO,mCACPC,mBAAoB,cAExB,CACID,MAAO,sDACPC,mBAAoB,SAExB,CACID,MAAO,sCACPC,mBAAoB,SAExB,CACID,MAAO,iCACPC,mBAAoB,SAExB,CACID,MAAO,0BACPC,mBAAoB,SAExB,CACID,MAAO,yCACPC,mBAAoB,kBAExB,CACID,MAAO,WACPC,mBAAoB,SACpBE,OAAO,GAEX,CACIH,MAAO,+CACPC,mBAAoB,YACpBE,OAAO,GAEX,CACIH,MAAO,4DACPC,mBAAoB,WACpBE,OAAO,GAEX,CACIH,MAAO,4DACPC,mBAAoB,WACpBE,OAAO,GAEX,CACIH,MAAO,SACPC,mBAAoB,SACpBE,OAAO,GAEX,CACIH,MAAO,iDACPC,mBAAoB,WACpBE,OAAO,GAEX,CACIH,MAAO,uCACPC,mBAAoB,YACpBE,OAAO,GAEX,CACIH,MAAO,kBACPC,mBAAoB,QACpBE,OAAO,GAEX,CACIH,MAAO,2CACPC,mBAAoB,gBACpBE,OAAO,GAEX,CACIH,MAAO,kBACPC,mBAAoB,iBACpBE,OAAO,GAEX,CACIH,MAAO,2BACPC,mBAAoB,UAExB,CACID,MAAO,2BACPC,mBAAoB,WACpBE,OAAO,GAEX,CACIH,MAAO,SACPC,mBAAoB,SACpBE,OAAO,GAEX,CACIH,MAAO,yBACPC,mBAAoB,QAExB,CACID,MAAO,2CACPC,mBAAoB,iBAExB,CACID,MAAO,4CACPC,mBAAoB,qBAExB,CACID,MAAO,oDACPC,mBAAoB,iBAExB,CACID,MAAO,yCACPC,mBAAoB,gBAExB,CACID,MAAO,uCACPC,mBAAoB,aACpBE,OAAO,GAEX,CACIH,MAAO,gCACPC,mBAAoB,gBACpBE,OAAO,GAEX,CACIH,MAAO,oCACPC,mBAAoB,WACpBE,OAAO,GAEX,CACIH,MAAO,oCACPC,mBAAoB,iBACpBE,OAAO,GAEX,CACIH,MAAO,4CACPC,mBAAoB,aACpBE,OAAO,GAEX,CACIH,MAAO,wCACPC,mBAAoB,eAExB,CACID,MAAO,+BACPC,mBAAoB,cAExB,CACID,MACI,ubAER,CACIA,MACI,2ZAER,CACIA,MACI,mGAER,CACIA,MAAO,kFAEX,CACIA,MAAO,kBACPM,eAAgB,IAChBC,eAAgB,KAEpB,CACIP,MAAO,mBACPM,eAAgB,IAChBC,eAAgB,KAEpB,CACIP,MAAO,kBACPM,eAAgB,IAChBC,eAAgB,KAEpB,CACIP,MAAO,wBACPM,eAAgB,IAChBC,eAAgB,KAEpB,CACIP,MAAO,sBACPO,eAAgB,KAEpB,CACIP,MAAO,gCACPC,mBAAoB,aAExB,CACID,MAAO,iCACPC,mBAAoB,mBAExB,CACID,MAAO,sCAEX,CACIA,MAAO,kDAEX,CACIA,MAAO,yBACPG,OAAO,GAEX,CACIH,MAAO,oBACPG,OAAO,GAEX,CACIH,MAAO,yCACPG,OAAO,GAEX,CACIH,MAAO,oCACPC,mBAAoB,UACpBE,OAAO,GAEX,CACIH,MAAO,8BACPO,eAAgB,IAChBJ,OAAO,GAEX,CACIH,MAAO,uBACPC,mBAAoB,cACpBC,aAAc,QAElB,CACIF,MAAO,6CACPE,aAAc,QAElB,CACIF,MAAO,wCACPG,OAAO,GAEX,CACIH,MAAO,4BACPC,mBAAoB,UACpBE,OAAO,GAEX,CACIH,MAAO,4BACPC,mBAAoB,UACpBE,OAAO,GAEX,CACIH,MAAO,qCACPC,mBAAoB,WACpBE,OAAO,GAEX,CACIH,MAAO,2CACPC,mBAAoB,gBACpBC,aAAc,SAElB,CACIF,MAAO,kCACPC,mBAAoB,gBACpBC,aAAc,SAElB,CACIF,MAAO,SACPC,mBAAoB,gBACpBC,aAAc,SAElB,CACIF,MAAO,6CACPC,mBAAoB,gBACpBC,aAAc,SAElB,CACIF,MAAO,oCACPC,mBAAoB,gBACpBC,aAAc,SAElB,CACIF,MAAO,WACPC,mBAAoB,gBACpBC,aAAc,SAElB,CACIF,MAAO,2CACPC,mBAAoB,gBACpBI,QAAQ,EACRH,aAAc,SAElB,CACIF,MAAO,kCACPC,mBAAoB,gBACpBI,QAAQ,EACRH,aAAc,SAElB,CACIF,MAAO,SACPC,mBAAoB,gBACpBI,QAAQ,EACRH,aAAc,SAElB,CACIF,MAAO,0BACPG,OAAO,GAEX,CACIH,MAAO,UACPO,eAAgB,IAChBJ,OAAO,GAEX,CACIH,MAAO,WACPC,mBAAoB,+BACpBC,aAAc,SAElB,CACIF,MAAO,iDACPE,aAAc,SAElB,CACIF,MAAO,wCACPE,aAAc,SAElB,CACIF,MAAO,iCACPE,aAAc,SAElB,CACIF,MAAO,qCACPC,mBAAoB,eACpBC,aAAc,SAElB,CACIF,MAAO,mBACPM,eAAgB,IAChBC,eAAgB,IAChBN,mBAAoB,eACpBC,aAAc,SAElB,CACIF,MAAO,6BACPC,mBAAoB,oBACpBC,aAAc,SAElB,CACIF,MAAO,oDACPC,mBAAoB,8BACpBC,aAAc,SAElB,CACIF,MAAO,qBACPE,aAAc,SAElB,CACIF,MAAO,qDACPC,mBAAoB,oBACpBI,QAAQ,EACRH,aAAc,SAElB,CACIF,MAAO,oDACPC,mBAAoB,oBACpBC,aAAc,OAElB,CACIF,MAAO,4BACPC,mBAAoB,aACpBC,aAAc,OAElB,CACIF,MAAO,6BACPG,OAAO,GAEX,CACIH,MAAO,2BACPC,mBAAoB,cACpBC,aAAc,QAElB,CACIF,MAAO,wBACPC,mBAAoB,WACpBC,aAAc,QAElB,CACIF,MAAO,6BACPG,OAAO,GAEX,CACIH,MAAO,2CACPG,OAAO,GAEX,CACIH,MAAO,4CACPG,OAAO,EACPE,QAAQ,GAEZ,CACIL,MAAO,yEACPC,mBAAoB,kBAExB,CACID,MAAO,mDACPC,mBAAoB,UAExB,CACID,MAAO,iBAEX,CACIA,MAAO,+BACPG,OAAO,GAEX,CACIH,MAAO,2BACPO,eAAgB,IAChBJ,OAAO,GAEX,CACIH,MAAO,mCACPG,OAAO,GAEX,CACIH,MAAO,WACPC,mBAAoB,iBACpBE,OAAO,GAEX,CACIH,MAAO,gCACPC,mBAAoB,MAExB,CACID,MAAO,yBACPC,mBAAoB,OAG5BO,WAAY,CACR,CACIR,MAAO,mDAEX,CACIA,MAAO,qDAEX,CACIA,MAAO,kBACPS,kBAAmB,IACnBC,kBAAmB,KAEvB,CACIV,MAAO,mBACPS,kBAAmB,IACnBC,kBAAmB,KAEvB,CACIV,MAAO,kBACPS,kBAAmB,IACnBC,kBAAmB,KAEvB,CACIV,MAAO,wBACPS,kBAAmB,IACnBC,kBAAmB,KAEvB,CACIV,MAAO,sBACPU,kBAAmB,KAEvB,CACIV,MAAO,gCACPW,eAAgB,WAEpB,CACIX,MAAO,yBAEX,CACIA,MAAO,kCACPW,eAAgB,cAEpB,CACIX,MAAO,WACPW,eAAgB,oBAEpB,CACIX,MAAO,qBACPW,eAAgB,aAEpB,CACIX,MAAO,qBACPW,eAAgB,iBAEpB,CACIX,MACI,kHAER,CACIA,MAAO,uCACPW,eAAgB,cAEpB,CACIX,MAAO,qBACPW,eAAgB,aAEpB,CACIX,MAAO,oBACPW,eAAgB,mBAEpB,CACIX,MAAO,qBACPW,eAAgB,gBAEpB,CACIX,MAAO,sCAEX,CACIA,MAAO,oBACPW,eAAgB,kBAEpB,CACIX,MAAO,aACPW,eAAgB,kBAEpB,CACIX,MAAO,UACPW,eAAgB,cAEpB,CACIX,MAAO,0BACPG,OAAO,GAEX,CACIH,MAAO,6CACPE,aAAc,SAElB,CACIF,MAAO,2BACPE,aAAc,SAElB,CACIF,MAAO,+CACPW,eAAgB,MAChBT,aAAc,SAElB,CACIF,MAAO,4BACPW,eAAgB,MAChBT,aAAc,SAElB,CACIF,MAAO,gBACPK,QAAQ,EACRH,aAAc,SAElB,CACIF,MAAO,wDACPW,eAAgB,MAChBT,aAAc,SAElB,CACIF,MAAO,kDACPW,eAAgB,aAEpB,CACIX,MAAO,kDACPG,OAAO,GAEX,CACIH,MAAO,2BACPG,OAAO,GAEX,CACIH,MAAO,+DACPG,OAAO,GAEX,CACIH,MAAO,oCACPW,eAAgB,cAEpB,CACIX,MAAO,kCACPW,eAAgB,kBAEpB,CACIX,MAAO,kCACPW,eAAgB,mBAEpB,CACIX,MAAO,cACPW,eAAgB,aAEpB,CACIX,MAAO,yBACPW,eAAgB,cAEpB,CACIX,MAAO,UACPG,OAAO,GAEX,CACIH,MAAO,mBACPW,eAAgB,cAEpB,CACIX,MAAO,kEACPW,eAAgB,gBAChBT,aAAc,OAElB,CACIF,MAAO,kEACPW,eAAgB,gBAChBT,aAAc,OAElB,CACIF,MAAO,2CACPW,eAAgB,uBAChBN,QAAQ,EACRH,aAAc,OAElB,CACIF,MAAO,gBACPW,eAAgB,uBAChBN,QAAQ,EACRH,aAAc,OAElB,CACIF,MAAO,kBACPW,eAAgB,gBAChBT,aAAc,OAElB,CACIF,MAAO,8CACPW,eAAgB,SAEpB,CACIX,MAAO,oEACPG,OAAO,GAEX,CACIH,MAAO,wEACPG,OAAO,GAEX,CACIH,MAAO,4EAEX,CACIA,MAAO,6FAEX,CACIA,MAAO,cACPG,OAAO,IAGfS,mBAAoB,CAAC,oBAAqB,aAAc,cACxDC,eAAgB,CACZ,CACIb,MAAO,6BACPc,mBAAoB,SACpBZ,aAAc,OAElB,CACIF,MAAO,kDACPc,mBAAoB,SACpBZ,aAAc,OAElB,CACIF,MAAO,2BACPc,mBAAoB,iBACpBZ,aAAc,OAElB,CACIF,MAAO,gBACPc,mBAAoB,uBACpBZ,aAAc,OAElB,CACIF,MAAO,mBACPc,mBAAoB,kBACpBZ,aAAc,OAElB,CACIF,MAAO,2BACPc,mBAAoB,SACpBZ,aAAc,OAElB,CACIF,MAAO,qBACPc,mBAAoB,SACpBZ,aAAc,OAElB,CACIF,MAAO,qBACPc,mBAAoB,SACpBZ,aAAc,OAElB,CACIF,MAAO,qBACPc,mBAAoB,SACpBZ,aAAc,OAElB,CACIF,MAAO,oBACPc,mBAAoB,SACpBZ,aAAc,OAElB,CACIF,MAAO,QACPE,aAAc,OAElB,CACIF,MAAO,8BACPc,mBAAoB,cACpBX,OAAO,EACPD,aAAc,QAElB,CACIF,MAAO,qFAEX,CACIA,MAAO,kFAEX,CACIA,MAAO,qFAEX,CACIA,MAAO,2EAEX,CACIA,MAAO,qDAEX,CACIA,MAAO,iBACPc,mBAAoB,YACpBZ,aAAc,SAElB,CACIF,MAAO,0BACPc,mBAAoB,WACpBZ,aAAc,SAElB,CACIF,MAAO,0BACPc,mBAAoB,WACpBZ,aAAc,SAElB,CACIF,MAAO,0BACPc,mBAAoB,WACpBZ,aAAc,SAElB,CACIF,MAAO,0BACPc,mBAAoB,WACpBZ,aAAc,SAElB,CACIF,MAAO,UACPc,mBAAoB,QACpBZ,aAAc,SAElB,CACIF,MAAO,4BACPc,mBAAoB,sBACpBT,QAAQ,EACRH,aAAc,OAElB,CACIF,MAAO,0BACPE,aAAc,OAElB,CACIF,MAAO,wBACPc,mBAAoB,gBACpBZ,aAAc,OAElB,CACIF,MAAO,wBACPc,mBAAoB,WACpBZ,aAAc,QAElB,CACIF,MAAO,yBACPc,mBAAoB,YACpBZ,aAAc,QAElB,CACIF,MAAO,6BACPc,mBAAoB,cACpBZ,aAAc,MAElB,CACIF,MAAO,qCACPc,mBAAoB,aACpBZ,aAAc,MAElB,CACIF,MAAO,qBACPc,mBAAoB,UACpBZ,aAAc,QAElB,CACIF,MAAO,qBACPc,mBAAoB,eACpBZ,aAAc,QAElB,CACIF,MAAO,iCACPc,mBAAoB,UACpBZ,aAAc,MAElB,CACIF,MAAO,gBACPE,aAAc,UAElB,CACIF,MAAO,WACPE,aAAc,UAElB,CACIF,MAAO,4CACPc,mBAAoB,cACpBT,QAAQ,EACRH,aAAc,UAElB,CACIF,MAAO,oBACPE,aAAc,SAElB,CACIF,MAAO,UACPE,aAAc,SAElB,CACIF,MAAO,UACPE,aAAc,SAElB,CACIF,MAAO,sBACPE,aAAc,SAElB,CACIF,MAAO,YACPE,aAAc,SAElB,CACIF,MAAO,4BACPc,mBAAoB,YAExB,CACId,MAAO,uBACPc,mBAAoB,UACpBZ,aAAc,QAElB,CACIF,MAAO,uBACPc,mBAAoB,UACpBZ,aAAc,QAElB,CACIF,MAAO,wBACPc,mBAAoB,UACpBX,OAAO,EACPD,aAAc,QAElB,CACIF,MAAO,wBACPc,mBAAoB,UACpBX,OAAO,EACPD,aAAc,QAElB,CACIF,MAAO,wBACPc,mBAAoB,UACpBZ,aAAc,QAElB,CACIF,MAAO,wBACPc,mBAAoB,UACpBZ,aAAc,QAElB,CACIF,MAAO,wBACPc,mBAAoB,UACpBX,OAAO,GAEX,CACIH,MAAO,wBACPc,mBAAoB,UACpBX,OAAO,GAEX,CACIH,MAAO,sBACPc,mBAAoB,UACpBX,OAAO,GAEX,CACIH,MAAO,sBACPc,mBAAoB,UACpBZ,aAAc,QAElB,CACIF,MAAO,8BACPc,mBAAoB,YACpBX,OAAO,GAEX,CACIH,MAAO,4BACPc,mBAAoB,YACpBX,OAAO,GAEX,CACIH,MAAO,wBACPc,mBAAoB,YACpBX,OAAO,GAEX,CACIH,MAAO,yBACPc,mBAAoB,qBACpBX,OAAO,GAEX,CACIH,MAAO,0BACPc,mBAAoB,YACpBX,OAAO,GAEX,CACIH,MAAO,2BACPc,mBAAoB,aACpBX,OAAO,GAEX,CACIH,MAAO,uBACPc,mBAAoB,aACpBX,OAAO,GAEX,CACIH,MAAO,0BACPc,mBAAoB,YACpBZ,aAAc,UAElB,CACIF,MAAO,0BACPc,mBAAoB,YACpBZ,aAAc,UAElB,CACIF,MAAO,oBACPc,mBAAoB,QACpBZ,aAAc,MAElB,CACIF,MAAO,sBACPc,mBAAoB,QACpBZ,aAAc,MAElB,CACIF,MAAO,uBACPc,mBAAoB,QACpBZ,aAAc,MAElB,CACIF,MAAO,uBACPc,mBAAoB,QACpBZ,aAAc,MAElB,CACIF,MAAO,oBACPc,mBAAoB,QACpBZ,aAAc,MAElB,CACIF,MAAO,4BACPc,mBAAoB,QACpBZ,aAAc,MAElB,CACIF,MAAO,sBACPc,mBAAoB,QACpBZ,aAAc,MAElB,CACIF,MAAO,uBACPc,mBAAoB,QACpBZ,aAAc,MAElB,CACIF,MAAO,mBACPc,mBAAoB,QACpBZ,aAAc,MAElB,CACIF,MAAO,8BACPc,mBAAoB,gBAExB,CACId,MAAO,8BACPc,mBAAoB,gBAExB,CACId,MAAO,8BACPE,aAAc,YAElB,CACIF,MAAO,wBACPc,mBAAoB,cACpBZ,aAAc,YAElB,CACIF,MAAO,uBACPc,mBAAoB,cACpBZ,aAAc,YAElB,CACIF,MAAO,wBACPc,mBAAoB,aACpBZ,aAAc,WAElB,CACIF,MAAO,yBACPc,mBAAoB,aACpBZ,aAAc,WAElB,CACIF,MAAO,4BACPc,mBAAoB,aACpBZ,aAAc,WAElB,CACIF,MAAO,+BACPc,mBAAoB,aACpBZ,aAAc,WAElB,CACIF,MAAO,gCACPc,mBAAoB,cACpBX,OAAO,GAEX,CACIH,MAAO,gCACPc,mBAAoB,cACpBX,OAAO,GAEX,CACIH,MACI,wHACJc,mBAAoB,sBAExB,CACId,MACI,4gBACJc,mBAAoB,yBAExB,CACId,MACI,4hBACJc,mBAAoB,yBAExB,CACId,MACI,siBACJc,mBAAoB,yBAExB,CACId,MACI,wjBACJc,mBAAoB,yBAExB,CACId,MACI,4XACJc,mBAAoB,WAG5BC,wBAAyB,CACrB,iBACA,eACA,aACA,gBACA,QACA,YACA,uBACA,QACA,aACA,OACA,OACA,UACA,QACA,QACA,WACA,UACA,SACA,eACA,OACA,OACA,aACA,WACA,SACA,WACA,UACA,SACA,UACA,OACA,gBACA,oBACA,aACA,mBAgBH,WACG,MAAMC,EAAU,GAIhB,OAHArB,EAAMC,QAAQjB,IAAKsC,IACfD,EAAQC,GAAU,KAEfD,EALV,GAQLrB,EAAMuB,SAAY,WACd,MAAMF,EAAU,GAIhB,OAHArB,EAAME,MAAMlB,IAAKwC,IACbH,EAAQG,GAAQ,KAEbH,EALO,GAQlB,IAAII,EAAa3C,MAAMC,UAGnB2C,GAFWjC,OAAOV,UACN4C,SAAS5C,UACL0C,EAAWG,SACXH,EAAWI,QAE/B,MAAMC,EAAO,SAAUC,EAAIC,GACvB,IAAIC,EAAM,GACV,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAIrC,SACpBsC,EAAMD,EAAIE,GAAGH,IACTE,GAFwBC,KAMhC,OAAOD,GAmBX,IAAIL,EACJ,IAAIO,EAAQP,EAAU,SAAUI,EAAKI,EAAUC,GAC3C,GAAW,MAAPL,EACJ,GAAIN,GAAiBM,EAAIJ,UAAYF,EACjCM,EAAIJ,QAAQQ,EAAUC,QACnB,GAAIL,EAAIrC,UAAYqC,EAAIrC,OAC3B,IAAK,IAAIuC,EAAI,EAAGI,EAAIN,EAAIrC,OAAQuC,EAAII,EAAGJ,IACnCE,EAAStC,KAAKuC,EAASL,EAAIE,GAAIA,EAAGF,QAGtC,IAAK,MAAMO,KAAOP,EACVQ,EAAEC,IAAIT,EAAKO,IACXH,EAAStC,KAAKuC,EAASL,EAAIO,GAAMA,EAAKP,IAMtD,MASMU,EAAQ,SAAUC,GACpB,SAAUA,GAAsB,qBAARA,GAA8B,MAAPA,IAG7CC,EAAkB,SAAUZ,GAC9B,IAAIa,EAAS,GAab,OAXIH,EADJV,EAAMA,GAAO,KAELU,EAAMV,EAAIc,SACVD,GAAUb,EAAIc,MACVJ,EAAMV,EAAIe,SACVF,GAAU,IAAMb,EAAIe,MAChBL,EAAMV,EAAIgB,SACVH,GAAU,IAAMb,EAAIgB,SAK7BH,GAGLI,EAAW,SAAUjB,GAEvB,IAAIkB,EAASN,EADbZ,EAAMA,GAAO,IAGb,OADIkB,IAAQA,EAAS,IAAMA,GACpBlB,GAAOU,EAAMV,EAAImB,QAAUnB,EAAImB,OAASD,EAAS,IA0F5D,OAvFAlD,EAAMoD,MAAQ,SAAUrB,GAEpB,MAAM9B,EAAU,SAAUuB,GACtB,OAAOxB,EAAMG,QAAQqB,EAAO,YAAYxC,IAAKgD,IACzC,IAAIqB,EAAS,IAAIC,OAAOtB,EAAI3B,OACxBkD,EAAMvB,GAAc,YAATR,EAAqB,SAAWA,GAAQ,gBACnDgC,EAAYxB,EAAIyB,0BAapB,OAZA,SAAgB1B,GACZ,MAAM2B,EAAI3B,EAAG4B,MAAMN,GACnB,IAAKK,EAAG,OAAO,KACf,MAAMzB,EAAM,GAOZ,OANAA,EAAIkB,QAAUI,EAAMA,EAAIK,QAAQ,KAAMF,EAAE,IAAMA,EAAE,KAAO,QACvDzB,EAAIa,MAAQe,SAASL,GAAaE,EAAE,KAAO,KAC3CzB,EAAIc,MAAQW,EAAE,GAAKG,SAASH,EAAE,IAAM,KACpCzB,EAAIe,MAAQU,EAAE,GAAKG,SAASH,EAAE,IAAM,KACpCzB,EAAIvB,OAASsB,EAAItB,OACjBuB,EAAI6B,IAAM9B,EAAIzB,cAAgB,KACvB0B,MAQb7B,EAAkBH,EAAQ,WAE1BY,EAAaZ,EAAQ,MAErBiB,EAAiBjB,EAAQ,UAEzB8D,EAAI,IARQ,aAUlBA,EAAEC,OAASjC,EAEXgC,EAAEE,QAAUnC,EAAKC,EAAI3B,GACjBsC,EAAMqB,EAAEE,UACRF,EAAEE,QAAQC,KAAOjB,EAASc,EAAEE,SAC5BF,EAAEE,QAAQE,QAAUvB,EAAgBmB,EAAEE,UAEtCF,EAAEE,QAAU,GAGhBF,EAAEK,GAAKtC,EAAKC,EAAIlB,GACZ6B,EAAMqB,EAAEK,KACRL,EAAEK,GAAGF,KAAOjB,EAASc,EAAEK,IACvBL,EAAEK,GAAGD,QAAUvB,EAAgBmB,EAAEK,KAEjCL,EAAEK,GAAK,GAGXL,EAAEM,OAASvC,EAAKC,EAAIb,GAChBwB,EAAMqB,EAAEM,SACRN,EAAEM,OAAOH,KAAOjB,EAASc,EAAEM,QAC3BN,EAAEM,OAAOF,QAAUvB,EAAgBmB,EAAEM,SAErCN,EAAEM,OAAS,CACP3D,QAAQ,EACRyC,OAAQ,SAIhB,MAAMmB,EAAgB,GACUtE,EAAMG,QAAQiB,wBAAwBpC,IAAK2D,IACvE2B,EAAc3B,IAAO,IAEE3C,EAAMG,QAAQc,mBAAmBjC,IAAK2D,IAC7D2B,EAAc3B,IAAO,IA1Id,IAAU4B,EAAKC,EA2J1B,MAdyB,WAArBT,EAAEE,QAAQd,OACVY,EAAEM,OAAO7C,KAAO,SACTuC,EAAEE,QAAQvD,QAAUqD,EAAEK,GAAG1D,QAAUqD,EAAEM,OAAO3D,OACnDqD,EAAEM,OAAO7C,KAAO,SACT8C,EAAcG,eAAeV,EAAEE,QAAQd,QAC9CY,EAAEM,OAAO7C,KAAO,SAEhBuC,EAAEM,OAAO7C,KAAO,UAGpBuC,EAAEM,OAAO9D,aAAewD,EAAEE,QAAQH,KAAOC,EAAEK,GAAGN,KAAOC,EAAEM,OAAOP,KAAO,KAvJhDS,EAyJd,CAACR,EAAEE,QAASF,EAAEK,GAAIL,EAAEM,QAzJDG,EAyJU,CAAC,SAAU,OAxJ/CrC,EAAKoC,EAAMvC,IACPG,EAAKqC,EAAQE,WACF1C,EAAI0C,OAwJZX,GAGJ/D,EAp4CoB,GA44CU2E,EAAOC,UACxCA,EAAUD,EAAOC,QAAU7E,GAE/B6E,EAAQ7E,OAASA,OA18CzB,KAi9CQ8E,GAAQC,GAAY/E,GAAd,8BAj9Cd,CAm9CGgF,S,oBCr+CHJ,EAAOC,QAAU,IAA0B,oC,uDCIvCG,OAAOC,UAAYjF,IAAOqD,MAAM6B,UAAUC,WAG9C,MAAMC,EAAiB,CACnBC,gBACI,MAAMC,EAAc,CAChBC,YAAaP,OAAOC,UAAUf,QAAQd,OACtCoC,eAAgBR,OAAOC,UAAUf,QAAQE,QACzCH,OAAQe,OAAOC,UAAUhB,QAEvBwB,EAAmC,OAA5BH,EAAYC,YAEnBG,EAAcC,SAASC,cAAc,OAC3CF,EAAYG,aAAa,KAAM,iBAC/BH,EAAYI,UClBL,+BDoDP,MAAO,CACHC,oBAjCoB,CACpB,CACI5B,KAAM,SACN6B,WAAY,MAEhB,CACI7B,KAAM,KACN6B,WAAY,MAEhB,CACI7B,KAAM,UACN6B,WAAY,MAEhB,CACI7B,KAAM,QACN6B,WAAY,MAEhB,CACI7B,KAAM,SACN6B,WAAY,QAOMC,KACXC,GACGA,EAAa/B,OAASmB,EAAYC,cACjCW,EAAaF,YAAcV,EAAYE,gBAKtDE,cACAD,OACAH,iBAKGF,O,g0BE/Cf,GAFAe,YAASC,KAEW,eAAhBC,IAA8B,CAC9BrB,OAAOoB,MAAQA,IACSrB,EAAQ,KAChBuB,QAAQF,KAGrB,MAAMf,EAAgBkB,IAAelB,gBAIrC,SAASmB,EAAUC,GACtBC,IAASC,OACL,kBAAC,IAAD,CAAQC,QAASA,KACb,kBAACH,EAAD,OAEJd,SAASkB,eAPG,qBAWhBxB,EAAcU,oBACdJ,SAASmB,KAAKC,YAAY1B,EAAcK,aAExCc,EAAUQ,WAGM,eAAhBX,KAAgCzB,EAAOqC,KACvCrC,EAAOqC,IAAIC,OAAO,4BAA6B,KAG3CV,EADgBzB,EAAQ,IAA6BuB,Y,sDC1C7D,qDAGO,MAMMa,EAAS,CAClB,OAAU,UACV,QAAW,WACX,KAAQ,QACR,IAAO,OACP,OAAU,WAGRC,EAAKjH,QACNkH,MAAM,KAAM,CACTC,KAAMnH,QAAMoH,SAASpH,QAAMqH,YAAY9H,OAAO+H,OAAON,IAAUA,EAAOO,SACtEC,SAAUxH,QAAMyH,UAAUzH,QAAMqH,YAAY9H,OAAO+H,OAAON,KAC1DU,UAAW1H,QAAMoH,SAASpH,QAAM2H,SAAS,GACzCC,SAAU5H,QAAM6H,MAAM7H,QAAM8H,UAE/BC,QAASC,IACN,MAAMC,EAAKD,EAELE,EAAYC,IACdF,EAAGT,SAAWS,EAAGd,KACjBc,EAAGd,KAAOgB,EACV1B,IAAQ2B,KAAKD,IAyBjB,MAAO,CACHD,WACAG,SAda,KACbH,EAASlB,EAAOsB,MAChBzD,OAAO0D,gBAAgBC,YAAY,CAC/BlH,KAAM,gBAENmH,cAAe,CACXC,UAAW,iBASnBC,WAzBgBC,IAChBX,EAAGL,SAASQ,KAAKQ,IAyBjBC,cAtBmBD,IACnBX,EAAGL,SAASkB,OAAOb,EAAGL,SAASjG,QAAQiH,GAAS,IAsBhDG,SAnBcH,GAA2BX,EAAGL,SAASjG,QAAQiH,GAAU,KA2BpE3B,O,gCCpEf,gFAEA,MAeaf,EAAc8C,aAEdC,EAA+B,eAAhB/C,EAEb,KACXgD,UAAWC,EAAID,UACfhD,cACAkD,IAAKJ,+JAAYK,eAtBJ,CACbC,YAAa,CACTF,IAAK,WAETG,QAAS,CACLH,IAAK,aAETI,WAAY,CACRJ,IAAK,YAETK,KAAM,CACFL,IAAK,aAWkClD,GAAakD,IACxDH,aAA8B,eAAhB/C,I,gCCzBlB,sGAAO,MAAMwD,EAAY,CACrBC,QAAS,0HACTC,SAAU,6FAGDC,EAAY,CACrB,+IACA,+IACA,+IACA,+IACA,+IAEA,mIACA,mIACA,mIAEA,uHACA,uHACA,uHACA,uHACA,uHAEA,iJACA,kJAGSC,EAAgB,CACzB,CACIC,GAAI,IACJ/F,KAAM,mIAENgG,WAAY,mIACZC,KAAM,wCAENC,YAAa,CAAC,qDACdC,MAAO,KAEX,CACIJ,GAAI,IACJ/F,KAAM,+IAENgG,WAAY,+IACZC,KAAM,uCAENC,YAAa,CACT,iGACA,yMAEJC,MAAO,KAEX,CACIJ,GAAI,IACJ/F,KAAM,iJAENgG,WAAY,iJACZC,KAAM,uCAENC,YAAa,CACT,yMAEJC,MAAO,KAEX,CACIJ,GAAI,IACJ/F,KAAM,uHAENgG,WAAY,uHACZC,KAAM,uCAENC,YAAa,CACT,yMAEJC,MAAO,KAEX,CACIJ,GAAI,IACJ/F,KAAM,uHAENgG,WAAY,uHACZC,KAAM,uCAENC,YAAa,CACT,yMAEJC,MAAO,KAEX,CACIJ,GAAI,IACJ/F,KAAM,uHAENgG,WAAY,uHACZC,KAAM,uCAENC,YAAa,CACT,yMAEJC,MAAO,KAEX,CACIJ,GAAI,IACJ/F,KAAM,uHAENgG,WAAY,uHACZC,KAAM,uCAENC,YAAa,CACT,yMAEJC,MAAO,O,kcC5Gf,YAEeC,mB,2DCKAC,MALFrK,QAAMkH,MAAM,OAAQ,CAC7ByC,QAAS3J,QAAMyH,UAAUzH,QAAM8H,QAC/B8B,SAAU5J,QAAMyH,UAAUzH,QAAM8H,U,QCQrBwC,MAVKtK,QAAMkH,MAAM,UAAW,CACvC6C,GAAI/J,QAAMuK,WACVvG,KAAMhE,QAAM8H,OACZ0C,UAAWxK,QAAM8H,OACjBqC,MAAOnK,QAAMyK,OACbC,WAAY1K,QAAM6H,MAAM7H,QAAM8H,QAC9B6C,MAAO3K,QAAMyH,UAAUzH,QAAMyK,QAC7BG,QAAS5K,QAAMyH,UAAUzH,QAAM2H,WCoBpBkD,MAzBE7K,QACZkH,MAAM,WAAY,CACf4D,MAAO9K,QAAMoH,SAASpH,QAAM8H,OAAQ,IACpCiD,MAAO/K,QAAM6H,MAAMyC,GACnBU,WAAYhL,QAAMyH,UAAUzH,QAAM8H,UAErCC,QAASC,IACN,MAAMiD,EAAWjD,EAYjB,MAAO,CACHkD,cAZkB,CAACC,EAAwBC,EAAgBT,KAC3DQ,EAAKP,QAAUQ,EACfD,EAAKR,MAAQA,GAWbU,WARgBzC,IACZqC,EAASF,MAAMnJ,KAAMuJ,GAASA,EAAKpB,KAAOnB,KAC1CqC,EAASD,WAAapC,OCftC,MAAM0C,EAAWtL,QAAMkH,MAAM,WAAY,CACrCqE,QAASvL,QAAMwL,UAAUlB,GACzBmB,MAAOzL,QAAMyK,SA2FFiB,MAtFF1L,QACRkH,MAAM,OAAQ,CACX6D,MAAO/K,QAAM6H,MAAMyD,GACnBK,QAAS3L,QAAMyH,UAAUzH,QAAM8H,UAElC8D,MAAO5D,IAAD,CACH,YACI,OAAOA,EAAK+C,MAAMc,OAAO,CAACC,EAAaX,IAAwBW,EAAMX,EAAKM,MAAO,IAGrF,iBACI,OAAOzD,EAAK+C,MAAMc,OAAO,CAACC,EAAaX,IAAwBW,EAAMX,EAAKI,QAAQpB,MAAQgB,EAAKM,MAAO,IAG1G,eACI,OAAOzD,EAAK+C,MAAMc,OAAO,CAACC,EAAoCX,KAC1DW,EAAIX,EAAKI,QAAQxB,IAAMoB,EAEhBW,GACR,QAGV/D,QAASC,IACN,MAAM+D,EAAO/D,EAmDb,MAAO,CACHgE,MArCU,KACVD,EAAKhB,MAAQkB,eAAK,KAqClBC,UAnDetD,IACf,MAAMuC,EAAOY,EAAKhB,MAAMnJ,KAAMuJ,GAASA,EAAKI,QAAQxB,KAAOnB,GAEvDuC,EACAA,EAAKM,QAELM,EAAKhB,MAAM3C,KAAK,CACZmD,QAAS3C,EACT6C,MAAO,KA4CfU,eA7BmB,EAAGvD,SAAQ6C,QAAOW,0BACrC,MAAMzB,EAAQoB,EAAKhB,MAAMsB,UAAWlB,GAAwBA,EAAKI,QAAQxB,KAAOnB,GAC1EuC,EAAOY,EAAKhB,MAAMJ,GAEnBQ,IAILA,EAAKM,MAAQa,KAAKC,IAAI,EAAGpB,EAAKM,MAAQA,IAEjCN,EAAKM,OAASW,GACfL,EAAKhB,MAAMjC,OAAO6B,EAAO,KAmB7B6B,eAfmB,KACnB3H,OAAO0D,gBAAgBC,YAAY,CAC/BlH,KAAM,gBAENmH,cAAe,CACXC,UAAW,uBCmBhB+D,MAV4B,CACvCC,WAxEkB,CAACzG,EAAkB0G,KACrC,MACM5B,EADQxL,OAAO+H,OAAOqF,EAAQC,OAChB9N,IAAKqM,IAAD,CACpBpB,GAAIoB,EAAKlB,KACTjG,KAAMmH,EAAKnH,KACXwG,UAAWW,EAAKnB,WAChBG,MAAO0C,OAAO1B,EAAKhB,OACnBF,KAAMkB,EAAKlB,KACXS,WAAYS,EAAKjB,eAGrB4C,wBAAc7G,EAAMgF,SAAU,CAC1BH,MAAO,6CACPC,UAEJ9E,EAAMgC,GAAGP,WAAY,GA0DrBqF,SAnDgB,CAAC9G,EAAkB0G,KACnC,MAAQxB,KAAM6B,EAAR,MAAkBvB,GAAUkB,EAC5BxB,EAAOlF,EAAMgF,SAASF,MAAMnJ,KAAK,EAAGoC,UAAWA,IAASgJ,GAE9D,IAAI/B,EAAWQ,EACf,GAAIN,EAAM,CACN,KAAOF,GACHhF,EAAM8F,KAAKG,UAAUf,EAAKpB,IAC1BkB,GAAY,EAEhBhF,EAAMgF,SAASI,WAAWF,EAAKpB,MA0CnCkD,YAjCe,CAAChH,GAAoBkF,OAAMM,WAC1CxF,EAAM8F,KAAKI,eAAe,CAAEvD,OAAQuC,EAAMM,QAAOW,qBAAqB,IAiCtEc,WA/BejH,GAAqBA,EAAM8F,KAAKC,QAgC/CmB,iBA9BclH,IACdA,EAAMgC,GAAGC,SAASlB,IAAOsB,OA8BzB8E,cAvBgB,CAACnH,EAAkB0G,KAC/BA,EAAQX,OACR/F,EAAM8F,KAAKC,QAGf/F,EAAMgC,GAAGC,SAASlB,IAAOO,UAmBzB8F,cAZY,CAACpH,EAAkB0G,KAC/B1G,EAAM8F,KAAKJ,QAAUgB,EAAQW,SAC7BrH,EAAMgC,GAAGC,SAASlB,IAAOuG,UC1E7B,MA6CMtH,EA7CQjG,QACTkH,MAAM,QAAS,CACZe,GAAIjI,QAAMoH,SAASa,IAAI,IACvBgD,SAAUjL,QAAMoH,SAAS6D,EAAU,IACnCc,KAAM/L,QAAMoH,SAAS2E,EAAM,IAC3ByB,KAAMxN,QAAMoH,SAASoG,EAAM,MAE9BzF,QAASC,IACN,MAAM/B,EAAQ+B,EAkCd,MAAO,CAAEyF,UAfUC,IACf,MAAM,QAAEf,GAAYe,EAAQC,eAE5B,GAAIhB,KAAWF,EAAO,EAGlBmB,EAFenB,EAAME,IAEd1G,EAAOyH,EAAQC,qBAGtB9I,OAAOgJ,WAAWzF,KAAK,CACnB,YAAasF,KAKLI,YAhCA,WAChBhB,wBAAc7G,EAAMuH,KAAM,CACtB7D,QAASD,IAAUC,UAEvB1D,EAAMgC,GAAGP,WAAY,EAEjB7C,OAAOkJ,eAAuD,oBAA/BlJ,OAAOkJ,cAAcC,OACpDnJ,OAAOkJ,cAAcC,QAGrB9H,QAyBI+H,OAAO,IA6BtBhF,MACDpE,OAAOkJ,cAAgBlJ,OAAOkJ,eAAiB,GAC/ClJ,OAAOkJ,cAAcvF,YAAe1C,GAASA,EAC7CjB,OAAOkJ,cAAcG,YAAepI,GAASA,GAGjDjB,OAAO0D,gBAAkB1D,OAAO0D,iBAAmB,GAKnD1D,OAAO0D,gBAAgB4F,QAAU,WAE7BtJ,OAAOgJ,WAAahJ,OAAOgJ,YAAc,IAG7ChJ,OAAO0D,gBAAgB6F,OAAS,SAA+BzB,GAC3D1G,EAAMwH,UAAUd,IAIpB9H,OAAO0D,gBAAgBC,YAAc,SAAiCkF,GAClE7I,OAAOkJ,cAAcvF,YAAY6F,KAAKC,UAAUZ,KAGpD7I,OAAO0D,gBAAgBgG,eAAiB,WACpC,MAAMC,EApDC,CACHzD,OAFe9E,EAqDSA,GAlDdgC,GAAGd,OAASH,IAAOO,QACnBtB,EAAMgF,SAASF,MAAMjM,IAAKyM,IAAD,CACrBd,OAAQc,EAAQZ,MAChBG,MAAOS,EAAQvH,KACf4D,SAAU2D,EAAQX,QAClBb,GAAIwB,EAAQxB,GACZ0E,cAAexI,EAAM8F,KAAK2C,SAASnD,EAAQxB,IAAM9D,EAAM8F,KAAK2C,SAASnD,EAAQxB,IAAI0B,MAAQ,EACzFkD,OAAQ,MAEZ,GACVC,eAAgB3I,EAAMgC,GAAGd,OAASH,IAAOO,QAAU,UAAY,OAC/DsH,SAAU,CACN5D,SAAU1L,OAAOuP,KAAK7I,EAAM8F,KAAK2C,UAAU5P,IAAK8J,IAAD,CAC3CmB,GAAInB,EACJmG,SAAU9I,EAAM8F,KAAK2C,SAAS9F,GAAQ6C,SAE1CuD,WAAY,CACR5D,MAAOnF,EAAM8F,KAAKiD,WAClBC,cAAe,KArB/B,IAAuBhJ,EAsDnBpB,OAAOkJ,cAAcG,YAAYG,KAAKC,UAAUE,KAGrCvI,O,2FC3GR,MAAMiJ,EAAkC,EAAGnE,WAC9C,yBAAKoE,UAAU,WACVpE,EAAMjM,IAAKqM,GACR,yBAAKgE,UAAU,eAAe9M,IAAK8I,GAC9BA,K,OCKFiE,MAN6B,EAAGC,WAAUF,YAAY,MAAO7K,KACxE,uCAAK6K,UAAY,gBAAeA,KAAiB7K,GAC5C+K,G,OC2BMC,MAzBiB,EAC5BD,WACAF,YAAY,GACZI,aAAY,EACZC,kBACAC,aACAC,gBACAC,QAAQ,MACLrL,MAEH,MAAMsL,EAAS,IACRD,EACHE,WAAa,GAAEL,GAAmBC,MAClCK,cAAgB,GAAEN,GAAmBE,OAGnCK,EAAe,UAASR,EAAY,mBAAqB,KAE/D,OACI,uCAAKI,MAAOC,EAAQT,UAAY,GAAEY,KAAeZ,KAAiB7K,GAC7D+K,I,OCjCb,MAAMW,EAASC,IAAO/G,WAAa,GAMpB,OAACgH,EAAmBC,EAAY,KAAMC,EAAe,OAChE,SAASC,KAAYC,GACjB,OAAKA,EAAS7Q,OAIP6Q,EAASxR,IAAKyR,GAAYP,EAASE,EAAYC,EAAYI,GAASC,KAAK,KAHrER,EAASE,EA4BxB,OAtBAG,EAASI,KAAO,CAACF,EAAiBG,EAAaC,IAC3CX,EAASE,EAAYC,EAAYI,EAAUH,EAAeM,GAAOC,EAASP,EAAeO,EAAS,IAEtGN,EAASK,IAAM,CAACA,EAAaC,IACzBX,EAASE,EAAYE,EAAeM,GAAOC,EAASP,EAAeO,EAAS,IAEhFN,EAASO,OAAS,CAACC,EAA0C,GAAIJ,KAC7D,MAAMK,EAAeL,EAAOP,EAAYC,EAAYM,EAAOP,EAE3D,MAAO,CACHF,EACAc,EACA,IACAvR,OAAOwR,QAAQF,GACV/R,IAAI,EAAE4R,EAAKM,KAAeC,QAAQD,IAAchB,EAASc,EAAeV,EAAeM,GACvFQ,OAAOD,SACPT,KAAK,MACZA,KAAK,KAGXH,EAASc,IAAM,IAAI7J,IAA6BA,EAAOkJ,KAAK,KAErDH,GCpCI,GAACe,EAA0BC,IAA2B,CAAC/M,EAAanC,IAC/E,kBAACiP,EAAD,iBAAe9M,EAAf,CAAsBnC,QAASA,EAASmP,IAAKC,EAAIF,GAAiBD,EAAUpN,S,cCQhF,MAcawN,EAASC,YAAeC,EAdI,EAAGJ,MAAKrJ,KAAI6C,QAAO6G,WAAUtC,cAClE,yBAAKF,UAAWmC,KACXrJ,EAAGT,SAAW,0BAAM2H,UAAWmC,EAAI,UAAc,GAClD,yBAAKnC,UAAWmC,EAAI,YAChB,yBAAKnC,UAAWmC,EAAI,UACpB,yBAAKnC,UAAWmC,EAAI,oBAChB,yBAAKnC,UAAWmC,EAAI,UAAWxG,GAC9B6G,EAAW,yBAAKxC,UAAWmC,EAAI,aAAcK,GAAkB,KAGxE,yBAAKxC,UAAWmC,EAAI,YAAajC,IAIe,W,mBChBxD,MAOauC,EAAgBF,EAAQD,YAPW,EAAGjE,OAAMvF,KAAIqJ,SACzD,yBAAKnC,UAAWmC,IAAOO,SAAU,EAAGC,QAAS,IAAM7J,EAAGC,SAASlB,IAAO+K,MAClE,yBAAK5C,UAAWmC,EAAI,UACpB,yBAAKnC,UAAWmC,EAAI,SAAU9D,EAAK7D,WAIqB,iB,OCRhE,MAOaqI,EAAaN,EAAQD,YAPW,EAAG1F,OAAM9D,KAAIqJ,SACtD,yBAAKnC,UAAWmC,IAAOO,SAAU,EAAGC,QAAS,IAAM7J,EAAGI,YAClD,yBAAK8G,UAAWmC,EAAI,SAAUvF,EAAKN,MAAQ,GAAK,0BAAM0D,UAAWmC,EAAI,UAAWvF,EAAKN,QACrF,yBAAK0D,UAAWmC,EAAI,UAAWvF,EAAKiD,WAApC,aAIqD,c,OCS9C0C,QAXc,EAAGrC,WAAUF,YAAY,GAAIxE,QAAOsH,QAAOX,MAAKY,WACzE,MAAMvC,EAAQuC,EAAO,CAAEC,MAAOD,EAAME,OAAQF,GAAS,GACrD,OACI,yBAAK/C,UAAWmC,EAAIH,IAAIG,IAAOnC,GAAYQ,MAAOA,GAC7ChF,GAAS,0BAAMwE,UAAWmC,EAAI,UAAW3G,GACxB,qBAAVsH,GAAyB,0BAAM9C,UAAWmC,EAAI,UAAWW,GAChE5C,IAKgB,Q,OCb7B,MAkBagD,EAAkBX,EAlBmB,EAAGJ,MAAK5G,aAAY4H,cAAatO,OAAMmG,QAAOQ,QAAOmH,aACnG,yBAAKD,SAAU,EAAG1C,UAAWmC,IAAOQ,QAASA,GACzC,kBAAC,EAAD,CAAMnH,MAAOA,EAAOwE,UAAWmC,EAAI,SAC/B,yBAAKnC,UAAWmC,EAAI,OAAQiB,IAAK7H,EAAW,GAAI8H,IAAI,MAExD,yBAAKrD,UAAWmC,EAAI,gBAChB,0BAAMnC,UAAWmC,EAAI,kBACrB,yBAAKnC,UAAWmC,EAAI,QAChB,0BAAMnC,UAAWmC,EAAI,QAAS,SAAUtN,IAE5C,yBAAKmL,UAAWmC,EAAI,aAChB,0BAAMnC,UAAWmC,EAAI,QAAS,UAAWnH,EAAzC,WACCmI,EAAc,0BAAMnD,UAAWmC,EAAI,QAAS,UAAWgB,GAAsB,MAM5C,mB,OCjBlD,MAgBaG,EAAcf,EAAQD,YAhBW,EAAGH,MAAKrG,WAAUc,UAC5D,yBAAKoD,UAAWmC,KACZ,yBAAKnC,UAAWmC,EAAI,cACfrG,EAASF,MAAMjM,IAAI,CAACqM,EAAwBR,IACzC,kBAAC,EAAD,iBACQQ,EADR,CAEImH,YAAavG,EAAK2C,SAASvD,EAAKpB,IAAMgC,EAAK2C,SAASvD,EAAKpB,IAAI0B,MAAQ,EACrEpJ,IAAK8I,EAAKpB,GACVY,MAAOA,EAAQ,EACfmH,QAAS,IAAM/F,EAAKG,UAAUf,EAAKpB,WAOO,eCwFjD2I,EAAUjB,YAnGmB,EAAGxJ,KAAI8D,WAC7C4G,IAAMC,UAAU,KACZ/N,OAAO0D,gBAAgB6F,OAAO,CAC1B9M,KAAM,iBAENqM,eAAgB,CACZhB,QAAS,aACTC,MAAO9C,OAIf+I,QAAQC,IAAI,OAEZjO,OAAO0D,gBAAgB6F,OAAO,CAC1B9M,KAAM,iBAENqM,eAAgB,CACZhB,QAAS,WACTxB,KAAM,+IACNM,MAAO,MAGhB,IAEHkH,IAAMC,UAAU,KACZ,MAAMG,EAAaC,IACf,OAAQA,EAAMC,MACV,IAAK,SACDpO,OAAO0D,gBAAgB6F,OAAO,CAC1B9M,KAAM,iBAENqM,eAAgB,CACZhB,QAAS,aACTC,MAAO9C,OAGf,MACJ,IAAK,SACDjF,OAAO0D,gBAAgB6F,OAAO,CAC1B9M,KAAM,iBAENqM,eAAgB,CACZhB,QAAS,cACTxB,KAAM,uCACNM,MAAO,KAGf,MACJ,IAAK,SACD5G,OAAO0D,gBAAgB6F,OAAO,CAC1B9M,KAAM,iBAENqM,eAAgB,CACZhB,QAAS,kBAU7B,OAFAnH,SAAS0N,iBAAiB,UAAWH,GAE9B,KACHvN,SAAS2N,oBAAoB,UAAWJ,KAE7C,IAEH,MAAMK,EAAiBrH,EAAKN,MAAQ,EAU9B4H,EACc,eAAhBnN,IACI,kBAAC,EAAD,CAAS6E,MAAO,CAAC,iGAAuB,0MAA2C,0DAEnF,GAGR,OACI,oCACI,kBAAC,EAAD,CAAQD,MAAM,6CAAU6G,SAAS,qHAC7B,kBAAC,EAAD,MACCyB,GAAkB,kBAAC,EAAD,OAEvB,kBAAC,EAAD,MACCC,K,kBCxGb,MAAMC,EAAoB,CAAC,IAAK,IAAK,IAAK,MAsD3BC,MAxCmBjP,IAC9B,MAAM,SAAE+K,EAAF,UAAYF,EAAY,GAAxB,gBAA4BK,EAA5B,WAA6CC,EAA7C,cAAyDC,EAAzD,MAAwEC,EAAQ,IAAOrL,EAEvFkP,EAAcF,EAAMxU,IAAKoT,IAC3B,MAAMuB,EAAWnP,EAAM4N,GAEvB,OAAOuB,EAAY,UAAkB,MAATvB,EAAe,GAAK,KAAOA,KAAQuB,IAAa,KAC7EjD,KAAK,KAEFkD,EAAgBJ,EAAMxU,IAAKoT,GACZ5N,EAAO,GAAE4N,WACP,UAASA,WAAgB,IAC7C1B,KAAK,KAEFmD,EAAcL,EAAMxU,IAAKoT,GACV5N,EAAO,GAAE4N,SAEP,UAAkB,MAATA,EAAe,GAAK,KAAOA,SAAc,IACtE1B,KAAK,KAEFoD,EAAgBN,EAAMxU,IAAKoT,IAC7B,MAAMuB,EAAWnP,EAAO,GAAE4N,WAE1B,OAAOuB,EAAY,iBAAyB,MAATvB,EAAe,GAAK,KAAOA,KAAQuB,IAAa,KACpFjD,KAAK,KAEFZ,EAAS,IACRD,EACHE,WAAa,GAAEL,GAAmBC,MAClCK,cAAgB,GAAEN,GAAmBE,OAGzC,OACI,yBAAKC,MAAOC,EAAQT,UAAY,UAASqE,KAAeE,KAAiBC,KAAeC,KACpF,yBAAKzE,UAAY,mBAAkBA,KAAcE,GACjD,yBAAKF,UAAU,qB,OClCZuC,QAN+B,EAAGrC,WAAUF,YAAY,GAAI7N,OAAMgQ,MAAKuC,iBAClF,MAAMC,EAAkBD,EAAavC,EAAIZ,IAAImD,GAAc,GAE3D,OAAO,0BAAM1E,UAAWmC,EAAIH,IAAIG,IAAOA,EAAIZ,IAAIpP,GAAO6N,EAAW2E,IAAmBzE,IAGrD,c,2BCZnC,MAmBa0E,EAAWrC,EAnBmB,EAAGJ,SAC1C,yBAAKnC,UAAU,mBACX,yBAAKA,UAAU,qBACX,yBAAKoD,IAAKpO,IAAQgL,UAAU,iBAAiBqD,IAAI,0FACjD,2BACI,kBAAC,EAAD,CAAYlR,KAAK,wBAAjB,sNAEJ,2BACI,kBAAC,EAAD,CAAYA,KAAK,UAAjB,+VAIJ,4BAAQA,KAAK,SAAS6N,UAAWmC,EAAIV,OAAO,GAAI,WAC5C,kBAAC,EAAD,CAAYtP,KAAK,aAAjB,0IAM2B,Y,OCd3C,MAyCa0S,EAAetC,EAzCmB,EAC3C/G,QACAsJ,cACAC,cACA3I,SAAWb,aAAYF,YAAWL,QAAOnG,QACzCyH,QACA6F,SAEA,wBAAInC,UAAWmC,KACX,wBAAInC,UAAWmC,EAAI,OAAQ,UAAW3G,GACtC,wBAAIwE,UAAWmC,EAAI,OAAQ,YACvB,kBAAC,EAAD,KACI,yBAAKiB,IAAK7H,EAAW,GAAI8H,IAAKhI,EAAW2E,UAAWmC,EAAI,WAGhE,wBAAInC,UAAWmC,EAAI,cAAe,SAC9B,yBAAKnC,UAAWmC,EAAI,QAChB,kBAAC,EAAD,CAAYhQ,KAAK,SAAS0C,IAE9B,6BACI,kBAAC,EAAD,CAAY1C,KAAK,wBAAwB6I,EAAzC,YAGR,wBAAIgF,UAAWmC,EAAI,WAAY,SAC3B,yBAAKnC,UAAWmC,EAAI,kBAChB,yBAAKnC,UAAWmC,EAAI,mBAChB,yBAAKO,SAAU,EAAGC,QAASmC,EAAa9E,UAAWmC,EAAIV,OAAO,GAAI,aAAlE,KAGA,yBAAKzB,UAAWmC,EAAIV,OAAO,GAAI,aAC3B,0BAAMzB,UAAWmC,EAAI,YAAa7F,IAEtC,yBAAKoG,SAAU,EAAGC,QAASoC,EAAa/E,UAAWmC,EAAIV,OAAO,GAAI,aAAlE,SAS2B,gB,OC3C/C,MA6CauD,EAAWzC,EAAQD,YA7CW,EAAG1F,OAAMuF,UAChDqB,IAAMC,UAAU,KACZ/N,OAAO0D,gBAAgB6F,OAAO,CAC1B9M,KAAM,iBAENqM,eAAgB,CACZhB,QAAS,aACTC,MAAO9C,OAIfD,IAAUnI,QAASyJ,IACftG,OAAO0D,gBAAgB6F,OAAO,CAC1B9M,KAAM,iBAENqM,eAAgB,CACZhB,QAAS,WACTxB,OACAM,MAAO,QAIpB,IAGC,yBAAK0D,UAAWmC,KACZ,yBAAKnC,UAAWmC,EAAI,iBAChB,2BAAOnC,UAAWmC,EAAI,UAClB,+BACKvF,EAAKhB,MAAMjM,IAAI,CAACqM,EAAMR,IACnB,kBAAC,EAAD,iBACQQ,EADR,CAEI8I,YAAa,IAAMlI,EAAKI,eAAe,CAAEvD,OAAQuC,EAAKI,QAAQxB,GAAI0B,MAAO,IACzEyI,YAAa,IAAMnI,EAAKG,UAAUf,EAAKI,QAAQxB,IAC/CY,MAAOA,EAAQ,EACftI,IAAK8I,EAAKI,QAAQxB,aAUS,Y,OCtC3D,MAkDa2B,EAAO+F,YAlDmB,EAAGjE,WACtCmF,IAAMC,UAAU,KACZ,MAAMG,EAAaC,IACf,OAAQA,EAAMC,MACV,IAAK,SACDpO,OAAO0D,gBAAgB6F,OAAO,CAC1B9M,KAAM,iBAENqM,eAAgB,CACZhB,QAAS,cACTxB,KAAM,uCACNM,MAAO,KAGf,MACJ,IAAK,SACDqB,wBAAcU,EAAM9D,OAShC,OAFAlE,SAAS0N,iBAAiB,UAAWH,GAE9B,KACHvN,SAAS2N,oBAAoB,UAAWJ,KAE7C,CAACvF,IAGA,oCACI,kBAAC,EAAD,CAAQ1C,MAAM,8CACV,kBAAC,EAAD,OAEJ,kBAAC,EAAD,CAAWqE,UAAU,uBACjB,kBAAC,EAAD,CAAKA,UAAU,iBACX,kBAAC,EAAD,CAAKiF,EAAG,EAAG5Q,EAAG,EAAGpB,EAAG,EAAGiS,GAAI,GACvB,kBAAC,EAAD,OAEJ,kBAAC,EAAD,CAAKD,EAAG,EAAG5Q,EAAG,EAAGpB,EAAG,EAAGiS,GAAI,EAAGlF,UAAU,kBACpC,kBAAC,EAAD,SAIVlG,IAAuG,GAAxF,kBAAC,EAAD,CAAS8B,MAAO,CAAC,0MAA2C,iG,OCxC1E2G,QAd8C,EAAGJ,MAAKgD,UACjE,yBAAKnF,UAAWmC,KACZ,yBAAKnC,UAAWmC,EAAI,UACpB,yBAAKnC,UAAWmC,EAAI,UAChB,6BACI,kBAAC,EAAD,CAAYhQ,KAAK,aAAjB,kEAEJ,6BACI,kBAAC,EAAD,CAAYA,KAAK,wBAAwBgT,MAMpB,gB,OCZrC,MAqBaC,EAAS9C,YArBiB,EAAG1F,WACtC,MAAMyI,EACF,oCACI,kBAAC,EAAD,CAAcF,KAAK,uCAI3B,OACI,oCACI,kBAAC,EAAD,CAAQxJ,MAAM,6CAAU2J,aAAcD,IACtC,kBAAC,EAAD,CAAWrF,UAAU,cACjB,kBAAC,EAAD,KACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAY7N,KAAK,UAAjB,8LAAgEyK,EAAKJ,QAArE,W,qBCWTrF,UAzBO,KAClB,MAAMoO,EAAU/B,IAAMgC,OAAuB,MAEvCC,EAAW,wCAEjB,OACI,yBAAKzF,UAAU,eAAe0F,IAAKH,GAC/B,kBAAC,IAAMI,SAAP,CAAgBF,SAAUA,GACtB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOG,KAAM/N,IAAOO,SAChB,kBAACmL,EAAD,CAASgC,QAASA,KAEtB,kBAAC,IAAD,CAAOK,KAAM/N,IAAOsB,MAChB,kBAAC,EAAD,CAAMoM,QAASA,KAEnB,kBAAC,IAAD,CAAOK,KAAM/N,IAAOuG,QAChB,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAUpF,GAAInB,IAAOO,e,+BC7BzC,gFAIA,IAAItB,EAA0B,KAEvB,MAAMD,EAAYgP,IACrB/O,EAAQ+O,GAKNC,EAAWC,GACbC,IAGA,MAAMC,EAAaC,IACf,GAAc,OAAVpP,EAAgB,MAAM,IAAIqP,MAAM,yDACpC,OAAOC,YAAY,IACRJ,EAAc,IAAKE,KAAaH,EAASjP,EAAOoP,OAK/D,OADAD,EAAUI,YAAcL,EAAcnR,KAC/BoR,GAIJ,MAEM3D,EAAkB2D,GAC3BH,EAASQ,GAAoCA,EAA7CR,CAAwDG,I","file":"static/js/main.ea6fbcd0.chunk.js","sourcesContent":["/* eslint-disable */\n/**\n * Detect.js: User-Agent Parser\n * https://github.com/darcyclarke/Detect.js\n * Dual licensed under the MIT and GPL licenses.\n *\n * @version 2.2.2\n * @author Darcy Clarke\n * @url http://darcyclarke.me\n * @createdat Mon Oct 26 2015 08:21:54 GMT-0200 (Horário brasileiro de verão)\n *\n * Based on UA-Parser (https://github.com/tobie/ua-parser) by Tobie Langel\n *\n * Example Usage:\n * var agentInfo = detect.parse(navigator.userAgent);\n * console.log(agentInfo.browser.family); // Chrome\n *\n */\n(function (root, undefined) {\n    // Shim Array.prototype.map if necessary\n    // Production steps of ECMA-262, Edition 5, 15.4.4.19\n    // Reference: http://es5.github.com/#x15.4.4.19\n    if (!Array.prototype.map) {\n        Array.prototype.map = function (callback, thisArg) {\n            let T, A, k;\n            if (this == null) {\n                throw new TypeError(' this is null or not defined');\n            }\n            // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n            const O = Object(this);\n            // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n            // 3. Let len be ToUint32(lenValue).\n            const len = O.length >>> 0;\n            // 4. If IsCallable(callback) is false, throw a TypeError exception.\n            // See: http://es5.github.com/#x9.11\n            if (typeof callback !== 'function') {\n                throw new TypeError(callback + ' is not a function');\n            }\n            // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n            if (thisArg) {\n                T = thisArg;\n            }\n            // 6. Let A be a new array created as if by the expression new Array(len) where Array is\n            // the standard built-in constructor with that name and len is the value of len.\n            A = new Array(len);\n            // 7. Let k be 0\n            k = 0;\n            // 8. Repeat, while k < len\n            while (k < len) {\n                var kValue, mappedValue;\n                // a. Let Pk be ToString(k).\n                //   This is implicit for LHS operands of the in operator\n                // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n                //   This step can be combined with c\n                // c. If kPresent is true, then\n                if (k in O) {\n                    // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n                    kValue = O[k];\n                    // ii. Let mappedValue be the result of calling the Call internal method of callback\n                    // with T as the this value and argument list containing kValue, k, and O.\n                    mappedValue = callback.call(T, kValue, k, O);\n                    // iii. Call the DefineOwnProperty internal method of A with arguments\n                    // Pk, Property Descriptor {Value: mappedValue, : true, Enumerable: true, Configurable: true},\n                    // and false.\n                    // In browsers that support Object.defineProperty, use the following:\n                    // Object.defineProperty(A, Pk, { value: mappedValue, writable: true, enumerable: true, configurable: true });\n                    // For best browser support, use the following:\n                    A[k] = mappedValue;\n                }\n                // d. Increase k by 1.\n                k++;\n            }\n            // 9. return A\n            return A;\n        };\n    }\n    // Detect\n    const detect = (root.detect = (function () {\n        // Context\n        const _this = function () {};\n        // Regexes\n        const regexes = {\n            browser_parsers: [\n                {\n                    regex: '^(Opera)/(\\\\d+)\\\\.(\\\\d+) \\\\(Nintendo Wii',\n                    family_replacement: 'Wii',\n                    manufacturer: 'Nintendo',\n                },\n                {\n                    regex: '(SeaMonkey|Camino)/(\\\\d+)\\\\.(\\\\d+)\\\\.?([ab]?\\\\d+[a-z]*)',\n                    family_replacement: 'Camino',\n                    other: true,\n                },\n                {\n                    regex: '(Pale[Mm]oon)/(\\\\d+)\\\\.(\\\\d+)\\\\.?(\\\\d+)?',\n                    family_replacement: 'Pale Moon (Firefox Variant)',\n                    other: true,\n                },\n                {\n                    regex: '(Fennec)/(\\\\d+)\\\\.(\\\\d+)\\\\.?([ab]?\\\\d+[a-z]*)',\n                    family_replacement: 'Firefox Mobile',\n                },\n                {\n                    regex: '(Fennec)/(\\\\d+)\\\\.(\\\\d+)(pre)',\n                    family_replacment: 'Firefox Mobile',\n                },\n                {\n                    regex: '(Fennec)/(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Firefox Mobile',\n                },\n                {\n                    regex: 'Mobile.*(Firefox)/(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Firefox Mobile',\n                },\n                {\n                    regex: '(Namoroka|Shiretoko|Minefield)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+(?:pre)?)',\n                    family_replacement: 'Firefox ($1)',\n                },\n                {\n                    regex: '(Firefox)/(\\\\d+)\\\\.(\\\\d+)(a\\\\d+[a-z]*)',\n                    family_replacement: 'Firefox Alpha',\n                },\n                {\n                    regex: '(Firefox)/(\\\\d+)\\\\.(\\\\d+)(b\\\\d+[a-z]*)',\n                    family_replacement: 'Firefox Beta',\n                },\n                {\n                    regex: '(Firefox)-(?:\\\\d+\\\\.\\\\d+)?/(\\\\d+)\\\\.(\\\\d+)(a\\\\d+[a-z]*)',\n                    family_replacement: 'Firefox Alpha',\n                },\n                {\n                    regex: '(Firefox)-(?:\\\\d+\\\\.\\\\d+)?/(\\\\d+)\\\\.(\\\\d+)(b\\\\d+[a-z]*)',\n                    family_replacement: 'Firefox Beta',\n                },\n                {\n                    regex: '(Namoroka|Shiretoko|Minefield)/(\\\\d+)\\\\.(\\\\d+)([ab]\\\\d+[a-z]*)?',\n                    family_replacement: 'Firefox ($1)',\n                },\n                {\n                    regex: '(Firefox).*Tablet browser (\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'MicroB',\n                    tablet: true,\n                },\n                {\n                    regex: '(MozillaDeveloperPreview)/(\\\\d+)\\\\.(\\\\d+)([ab]\\\\d+[a-z]*)?',\n                },\n                {\n                    regex: '(Flock)/(\\\\d+)\\\\.(\\\\d+)(b\\\\d+?)',\n                    family_replacement: 'Flock',\n                    other: true,\n                },\n                {\n                    regex: '(RockMelt)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Rockmelt',\n                    other: true,\n                },\n                {\n                    regex: '(Navigator)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Netscape',\n                },\n                {\n                    regex: '(Navigator)/(\\\\d+)\\\\.(\\\\d+)([ab]\\\\d+)',\n                    family_replacement: 'Netscape',\n                },\n                {\n                    regex: '(Netscape6)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Netscape',\n                },\n                {\n                    regex: '(MyIBrow)/(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'My Internet Browser',\n                    other: true,\n                },\n                {\n                    regex: '(Opera Tablet).*Version/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?',\n                    family_replacement: 'Opera Tablet',\n                    tablet: true,\n                },\n                {\n                    regex: '(Opera)/.+Opera Mobi.+Version/(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Opera Mobile',\n                },\n                {\n                    regex: 'Opera Mobi',\n                    family_replacement: 'Opera Mobile',\n                },\n                {\n                    regex: '(Opera Mini)/(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Opera Mini',\n                },\n                {\n                    regex: '(Opera Mini)/att/(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Opera Mini',\n                },\n                {\n                    regex: '(Opera)/9.80.*Version/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?',\n                    family_replacement: 'Opera',\n                },\n                {\n                    regex: '(OPR)/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?',\n                    family_replacement: 'Opera',\n                },\n                {\n                    regex: '(webOSBrowser)/(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'webOS',\n                },\n                {\n                    regex: '(webOS)/(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'webOS',\n                },\n                {\n                    regex: '(wOSBrowser).+TouchPad/(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'webOS TouchPad',\n                },\n                {\n                    regex: '(luakit)',\n                    family_replacement: 'LuaKit',\n                    other: true,\n                },\n                {\n                    regex: '(Lightning)/(\\\\d+)\\\\.(\\\\d+)([ab]?\\\\d+[a-z]*)',\n                    family_replacement: 'Lightning',\n                    other: true,\n                },\n                {\n                    regex: '(Firefox)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+(?:pre)?) \\\\(Swiftfox\\\\)',\n                    family_replacement: 'Swiftfox',\n                    other: true,\n                },\n                {\n                    regex: '(Firefox)/(\\\\d+)\\\\.(\\\\d+)([ab]\\\\d+[a-z]*)? \\\\(Swiftfox\\\\)',\n                    family_replacement: 'Swiftfox',\n                    other: true,\n                },\n                {\n                    regex: 'rekonq',\n                    family_replacement: 'Rekonq',\n                    other: true,\n                },\n                {\n                    regex: '(conkeror|Conkeror)/(\\\\d+)\\\\.(\\\\d+)\\\\.?(\\\\d+)?',\n                    family_replacement: 'Conkeror',\n                    other: true,\n                },\n                {\n                    regex: '(konqueror)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Konqueror',\n                    other: true,\n                },\n                {\n                    regex: '(WeTab)-Browser',\n                    family_replacement: 'WeTab',\n                    other: true,\n                },\n                {\n                    regex: '(Comodo_Dragon)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Comodo Dragon',\n                    other: true,\n                },\n                {\n                    regex: '(YottaaMonitor)',\n                    family_replacement: 'Yottaa Monitor',\n                    other: true,\n                },\n                {\n                    regex: '(Kindle)/(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Kindle',\n                },\n                {\n                    regex: '(Symphony) (\\\\d+).(\\\\d+)',\n                    family_replacement: 'Symphony',\n                    other: true,\n                },\n                {\n                    regex: 'Minimo',\n                    family_replacement: 'Minimo',\n                    other: true,\n                },\n                {\n                    regex: '(Edge)/(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Edge',\n                },\n                {\n                    regex: '(CrMo)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Chrome Mobile',\n                },\n                {\n                    regex: '(CriOS)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Chrome Mobile iOS',\n                },\n                {\n                    regex: '(Chrome)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+) Mobile',\n                    family_replacement: 'Chrome Mobile',\n                },\n                {\n                    regex: '(chromeframe)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Chrome Frame',\n                },\n                {\n                    regex: '(UC Browser)(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'UC Browser',\n                    other: true,\n                },\n                {\n                    regex: '(SLP Browser)/(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Tizen Browser',\n                    other: true,\n                },\n                {\n                    regex: '(Epiphany)/(\\\\d+)\\\\.(\\\\d+).(\\\\d+)',\n                    family_replacement: 'Epiphany',\n                    other: true,\n                },\n                {\n                    regex: '(SE 2\\\\.X) MetaSr (\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Sogou Explorer',\n                    other: true,\n                },\n                {\n                    regex: '(Pingdom.com_bot_version_)(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'PingdomBot',\n                    other: true,\n                },\n                {\n                    regex: '(facebookexternalhit)/(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'FacebookBot',\n                },\n                {\n                    regex: '(Twitterbot)/(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'TwitterBot',\n                },\n                {\n                    regex:\n                        '(AdobeAIR|Chromium|FireWeb|Jasmine|ANTGalio|Midori|Fresco|Lobo|PaleMoon|Maxthon|Lynx|OmniWeb|Dillo|Camino|Demeter|Fluid|Fennec|Shiira|Sunrise|Chrome|Flock|Netscape|Lunascape|WebPilot|NetFront|Netfront|Konqueror|SeaMonkey|Kazehakase|Vienna|Iceape|Iceweasel|IceWeasel|Iron|K-Meleon|Sleipnir|Galeon|GranParadiso|Opera Mini|iCab|NetNewsWire|ThunderBrowse|Iron|Iris|UP\\\\.Browser|Bunjaloo|Google Earth|Raven for Mac)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                },\n                {\n                    regex:\n                        '(Bolt|Jasmine|IceCat|Skyfire|Midori|Maxthon|Lynx|Arora|IBrowse|Dillo|Camino|Shiira|Fennec|Phoenix|Chrome|Flock|Netscape|Lunascape|Epiphany|WebPilot|Opera Mini|Opera|NetFront|Netfront|Konqueror|Googlebot|SeaMonkey|Kazehakase|Vienna|Iceape|Iceweasel|IceWeasel|Iron|K-Meleon|Sleipnir|Galeon|GranParadiso|iCab|NetNewsWire|Iron|Space Bison|Stainless|Orca|Dolfin|BOLT|Minimo|Tizen Browser|Polaris)/(\\\\d+)\\\\.(\\\\d+)',\n                },\n                {\n                    regex:\n                        '(iRider|Crazy Browser|SkipStone|iCab|Lunascape|Sleipnir|Maemo Browser) (\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                },\n                {\n                    regex: '(iCab|Lunascape|Opera|Android|Jasmine|Polaris|BREW) (\\\\d+)\\\\.(\\\\d+)\\\\.?(\\\\d+)?',\n                },\n                {\n                    regex: '(Android) Donut',\n                    v2_replacement: '2',\n                    v1_replacement: '1',\n                },\n                {\n                    regex: '(Android) Eclair',\n                    v2_replacement: '1',\n                    v1_replacement: '2',\n                },\n                {\n                    regex: '(Android) Froyo',\n                    v2_replacement: '2',\n                    v1_replacement: '2',\n                },\n                {\n                    regex: '(Android) Gingerbread',\n                    v2_replacement: '3',\n                    v1_replacement: '2',\n                },\n                {\n                    regex: '(Android) Honeycomb',\n                    v1_replacement: '3',\n                },\n                {\n                    regex: '(IEMobile)[ /](\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'IE Mobile',\n                },\n                {\n                    regex: '(MSIE) (\\\\d+)\\\\.(\\\\d+).*XBLWP7',\n                    family_replacement: 'IE Large Screen',\n                },\n                {\n                    regex: '(Firefox)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                },\n                {\n                    regex: '(Firefox)/(\\\\d+)\\\\.(\\\\d+)(pre|[ab]\\\\d+[a-z]*)?',\n                },\n                {\n                    regex: '(Obigo)InternetBrowser',\n                    other: true,\n                },\n                {\n                    regex: '(Obigo)\\\\-Browser',\n                    other: true,\n                },\n                {\n                    regex: '(Obigo|OBIGO)[^\\\\d]*(\\\\d+)(?:.(\\\\d+))?',\n                    other: true,\n                },\n                {\n                    regex: '(MAXTHON|Maxthon) (\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Maxthon',\n                    other: true,\n                },\n                {\n                    regex: '(Maxthon|MyIE2|Uzbl|Shiira)',\n                    v1_replacement: '0',\n                    other: true,\n                },\n                {\n                    regex: '(PLAYSTATION) (\\\\d+)',\n                    family_replacement: 'PlayStation',\n                    manufacturer: 'Sony',\n                },\n                {\n                    regex: '(PlayStation Portable)[^\\\\d]+(\\\\d+).(\\\\d+)',\n                    manufacturer: 'Sony',\n                },\n                {\n                    regex: '(BrowseX) \\\\((\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                    other: true,\n                },\n                {\n                    regex: '(POLARIS)/(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Polaris',\n                    other: true,\n                },\n                {\n                    regex: '(Embider)/(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Polaris',\n                    other: true,\n                },\n                {\n                    regex: '(BonEcho)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Bon Echo',\n                    other: true,\n                },\n                {\n                    regex: '(iPod).+Version/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Mobile Safari',\n                    manufacturer: 'Apple',\n                },\n                {\n                    regex: '(iPod).*Version/(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Mobile Safari',\n                    manufacturer: 'Apple',\n                },\n                {\n                    regex: '(iPod)',\n                    family_replacement: 'Mobile Safari',\n                    manufacturer: 'Apple',\n                },\n                {\n                    regex: '(iPhone).*Version/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Mobile Safari',\n                    manufacturer: 'Apple',\n                },\n                {\n                    regex: '(iPhone).*Version/(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Mobile Safari',\n                    manufacturer: 'Apple',\n                },\n                {\n                    regex: '(iPhone)',\n                    family_replacement: 'Mobile Safari',\n                    manufacturer: 'Apple',\n                },\n                {\n                    regex: '(iPad).*Version/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Mobile Safari',\n                    tablet: true,\n                    manufacturer: 'Apple',\n                },\n                {\n                    regex: '(iPad).*Version/(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Mobile Safari',\n                    tablet: true,\n                    manufacturer: 'Apple',\n                },\n                {\n                    regex: '(iPad)',\n                    family_replacement: 'Mobile Safari',\n                    tablet: true,\n                    manufacturer: 'Apple',\n                },\n                {\n                    regex: '(AvantGo) (\\\\d+).(\\\\d+)',\n                    other: true,\n                },\n                {\n                    regex: '(Avant)',\n                    v1_replacement: '1',\n                    other: true,\n                },\n                {\n                    regex: '^(Nokia)',\n                    family_replacement: 'Nokia Services (WAP) Browser',\n                    manufacturer: 'Nokia',\n                },\n                {\n                    regex: '(NokiaBrowser)/(\\\\d+)\\\\.(\\\\d+).(\\\\d+)\\\\.(\\\\d+)',\n                    manufacturer: 'Nokia',\n                },\n                {\n                    regex: '(NokiaBrowser)/(\\\\d+)\\\\.(\\\\d+).(\\\\d+)',\n                    manufacturer: 'Nokia',\n                },\n                {\n                    regex: '(NokiaBrowser)/(\\\\d+)\\\\.(\\\\d+)',\n                    manufacturer: 'Nokia',\n                },\n                {\n                    regex: '(BrowserNG)/(\\\\d+)\\\\.(\\\\d+).(\\\\d+)',\n                    family_replacement: 'NokiaBrowser',\n                    manufacturer: 'Nokia',\n                },\n                {\n                    regex: '(Series60)/5\\\\.0',\n                    v2_replacement: '0',\n                    v1_replacement: '7',\n                    family_replacement: 'NokiaBrowser',\n                    manufacturer: 'Nokia',\n                },\n                {\n                    regex: '(Series60)/(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Nokia OSS Browser',\n                    manufacturer: 'Nokia',\n                },\n                {\n                    regex: '(S40OviBrowser)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Nokia Series 40 Ovi Browser',\n                    manufacturer: 'Nokia',\n                },\n                {\n                    regex: '(Nokia)[EN]?(\\\\d+)',\n                    manufacturer: 'Nokia',\n                },\n                {\n                    regex: '(PlayBook).+RIM Tablet OS (\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Blackberry WebKit',\n                    tablet: true,\n                    manufacturer: 'Nokia',\n                },\n                {\n                    regex: '(Black[bB]erry).+Version/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Blackberry WebKit',\n                    manufacturer: 'RIM',\n                },\n                {\n                    regex: '(Black[bB]erry)\\\\s?(\\\\d+)',\n                    family_replacement: 'Blackberry',\n                    manufacturer: 'RIM',\n                },\n                {\n                    regex: '(OmniWeb)/v(\\\\d+)\\\\.(\\\\d+)',\n                    other: true,\n                },\n                {\n                    regex: '(Blazer)/(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Palm Blazer',\n                    manufacturer: 'Palm',\n                },\n                {\n                    regex: '(Pre)/(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'Palm Pre',\n                    manufacturer: 'Palm',\n                },\n                {\n                    regex: '(Links) \\\\((\\\\d+)\\\\.(\\\\d+)',\n                    other: true,\n                },\n                {\n                    regex: '(QtWeb) Internet Browser/(\\\\d+)\\\\.(\\\\d+)',\n                    other: true,\n                },\n                {\n                    regex: '(Silk)/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.([0-9\\\\-]+))?',\n                    other: true,\n                    tablet: true,\n                },\n                {\n                    regex: '(AppleWebKit)/(\\\\d+)\\\\.?(\\\\d+)?\\\\+ .* Version/\\\\d+\\\\.\\\\d+.\\\\d+ Safari/',\n                    family_replacement: 'WebKit Nightly',\n                },\n                {\n                    regex: '(Version)/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?.*Safari/',\n                    family_replacement: 'Safari',\n                },\n                {\n                    regex: '(Safari)/\\\\d+',\n                },\n                {\n                    regex: '(OLPC)/Update(\\\\d+)\\\\.(\\\\d+)',\n                    other: true,\n                },\n                {\n                    regex: '(OLPC)/Update()\\\\.(\\\\d+)',\n                    v1_replacement: '0',\n                    other: true,\n                },\n                {\n                    regex: '(SEMC\\\\-Browser)/(\\\\d+)\\\\.(\\\\d+)',\n                    other: true,\n                },\n                {\n                    regex: '(Teleca)',\n                    family_replacement: 'Teleca Browser',\n                    other: true,\n                },\n                {\n                    regex: 'Trident(.*)rv.(\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'IE',\n                },\n                {\n                    regex: '(MSIE) (\\\\d+)\\\\.(\\\\d+)',\n                    family_replacement: 'IE',\n                },\n            ],\n            os_parsers: [\n                {\n                    regex: '(Android) (\\\\d+)\\\\.(\\\\d+)(?:[.\\\\-]([a-z0-9]+))?',\n                },\n                {\n                    regex: '(Android)\\\\-(\\\\d+)\\\\.(\\\\d+)(?:[.\\\\-]([a-z0-9]+))?',\n                },\n                {\n                    regex: '(Android) Donut',\n                    os_v2_replacement: '2',\n                    os_v1_replacement: '1',\n                },\n                {\n                    regex: '(Android) Eclair',\n                    os_v2_replacement: '1',\n                    os_v1_replacement: '2',\n                },\n                {\n                    regex: '(Android) Froyo',\n                    os_v2_replacement: '2',\n                    os_v1_replacement: '2',\n                },\n                {\n                    regex: '(Android) Gingerbread',\n                    os_v2_replacement: '3',\n                    os_v1_replacement: '2',\n                },\n                {\n                    regex: '(Android) Honeycomb',\n                    os_v1_replacement: '3',\n                },\n                {\n                    regex: '(Silk-Accelerated=[a-z]{4,5})',\n                    os_replacement: 'Android',\n                },\n                {\n                    regex: '(Windows Phone 6\\\\.5)',\n                },\n                {\n                    regex: '(Windows (?:NT 5\\\\.2|NT 5\\\\.1))',\n                    os_replacement: 'Windows XP',\n                },\n                {\n                    regex: '(XBLWP7)',\n                    os_replacement: 'Windows Phone OS',\n                },\n                {\n                    regex: '(Windows NT 6\\\\.1)',\n                    os_replacement: 'Windows 7',\n                },\n                {\n                    regex: '(Windows NT 6\\\\.0)',\n                    os_replacement: 'Windows Vista',\n                },\n                {\n                    regex:\n                        '(Windows 98|Windows XP|Windows ME|Windows 95|Windows CE|Windows 7|Windows NT 4\\\\.0|Windows Vista|Windows 2000)',\n                },\n                {\n                    regex: '(Windows NT 6\\\\.4|Windows NT 10\\\\.0)',\n                    os_replacement: 'Windows 10',\n                },\n                {\n                    regex: '(Windows NT 6\\\\.2)',\n                    os_replacement: 'Windows 8',\n                },\n                {\n                    regex: '(Windows Phone 8)',\n                    os_replacement: 'Windows Phone 8',\n                },\n                {\n                    regex: '(Windows NT 5\\\\.0)',\n                    os_replacement: 'Windows 2000',\n                },\n                {\n                    regex: '(Windows Phone OS) (\\\\d+)\\\\.(\\\\d+)',\n                },\n                {\n                    regex: '(Windows ?Mobile)',\n                    os_replacement: 'Windows Mobile',\n                },\n                {\n                    regex: '(WinNT4.0)',\n                    os_replacement: 'Windows NT 4.0',\n                },\n                {\n                    regex: '(Win98)',\n                    os_replacement: 'Windows 98',\n                },\n                {\n                    regex: '(Tizen)/(\\\\d+)\\\\.(\\\\d+)',\n                    other: true,\n                },\n                {\n                    regex: '(Mac OS X) (\\\\d+)[_.](\\\\d+)(?:[_.](\\\\d+))?',\n                    manufacturer: 'Apple',\n                },\n                {\n                    regex: '(?:PPC|Intel) (Mac OS X)',\n                    manufacturer: 'Apple',\n                },\n                {\n                    regex: '(CPU OS|iPhone OS) (\\\\d+)_(\\\\d+)(?:_(\\\\d+))?',\n                    os_replacement: 'iOS',\n                    manufacturer: 'Apple',\n                },\n                {\n                    regex: '(iPhone|iPad|iPod); Opera',\n                    os_replacement: 'iOS',\n                    manufacturer: 'Apple',\n                },\n                {\n                    regex: '(iPad); Opera',\n                    tablet: true,\n                    manufacturer: 'Apple',\n                },\n                {\n                    regex: '(iPhone|iPad|iPod).*Mac OS X.*Version/(\\\\d+)\\\\.(\\\\d+)',\n                    os_replacement: 'iOS',\n                    manufacturer: 'Apple',\n                },\n                {\n                    regex: '(CrOS) [a-z0-9_]+ (\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?',\n                    os_replacement: 'Chrome OS',\n                },\n                {\n                    regex: '(Debian)-(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?',\n                    other: true,\n                },\n                {\n                    regex: '(Linux Mint)(?:/(\\\\d+))?',\n                    other: true,\n                },\n                {\n                    regex: '(Mandriva)(?: Linux)?/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?',\n                    other: true,\n                },\n                {\n                    regex: '(Symbian[Oo][Ss])/(\\\\d+)\\\\.(\\\\d+)',\n                    os_replacement: 'Symbian OS',\n                },\n                {\n                    regex: '(Symbian/3).+NokiaBrowser/7\\\\.3',\n                    os_replacement: 'Symbian^3 Anna',\n                },\n                {\n                    regex: '(Symbian/3).+NokiaBrowser/7\\\\.4',\n                    os_replacement: 'Symbian^3 Belle',\n                },\n                {\n                    regex: '(Symbian/3)',\n                    os_replacement: 'Symbian^3',\n                },\n                {\n                    regex: '(Series 60|SymbOS|S60)',\n                    os_replacement: 'Symbian OS',\n                },\n                {\n                    regex: '(MeeGo)',\n                    other: true,\n                },\n                {\n                    regex: 'Symbian [Oo][Ss]',\n                    os_replacement: 'Symbian OS',\n                },\n                {\n                    regex: '(Black[Bb]erry)[0-9a-z]+/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?',\n                    os_replacement: 'BlackBerry OS',\n                    manufacturer: 'RIM',\n                },\n                {\n                    regex: '(Black[Bb]erry).+Version/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?',\n                    os_replacement: 'BlackBerry OS',\n                    manufacturer: 'RIM',\n                },\n                {\n                    regex: '(RIM Tablet OS) (\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                    os_replacement: 'BlackBerry Tablet OS',\n                    tablet: true,\n                    manufacturer: 'RIM',\n                },\n                {\n                    regex: '(Play[Bb]ook)',\n                    os_replacement: 'BlackBerry Tablet OS',\n                    tablet: true,\n                    manufacturer: 'RIM',\n                },\n                {\n                    regex: '(Black[Bb]erry)',\n                    os_replacement: 'Blackberry OS',\n                    manufacturer: 'RIM',\n                },\n                {\n                    regex: '(webOS|hpwOS)/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?',\n                    os_replacement: 'webOS',\n                },\n                {\n                    regex: '(SUSE|Fedora|Red Hat|PCLinuxOS)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                    other: true,\n                },\n                {\n                    regex: '(SUSE|Fedora|Red Hat|Puppy|PCLinuxOS|CentOS)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                    other: true,\n                },\n                {\n                    regex: '(Ubuntu|Kindle|Bada|Lubuntu|BackTrack|Red Hat|Slackware)/(\\\\d+)\\\\.(\\\\d+)',\n                },\n                {\n                    regex: '(Windows|OpenBSD|FreeBSD|NetBSD|Ubuntu|Kubuntu|Android|Arch Linux|CentOS|WeTab|Slackware)',\n                },\n                {\n                    regex: '(Linux|BSD)',\n                    other: true,\n                },\n            ],\n            mobile_os_families: ['Windows Phone 6.5', 'Windows CE', 'Symbian OS'],\n            device_parsers: [\n                {\n                    regex: 'HTC ([A-Z][a-z0-9]+) Build',\n                    device_replacement: 'HTC $1',\n                    manufacturer: 'HTC',\n                },\n                {\n                    regex: 'HTC ([A-Z][a-z0-9 ]+) \\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+',\n                    device_replacement: 'HTC $1',\n                    manufacturer: 'HTC',\n                },\n                {\n                    regex: 'HTC_Touch_([A-Za-z0-9]+)',\n                    device_replacement: 'HTC Touch ($1)',\n                    manufacturer: 'HTC',\n                },\n                {\n                    regex: 'USCCHTC(\\\\d+)',\n                    device_replacement: 'HTC $1 (US Cellular)',\n                    manufacturer: 'HTC',\n                },\n                {\n                    regex: 'Sprint APA(9292)',\n                    device_replacement: 'HTC $1 (Sprint)',\n                    manufacturer: 'HTC',\n                },\n                {\n                    regex: 'HTC ([A-Za-z0-9]+ [A-Z])',\n                    device_replacement: 'HTC $1',\n                    manufacturer: 'HTC',\n                },\n                {\n                    regex: 'HTC-([A-Za-z0-9]+)',\n                    device_replacement: 'HTC $1',\n                    manufacturer: 'HTC',\n                },\n                {\n                    regex: 'HTC_([A-Za-z0-9]+)',\n                    device_replacement: 'HTC $1',\n                    manufacturer: 'HTC',\n                },\n                {\n                    regex: 'HTC ([A-Za-z0-9]+)',\n                    device_replacement: 'HTC $1',\n                    manufacturer: 'HTC',\n                },\n                {\n                    regex: '(ADR[A-Za-z0-9]+)',\n                    device_replacement: 'HTC $1',\n                    manufacturer: 'HTC',\n                },\n                {\n                    regex: '(HTC)',\n                    manufacturer: 'HTC',\n                },\n                {\n                    regex: 'SonyEricsson([A-Za-z0-9]+)/',\n                    device_replacement: 'Ericsson $1',\n                    other: true,\n                    manufacturer: 'Sony',\n                },\n                {\n                    regex: 'Android[\\\\- ][\\\\d]+\\\\.[\\\\d]+\\\\; [A-Za-z]{2}\\\\-[A-Za-z]{2}\\\\; WOWMobile (.+) Build',\n                },\n                {\n                    regex: 'Android[\\\\- ][\\\\d]+\\\\.[\\\\d]+\\\\.[\\\\d]+; [A-Za-z]{2}\\\\-[A-Za-z]{2}\\\\; (.+) Build',\n                },\n                {\n                    regex: 'Android[\\\\- ][\\\\d]+\\\\.[\\\\d]+\\\\-update1\\\\; [A-Za-z]{2}\\\\-[A-Za-z]{2}\\\\; (.+) Build',\n                },\n                {\n                    regex: 'Android[\\\\- ][\\\\d]+\\\\.[\\\\d]+\\\\; [A-Za-z]{2}\\\\-[A-Za-z]{2}\\\\; (.+) Build',\n                },\n                {\n                    regex: 'Android[\\\\- ][\\\\d]+\\\\.[\\\\d]+\\\\.[\\\\d]+; (.+) Build',\n                },\n                {\n                    regex: 'NokiaN([0-9]+)',\n                    device_replacement: 'Nokia N$1',\n                    manufacturer: 'Nokia',\n                },\n                {\n                    regex: 'Nokia([A-Za-z0-9\\\\v-]+)',\n                    device_replacement: 'Nokia $1',\n                    manufacturer: 'Nokia',\n                },\n                {\n                    regex: 'NOKIA ([A-Za-z0-9\\\\-]+)',\n                    device_replacement: 'Nokia $1',\n                    manufacturer: 'Nokia',\n                },\n                {\n                    regex: 'Nokia ([A-Za-z0-9\\\\-]+)',\n                    device_replacement: 'Nokia $1',\n                    manufacturer: 'Nokia',\n                },\n                {\n                    regex: 'Lumia ([A-Za-z0-9\\\\-]+)',\n                    device_replacement: 'Lumia $1',\n                    manufacturer: 'Nokia',\n                },\n                {\n                    regex: 'Symbian',\n                    device_replacement: 'Nokia',\n                    manufacturer: 'Nokia',\n                },\n                {\n                    regex: '(PlayBook).+RIM Tablet OS',\n                    device_replacement: 'Blackberry Playbook',\n                    tablet: true,\n                    manufacturer: 'RIM',\n                },\n                {\n                    regex: '(Black[Bb]erry [0-9]+);',\n                    manufacturer: 'RIM',\n                },\n                {\n                    regex: 'Black[Bb]erry([0-9]+)',\n                    device_replacement: 'BlackBerry $1',\n                    manufacturer: 'RIM',\n                },\n                {\n                    regex: '(Pre)/(\\\\d+)\\\\.(\\\\d+)',\n                    device_replacement: 'Palm Pre',\n                    manufacturer: 'Palm',\n                },\n                {\n                    regex: '(Pixi)/(\\\\d+)\\\\.(\\\\d+)',\n                    device_replacement: 'Palm Pixi',\n                    manufacturer: 'Palm',\n                },\n                {\n                    regex: '(Touchpad)/(\\\\d+)\\\\.(\\\\d+)',\n                    device_replacement: 'HP Touchpad',\n                    manufacturer: 'HP',\n                },\n                {\n                    regex: 'HPiPAQ([A-Za-z0-9]+)/(\\\\d+).(\\\\d+)',\n                    device_replacement: 'HP iPAQ $1',\n                    manufacturer: 'HP',\n                },\n                {\n                    regex: 'Palm([A-Za-z0-9]+)',\n                    device_replacement: 'Palm $1',\n                    manufacturer: 'Palm',\n                },\n                {\n                    regex: 'Treo([A-Za-z0-9]+)',\n                    device_replacement: 'Palm Treo $1',\n                    manufacturer: 'Palm',\n                },\n                {\n                    regex: 'webOS.*(P160UNA)/(\\\\d+).(\\\\d+)',\n                    device_replacement: 'HP Veer',\n                    manufacturer: 'HP',\n                },\n                {\n                    regex: '(Kindle Fire)',\n                    manufacturer: 'Amazon',\n                },\n                {\n                    regex: '(Kindle)',\n                    manufacturer: 'Amazon',\n                },\n                {\n                    regex: '(Silk)/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.([0-9\\\\-]+))?',\n                    device_replacement: 'Kindle Fire',\n                    tablet: true,\n                    manufacturer: 'Amazon',\n                },\n                {\n                    regex: '(iPad) Simulator;',\n                    manufacturer: 'Apple',\n                },\n                {\n                    regex: '(iPad);',\n                    manufacturer: 'Apple',\n                },\n                {\n                    regex: '(iPod);',\n                    manufacturer: 'Apple',\n                },\n                {\n                    regex: '(iPhone) Simulator;',\n                    manufacturer: 'Apple',\n                },\n                {\n                    regex: '(iPhone);',\n                    manufacturer: 'Apple',\n                },\n                {\n                    regex: 'Nexus\\\\ ([A-Za-z0-9\\\\-]+)',\n                    device_replacement: 'Nexus $1',\n                },\n                {\n                    regex: 'acer_([A-Za-z0-9]+)_',\n                    device_replacement: 'Acer $1',\n                    manufacturer: 'Acer',\n                },\n                {\n                    regex: 'acer_([A-Za-z0-9]+)_',\n                    device_replacement: 'Acer $1',\n                    manufacturer: 'Acer',\n                },\n                {\n                    regex: 'Amoi\\\\-([A-Za-z0-9]+)',\n                    device_replacement: 'Amoi $1',\n                    other: true,\n                    manufacturer: 'Amoi',\n                },\n                {\n                    regex: 'AMOI\\\\-([A-Za-z0-9]+)',\n                    device_replacement: 'Amoi $1',\n                    other: true,\n                    manufacturer: 'Amoi',\n                },\n                {\n                    regex: 'Asus\\\\-([A-Za-z0-9]+)',\n                    device_replacement: 'Asus $1',\n                    manufacturer: 'Asus',\n                },\n                {\n                    regex: 'ASUS\\\\-([A-Za-z0-9]+)',\n                    device_replacement: 'Asus $1',\n                    manufacturer: 'Asus',\n                },\n                {\n                    regex: 'BIRD\\\\-([A-Za-z0-9]+)',\n                    device_replacement: 'Bird $1',\n                    other: true,\n                },\n                {\n                    regex: 'BIRD\\\\.([A-Za-z0-9]+)',\n                    device_replacement: 'Bird $1',\n                    other: true,\n                },\n                {\n                    regex: 'BIRD ([A-Za-z0-9]+)',\n                    device_replacement: 'Bird $1',\n                    other: true,\n                },\n                {\n                    regex: 'Dell ([A-Za-z0-9]+)',\n                    device_replacement: 'Dell $1',\n                    manufacturer: 'Dell',\n                },\n                {\n                    regex: 'DoCoMo/2\\\\.0 ([A-Za-z0-9]+)',\n                    device_replacement: 'DoCoMo $1',\n                    other: true,\n                },\n                {\n                    regex: '([A-Za-z0-9]+)\\\\_W\\\\;FOMA',\n                    device_replacement: 'DoCoMo $1',\n                    other: true,\n                },\n                {\n                    regex: '([A-Za-z0-9]+)\\\\;FOMA',\n                    device_replacement: 'DoCoMo $1',\n                    other: true,\n                },\n                {\n                    regex: 'vodafone([A-Za-z0-9]+)',\n                    device_replacement: 'Huawei Vodafone $1',\n                    other: true,\n                },\n                {\n                    regex: 'i\\\\-mate ([A-Za-z0-9]+)',\n                    device_replacement: 'i-mate $1',\n                    other: true,\n                },\n                {\n                    regex: 'Kyocera\\\\-([A-Za-z0-9]+)',\n                    device_replacement: 'Kyocera $1',\n                    other: true,\n                },\n                {\n                    regex: 'KWC\\\\-([A-Za-z0-9]+)',\n                    device_replacement: 'Kyocera $1',\n                    other: true,\n                },\n                {\n                    regex: 'Lenovo\\\\-([A-Za-z0-9]+)',\n                    device_replacement: 'Lenovo $1',\n                    manufacturer: 'Lenovo',\n                },\n                {\n                    regex: 'Lenovo\\\\_([A-Za-z0-9]+)',\n                    device_replacement: 'Lenovo $1',\n                    manufacturer: 'Levovo',\n                },\n                {\n                    regex: 'LG/([A-Za-z0-9]+)',\n                    device_replacement: 'LG $1',\n                    manufacturer: 'LG',\n                },\n                {\n                    regex: 'LG-LG([A-Za-z0-9]+)',\n                    device_replacement: 'LG $1',\n                    manufacturer: 'LG',\n                },\n                {\n                    regex: 'LGE-LG([A-Za-z0-9]+)',\n                    device_replacement: 'LG $1',\n                    manufacturer: 'LG',\n                },\n                {\n                    regex: 'LGE VX([A-Za-z0-9]+)',\n                    device_replacement: 'LG $1',\n                    manufacturer: 'LG',\n                },\n                {\n                    regex: 'LG ([A-Za-z0-9]+)',\n                    device_replacement: 'LG $1',\n                    manufacturer: 'LG',\n                },\n                {\n                    regex: 'LGE LG\\\\-AX([A-Za-z0-9]+)',\n                    device_replacement: 'LG $1',\n                    manufacturer: 'LG',\n                },\n                {\n                    regex: 'LG\\\\-([A-Za-z0-9]+)',\n                    device_replacement: 'LG $1',\n                    manufacturer: 'LG',\n                },\n                {\n                    regex: 'LGE\\\\-([A-Za-z0-9]+)',\n                    device_replacement: 'LG $1',\n                    manufacturer: 'LG',\n                },\n                {\n                    regex: 'LG([A-Za-z0-9]+)',\n                    device_replacement: 'LG $1',\n                    manufacturer: 'LG',\n                },\n                {\n                    regex: '(KIN)\\\\.One (\\\\d+)\\\\.(\\\\d+)',\n                    device_replacement: 'Microsoft $1',\n                },\n                {\n                    regex: '(KIN)\\\\.Two (\\\\d+)\\\\.(\\\\d+)',\n                    device_replacement: 'Microsoft $1',\n                },\n                {\n                    regex: '(Motorola)\\\\-([A-Za-z0-9]+)',\n                    manufacturer: 'Motorola',\n                },\n                {\n                    regex: 'MOTO\\\\-([A-Za-z0-9]+)',\n                    device_replacement: 'Motorola $1',\n                    manufacturer: 'Motorola',\n                },\n                {\n                    regex: 'MOT\\\\-([A-Za-z0-9]+)',\n                    device_replacement: 'Motorola $1',\n                    manufacturer: 'Motorola',\n                },\n                {\n                    regex: 'Philips([A-Za-z0-9]+)',\n                    device_replacement: 'Philips $1',\n                    manufacturer: 'Philips',\n                },\n                {\n                    regex: 'Philips ([A-Za-z0-9]+)',\n                    device_replacement: 'Philips $1',\n                    manufacturer: 'Philips',\n                },\n                {\n                    regex: 'SAMSUNG-([A-Za-z0-9\\\\-]+)',\n                    device_replacement: 'Samsung $1',\n                    manufacturer: 'Samsung',\n                },\n                {\n                    regex: 'SAMSUNG\\\\; ([A-Za-z0-9\\\\-]+)',\n                    device_replacement: 'Samsung $1',\n                    manufacturer: 'Samsung',\n                },\n                {\n                    regex: 'Softbank/1\\\\.0/([A-Za-z0-9]+)',\n                    device_replacement: 'Softbank $1',\n                    other: true,\n                },\n                {\n                    regex: 'Softbank/2\\\\.0/([A-Za-z0-9]+)',\n                    device_replacement: 'Softbank $1',\n                    other: true,\n                },\n                {\n                    regex:\n                        '(hiptop|avantgo|plucker|xiino|blazer|elaine|up.browser|up.link|mmp|smartphone|midp|wap|vodafone|o2|pocket|mobile|pda)',\n                    device_replacement: 'Generic Smartphone',\n                },\n                {\n                    regex:\n                        '^(1207|3gso|4thp|501i|502i|503i|504i|505i|506i|6310|6590|770s|802s|a wa|acer|acs\\\\-|airn|alav|asus|attw|au\\\\-m|aur |aus |abac|acoo|aiko|alco|alca|amoi|anex|anny|anyw|aptu|arch|argo|bell|bird|bw\\\\-n|bw\\\\-u|beck|benq|bilb|blac|c55/|cdm\\\\-|chtm|capi|comp|cond|craw|dall|dbte|dc\\\\-s|dica|ds\\\\-d|ds12|dait|devi|dmob|doco|dopo|el49|erk0|esl8|ez40|ez60|ez70|ezos|ezze|elai|emul|eric|ezwa|fake|fly\\\\-|fly\\\\_|g\\\\-mo|g1 u|g560|gf\\\\-5|grun|gene|go.w|good|grad|hcit|hd\\\\-m|hd\\\\-p|hd\\\\-t|hei\\\\-|hp i|hpip|hs\\\\-c|htc |htc\\\\-|htca|htcg)',\n                    device_replacement: 'Generic Feature Phone',\n                },\n                {\n                    regex:\n                        '^(htcp|htcs|htct|htc\\\\_|haie|hita|huaw|hutc|i\\\\-20|i\\\\-go|i\\\\-ma|i230|iac|iac\\\\-|iac/|ig01|im1k|inno|iris|jata|java|kddi|kgt|kgt/|kpt |kwc\\\\-|klon|lexi|lg g|lg\\\\-a|lg\\\\-b|lg\\\\-c|lg\\\\-d|lg\\\\-f|lg\\\\-g|lg\\\\-k|lg\\\\-l|lg\\\\-m|lg\\\\-o|lg\\\\-p|lg\\\\-s|lg\\\\-t|lg\\\\-u|lg\\\\-w|lg/k|lg/l|lg/u|lg50|lg54|lge\\\\-|lge/|lynx|leno|m1\\\\-w|m3ga|m50/|maui|mc01|mc21|mcca|medi|meri|mio8|mioa|mo01|mo02|mode|modo|mot |mot\\\\-|mt50|mtp1|mtv |mate|maxo|merc|mits|mobi|motv|mozz|n100|n101|n102|n202|n203|n300|n302|n500|n502|n505|n700|n701|n710|nec\\\\-|nem\\\\-|newg|neon)',\n                    device_replacement: 'Generic Feature Phone',\n                },\n                {\n                    regex:\n                        '^(netf|noki|nzph|o2 x|o2\\\\-x|opwv|owg1|opti|oran|ot\\\\-s|p800|pand|pg\\\\-1|pg\\\\-2|pg\\\\-3|pg\\\\-6|pg\\\\-8|pg\\\\-c|pg13|phil|pn\\\\-2|pt\\\\-g|palm|pana|pire|pock|pose|psio|qa\\\\-a|qc\\\\-2|qc\\\\-3|qc\\\\-5|qc\\\\-7|qc07|qc12|qc21|qc32|qc60|qci\\\\-|qwap|qtek|r380|r600|raks|rim9|rove|s55/|sage|sams|sc01|sch\\\\-|scp\\\\-|sdk/|se47|sec\\\\-|sec0|sec1|semc|sgh\\\\-|shar|sie\\\\-|sk\\\\-0|sl45|slid|smb3|smt5|sp01|sph\\\\-|spv |spv\\\\-|sy01|samm|sany|sava|scoo|send|siem|smar|smit|soft|sony|t\\\\-mo|t218|t250|t600|t610|t618|tcl\\\\-|tdg\\\\-|telm|tim\\\\-|ts70|tsm\\\\-|tsm3|tsm5|tx\\\\-9|tagt)',\n                    device_replacement: 'Generic Feature Phone',\n                },\n                {\n                    regex:\n                        '^(talk|teli|topl|tosh|up.b|upg1|utst|v400|v750|veri|vk\\\\-v|vk40|vk50|vk52|vk53|vm40|vx98|virg|vite|voda|vulc|w3c |w3c\\\\-|wapj|wapp|wapu|wapm|wig |wapi|wapr|wapv|wapy|wapa|waps|wapt|winc|winw|wonu|x700|xda2|xdag|yas\\\\-|your|zte\\\\-|zeto|aste|audi|avan|blaz|brew|brvw|bumb|ccwa|cell|cldc|cmd\\\\-|dang|eml2|fetc|hipt|http|ibro|idea|ikom|ipaq|jbro|jemu|jigs|keji|kyoc|kyok|libw|m\\\\-cr|midp|mmef|moto|mwbp|mywa|newt|nok6|o2im|pant|pdxg|play|pluc|port|prox|rozo|sama|seri|smal|symb|treo|upsi|vx52|vx53|vx60|vx61|vx70|vx80|vx81|vx83|vx85|wap\\\\-|webc|whit|wmlb|xda\\\\-|xda\\\\_)',\n                    device_replacement: 'Generic Feature Phone',\n                },\n                {\n                    regex:\n                        '(bot|borg|google(^tv)|yahoo|slurp|msnbot|msrbot|openbot|archiver|netresearch|lycos|scooter|altavista|teoma|gigabot|baiduspider|blitzbot|oegp|charlotte|furlbot|http%20client|polybot|htdig|ichiro|mogimogi|larbin|pompos|scrubby|searchsight|seekbot|semanticdiscovery|silk|snappy|speedy|spider|voila|vortex|voyager|zao|zeal|fast\\\\-webcrawler|converacrawler|dataparksearch|findlinks)',\n                    device_replacement: 'Spider',\n                },\n            ],\n            mobile_browser_families: [\n                'Firefox Mobile',\n                'Opera Mobile',\n                'Opera Mini',\n                'Mobile Safari',\n                'webOS',\n                'IE Mobile',\n                'Playstation Portable',\n                'Nokia',\n                'Blackberry',\n                'Palm',\n                'Silk',\n                'Android',\n                'Maemo',\n                'Obigo',\n                'Netfront',\n                'AvantGo',\n                'Teleca',\n                'SEMC-Browser',\n                'Bolt',\n                'Iris',\n                'UP.Browser',\n                'Symphony',\n                'Minimo',\n                'Bunjaloo',\n                'Jasmine',\n                'Dolfin',\n                'Polaris',\n                'BREW',\n                'Chrome Mobile',\n                'Chrome Mobile iOS',\n                'UC Browser',\n                'Tizen Browser',\n            ],\n        };\n        // Parsers\n        _this.parsers = [\n            'device_parsers',\n            'browser_parsers',\n            'os_parsers',\n            'mobile_os_families',\n            'mobile_browser_families',\n        ];\n        // Types\n        _this.types = ['browser', 'os', 'device'];\n        // Regular Expressions\n        _this.regexes =\n            regexes ||\n            (function () {\n                const results = {};\n                _this.parsers.map((parser) => {\n                    results[parser] = [];\n                });\n                return results;\n            })();\n        // Families\n        _this.families = (function () {\n            const results = {};\n            _this.types.map((type) => {\n                results[type] = [];\n            });\n            return results;\n        })();\n        // Utility Variables\n        let ArrayProto = Array.prototype,\n            ObjProto = Object.prototype,\n            FuncProto = Function.prototype,\n            nativeForEach = ArrayProto.forEach,\n            nativeIndexOf = ArrayProto.indexOf;\n        // Find Utility\n        const find = function (ua, obj) {\n            let ret = {};\n            for (let i = 0; i < obj.length; i++) {\n                ret = obj[i](ua);\n                if (ret) {\n                    break;\n                }\n            }\n            return ret;\n        };\n        // Remove Utility\n        const remove = function (arr, props) {\n            each(arr, (obj) => {\n                each(props, (prop) => {\n                    delete obj[prop];\n                });\n            });\n        };\n        // Contains Utility\n        const contains = function (obj, target) {\n            let found = false;\n            if (obj == null) return found;\n            if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;\n            found = any(obj, (value) => value === target);\n            return found;\n        };\n        // Each Utility\n        let forEach;\n        var each = (forEach = function (obj, iterator, context) {\n            if (obj == null) return;\n            if (nativeForEach && obj.forEach === nativeForEach) {\n                obj.forEach(iterator, context);\n            } else if (obj.length === +obj.length) {\n                for (let i = 0, l = obj.length; i < l; i++) {\n                    iterator.call(context, obj[i], i, obj);\n                }\n            } else {\n                for (const key in obj) {\n                    if (_.has(obj, key)) {\n                        iterator.call(context, obj[key], key, obj);\n                    }\n                }\n            }\n        });\n        // Extend Utiltiy\n        const extend = function (obj) {\n            each(slice.call(arguments, 1), (source) => {\n                for (const prop in source) {\n                    obj[prop] = source[prop];\n                }\n            });\n            return obj;\n        };\n        // Check String Utility\n        const check = function (str) {\n            return !!(str && typeof str !== 'undefined' && str != null);\n        };\n        // To Version String Utility\n        const toVersionString = function (obj) {\n            let output = '';\n            obj = obj || {};\n            if (check(obj)) {\n                if (check(obj.major)) {\n                    output += obj.major;\n                    if (check(obj.minor)) {\n                        output += '.' + obj.minor;\n                        if (check(obj.patch)) {\n                            output += '.' + obj.patch;\n                        }\n                    }\n                }\n            }\n            return output;\n        };\n        // To String Utility\n        const toString = function (obj) {\n            obj = obj || {};\n            let suffix = toVersionString(obj);\n            if (suffix) suffix = ' ' + suffix;\n            return obj && check(obj.family) ? obj.family + suffix : '';\n        };\n        // Parse User-Agent String\n        _this.parse = function (ua) {\n            // Parsers Utility\n            const parsers = function (type) {\n                return _this.regexes[type + '_parsers'].map((obj) => {\n                    let regexp = new RegExp(obj.regex),\n                        rep = obj[(type === 'browser' ? 'family' : type) + '_replacement'],\n                        major_rep = obj.major_version_replacement;\n                    function parser(ua) {\n                        const m = ua.match(regexp);\n                        if (!m) return null;\n                        const ret = {};\n                        ret.family = (rep ? rep.replace('$1', m[1]) : m[1]) || 'other';\n                        ret.major = parseInt(major_rep || m[2]) || null;\n                        ret.minor = m[3] ? parseInt(m[3]) : null;\n                        ret.patch = m[4] ? parseInt(m[4]) : null;\n                        ret.tablet = obj.tablet;\n                        ret.man = obj.manufacturer || null;\n                        return ret;\n                    }\n                    return parser;\n                });\n            };\n            // User Agent\n            const UserAgent = function () {};\n            // Browsers Parsed\n            const browser_parsers = parsers('browser');\n            // Operating Systems Parsed\n            const os_parsers = parsers('os');\n            // Devices Parsed\n            const device_parsers = parsers('device');\n            // Set Agent\n            const a = new UserAgent();\n            // Remember the original user agent string\n            a.source = ua;\n            // Set Browser\n            a.browser = find(ua, browser_parsers);\n            if (check(a.browser)) {\n                a.browser.name = toString(a.browser);\n                a.browser.version = toVersionString(a.browser);\n            } else {\n                a.browser = {};\n            }\n            // Set OS\n            a.os = find(ua, os_parsers);\n            if (check(a.os)) {\n                a.os.name = toString(a.os);\n                a.os.version = toVersionString(a.os);\n            } else {\n                a.os = {};\n            }\n            // Set Device\n            a.device = find(ua, device_parsers);\n            if (check(a.device)) {\n                a.device.name = toString(a.device);\n                a.device.version = toVersionString(a.device);\n            } else {\n                a.device = {\n                    tablet: false,\n                    family: 'Other',\n                };\n            }\n            // Determine Device Type\n            const mobile_agents = {};\n            const mobile_browser_families = _this.regexes.mobile_browser_families.map((str) => {\n                mobile_agents[str] = true;\n            });\n            const mobile_os_families = _this.regexes.mobile_os_families.map((str) => {\n                mobile_agents[str] = true;\n            });\n            // Is Spider\n            if (a.browser.family === 'Spider') {\n                a.device.type = 'Spider';\n            } else if (a.browser.tablet || a.os.tablet || a.device.tablet) {\n                a.device.type = 'Tablet';\n            } else if (mobile_agents.hasOwnProperty(a.browser.family)) {\n                a.device.type = 'Mobile';\n            } else {\n                a.device.type = 'Desktop';\n            }\n            // Determine Device Manufacturer\n            a.device.manufacturer = a.browser.man || a.os.man || a.device.man || null;\n            // Cleanup Objects\n            remove([a.browser, a.os, a.device], ['tablet', 'man']);\n            // Return Agent\n            return a;\n        };\n        // Return context\n        return _this;\n    })());\n    // Export the Underscore object for **Node.js** and **\"CommonJS\"**,\n    // backwards-compatibility for the old `require()` API. If we're not\n    // CommonJS, add `_` to the global object via a string identifier\n    // the Closure Compiler \"advanced\" mode. Registration as an AMD\n    // via define() happens at the end of this file\n    if (typeof exports !== 'undefined') {\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = detect;\n        }\n        exports.detect = detect;\n    } else {\n        root.detect = detect;\n    }\n    // AMD define happens at the end for compatibility with AMD\n    // that don't enforce next-turn semantics on modules\n    if (typeof define === 'function' && define.amd) {\n        define((require) => detect);\n    }\n})(window);\n","module.exports = __webpack_public_path__ + \"static/media/device.29dc30b4.svg\";","import detect from './detect';\nimport html from './browser';\n\nif (process.env.NODE_ENV !== 'test') {\n    window.UserAgent = detect.parse(navigator.userAgent);\n}\n\nconst browsersContol = {\n    browserVerify() {\n        const userBrowser = {\n            browserName: window.UserAgent.browser.family,\n            browserVersion: window.UserAgent.browser.version,\n            source: window.UserAgent.source,\n        };\n        const isIe = userBrowser.browserName === 'IE';\n\n        const nodeElement = document.createElement('div');\n        nodeElement.setAttribute('id', 'for_bad_users');\n        nodeElement.innerHTML = html;\n\n        const allowedBrowsers = [\n            {\n                name: 'Chrome',\n                minVersion: '21',\n            },\n            {\n                name: 'IE',\n                minVersion: '11',\n            },\n            {\n                name: 'Firefox',\n                minVersion: '18',\n            },\n            {\n                name: 'Opera',\n                minVersion: '17',\n            },\n            {\n                name: 'Safari',\n                minVersion: '6.1',\n            },\n        ];\n\n        const isNotAllowedBrowser =\n            process.env.NODE_ENV === 'test'\n                ? false\n                : allowedBrowsers.some(\n                      (chackBrowser) =>\n                          chackBrowser.name === userBrowser.browserName &&\n                          +chackBrowser.minVersion > +userBrowser.browserVersion,\n                  );\n\n        return {\n            isNotAllowedBrowser,\n            nodeElement,\n            isIe,\n            userBrowser,\n        };\n    },\n};\n\nexport default browsersContol;\n","export default '<h1>UnacceptableBrowser</h1>';\n","import 'core-js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom';\nimport history from 'tools/history';\nimport store from 'stores';\nimport { environment } from 'configs';\nimport { setStore } from 'tools/connect';\n\nimport browserContols from './tools/browsers-control/index';\nimport AppContainer from './containers/AppContainer';\n\nsetStore(store);\n\nif (environment !== 'production') {\n    window.store = store;\n    const makeInspectable = require('mobx-devtools-mst'); // eslint-disable-line\n    makeInspectable.default(store);\n}\n\nexport const browserVerify = browserContols.browserVerify();\n\nconst APP_ROOT_ID = 'application_root';\n\nexport function renderApp(App: React.FC<{}>): void {\n    ReactDOM.render(\n        <Router history={history}>\n            <App />\n        </Router>,\n        document.getElementById(APP_ROOT_ID),\n    );\n}\n\nif (browserVerify.isNotAllowedBrowser) {\n    document.body.appendChild(browserVerify.nodeElement);\n} else {\n    renderApp(AppContainer);\n}\n\nif (environment !== 'production' && module.hot) {\n    module.hot.accept('./containers/AppContainer', () => {\n        // eslint-disable-next-line\n        const NextApp = require('./containers/AppContainer').default;\n        renderApp(NextApp);\n    });\n}\n","import { types, cast, Instance, SnapshotIn, SnapshotOut } from 'mobx-state-tree';\nimport history from 'tools/history';\n\nexport const SEARCH = 'SEARCH';\nexport const CATALOG = 'CATALOG';\nexport const CART = 'CART';\nexport const MAP = 'MAP';\nexport const STATUS = 'STATUS';\n\nexport const routes = {\n    [SEARCH]: '/search',\n    [CATALOG]: '/catalog',\n    [CART]: '/cart',\n    [MAP]: '/map',\n    [STATUS]: '/status',\n};\n\nconst Ui = types\n    .model('Ui', {\n        page: types.optional(types.enumeration(Object.values(routes)), routes.CATALOG),\n        previous: types.maybeNull(types.enumeration(Object.values(routes))),\n        isLoading: types.optional(types.boolean, true),\n        visibles: types.array(types.string),\n    })\n    .actions((self) => {\n        const ui = self;\n\n        const gotoPage = (to: string) => {\n            ui.previous = ui.page;\n            ui.page = to;\n            history.push(to);\n        };\n\n        const setVisible = (itemId: string): void => {\n            ui.visibles.push(itemId);\n        };\n\n        const removeVisible = (itemId: string): void => {\n            ui.visibles.splice(ui.visibles.indexOf(itemId), 1);\n        };\n\n        const getIndex = (itemId: string): number => ui.visibles.indexOf(itemId) + 1;\n\n        const goToCart = () => {\n            gotoPage(routes.CART);\n            window.AssistantClient.sendMessage({\n                type: 'server_action',\n                /* eslint-disable @typescript-eslint/camelcase */\n                server_action: {\n                    action_id: 'go_to_cart',\n                },\n                /* eslint-enable @typescript-eslint/camelcase */\n            });\n        };\n\n        return {\n            gotoPage,\n            goToCart,\n            setVisible,\n            removeVisible,\n            getIndex,\n        };\n    });\n\nexport type UiModel = Instance<typeof Ui>;\nexport type UiSnapshotOut = SnapshotOut<typeof Ui>;\nexport type UiSnapshotIn = SnapshotIn<typeof Ui>;\n\nexport default Ui;\n","import pkg from '../../package.json';\n\nconst defaults = {\n    development: {\n        api: 'dev-api',\n    },\n    staging: {\n        api: 'stage-api',\n    },\n    production: {\n        api: 'prod-api',\n    },\n    test: {\n        api: 'test-api',\n    },\n};\n\nexport const environment = process.env.REACT_APP_ENVIRONMENT || 'development';\n\nexport const isProduction = environment === 'production';\n\nexport default {\n    cssPrefix: pkg.cssPrefix,\n    environment,\n    api: process.env.REACT_APP_API || defaults[environment].api,\n    isProduction: environment === 'production',\n};\n","export const USER_MOCK = {\n    address: 'Кутузовский проспект, 32',\n    location: 'корпус Г, подъезд 2',\n};\n\nexport const CART_MOCK = [\n    'Средний черничный попкорн',\n    'Средний черничный попкорн',\n    'Средний черничный попкорн',\n    'Средний черничный попкорн',\n    'Средний черничный попкорн',\n\n    'Большой сладкий попкорн',\n    'Большой сладкий попкорн',\n    'Большой сладкий попкорн',\n\n    'Малый соленый попкорн',\n    'Малый соленый попкорн',\n    'Малый соленый попкорн',\n    'Малый соленый попкорн',\n    'Малый соленый попкорн',\n\n    'Средний попкорн два в одном',\n    'Средний попкорн два в одном',\n];\n\nexport const PRODUCTS_MOCK = [\n    {\n        id: '1',\n        name: 'Большой сладкий попкорн',\n        // eslint-disable-next-line\n        clear_name: 'Большой сладкий попкорн',\n        guid: '32ff0d82c-681c-11e9-80c5-0cc47a817925',\n        // eslint-disable-next-line\n        images_urls: ['https://d.radikal.ru/d16/2004/ba/9645c94cae36.png'],\n        price: 250,\n    },\n    {\n        id: '2',\n        name: 'Средний черничный попкорн',\n        // eslint-disable-next-line\n        clear_name: 'Средний черничный попкорн',\n        guid: '32e5b884-fa98-11e8-80c5-0cc47a817925',\n        // eslint-disable-next-line\n        images_urls: [\n            'https://static-eu.insales.ru/images/products/1/1746/295085778/1583447753704_15832238436181.jpg',\n            'https://static-eu.insales.ru/images/products/1/2173/279742589/19_100Г_ГОРЧИЦА_СТОЛИЧНАЯ_РУС._.jpg',\n        ],\n        price: 170,\n    },\n    {\n        id: '3',\n        name: 'Средний попкорн два в одном',\n        // eslint-disable-next-line\n        clear_name: 'Средний попкорн два в одном',\n        guid: '12e5b884-fa98-11e8-80c5-0cc47a817925',\n        // eslint-disable-next-line\n        images_urls: [\n            'https://static-eu.insales.ru/images/products/1/2173/279742589/19_100Г_ГОРЧИЦА_СТОЛИЧНАЯ_РУС._.jpg',\n        ],\n        price: 180,\n    },\n    {\n        id: '4',\n        name: 'Малый соленый попкорн',\n        // eslint-disable-next-line\n        clear_name: 'Малый соленый попкорн',\n        guid: '12e5b884-fa98-11e8-80c5-0cc47a817924',\n        // eslint-disable-next-line\n        images_urls: [\n            'https://static-eu.insales.ru/images/products/1/2173/279742589/19_100Г_ГОРЧИЦА_СТОЛИЧНАЯ_РУС._.jpg',\n        ],\n        price: 110,\n    },\n    {\n        id: '5',\n        name: 'Малый соленый попкорн',\n        // eslint-disable-next-line\n        clear_name: 'Малый соленый попкорн',\n        guid: '12e5b884-fa98-11e8-80c5-0cc47a817923',\n        // eslint-disable-next-line\n        images_urls: [\n            'https://static-eu.insales.ru/images/products/1/2173/279742589/19_100Г_ГОРЧИЦА_СТОЛИЧНАЯ_РУС._.jpg',\n        ],\n        price: 110,\n    },\n    {\n        id: '6',\n        name: 'Малый соленый попкорн',\n        // eslint-disable-next-line\n        clear_name: 'Малый соленый попкорн',\n        guid: '12e5b884-fa98-11e8-80c5-0cc47a817922',\n        // eslint-disable-next-line\n        images_urls: [\n            'https://static-eu.insales.ru/images/products/1/2173/279742589/19_100Г_ГОРЧИЦА_СТОЛИЧНАЯ_РУС._.jpg',\n        ],\n        price: 110,\n    },\n    {\n        id: '7',\n        name: 'Малый соленый попкорн',\n        // eslint-disable-next-line\n        clear_name: 'Малый соленый попкорн',\n        guid: '12e5b884-fa98-11e8-80c5-0cc47a817921',\n        // eslint-disable-next-line\n        images_urls: [\n            'https://static-eu.insales.ru/images/products/1/2173/279742589/19_100Г_ГОРЧИЦА_СТОЛИЧНАЯ_РУС._.jpg',\n        ],\n        price: 110,\n    },\n];\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import { types, Instance, SnapshotIn, SnapshotOut } from 'mobx-state-tree';\n\nconst User = types.model('User', {\n    address: types.maybeNull(types.string),\n    location: types.maybeNull(types.string),\n});\n\nexport default User;\n\nexport type UserSnapshotOut = SnapshotOut<typeof User>;\nexport type UserSnapshotIn = SnapshotIn<typeof User>;\nexport type UserModel = Instance<typeof User>;\n","import { types, Instance, SnapshotIn, SnapshotOut } from 'mobx-state-tree';\n\nconst ProductItem = types.model('Product', {\n    id: types.identifier,\n    name: types.string,\n    clearName: types.string,\n    price: types.number,\n    imagesUrls: types.array(types.string),\n    index: types.maybeNull(types.number),\n    visible: types.maybeNull(types.boolean),\n});\n\nexport default ProductItem;\n\nexport type ProductItemSnapshotOut = SnapshotOut<typeof ProductItem>;\nexport type ProductItemSnapshotIn = SnapshotIn<typeof ProductItem>;\nexport type ProductItemModel = Instance<typeof ProductItem>;\n","import { types, Instance, SnapshotIn, SnapshotOut } from 'mobx-state-tree';\n\nimport ProductItem, { ProductItemModel } from './product';\n\nconst Products = types\n    .model('Products', {\n        title: types.optional(types.string, ''),\n        items: types.array(ProductItem),\n        selectedId: types.maybeNull(types.string),\n    })\n    .actions((self) => {\n        const products = self;\n        const setVisibility = (item: ProductItemModel, value: boolean, index: number | null): void => {\n            item.visible = value;\n            item.index = index;\n        };\n\n        const selectItem = (itemId: string): void => {\n            if (products.items.find((item) => item.id === itemId)) {\n                products.selectedId = itemId;\n            }\n        };\n\n        return {\n            setVisibility,\n            selectItem,\n        };\n    });\n\nexport default Products;\n\nexport type ProductsModel = Instance<typeof Products>;\nexport type ProductsSnapshotOut = SnapshotOut<typeof Products>;\nexport type ProductsSnapshotIn = SnapshotIn<typeof Products>;\n","import { types, Instance, SnapshotIn, cast, SnapshotOut } from 'mobx-state-tree';\n\nimport ProductItem from './product';\n\nconst CartItem = types.model('CartItem', {\n    product: types.reference(ProductItem),\n    count: types.number,\n});\n\nexport type CartItemModel = Instance<typeof CartItem>;\n\nconst Cart = types\n    .model('Cart', {\n        items: types.array(CartItem),\n        orderId: types.maybeNull(types.string),\n    })\n    .views((self) => ({\n        get count(): number {\n            return self.items.reduce((acc: number, item: CartItemModel) => acc + item.count, 0);\n        },\n\n        get totalPrice(): number {\n            return self.items.reduce((acc: number, item: CartItemModel) => acc + item.product.price * item.count, 0);\n        },\n\n        get itemsMap(): { [key: string]: CartItemModel } {\n            return self.items.reduce((acc: Record<string, CartItemModel>, item: CartItemModel) => {\n                acc[item.product.id] = item;\n\n                return acc;\n            }, {});\n        },\n    }))\n    .actions((self) => {\n        const cart = self;\n\n        const addToCart = (itemId: string): void => {\n            const item = cart.items.find((item) => item.product.id === itemId);\n\n            if (item) {\n                item.count++;\n            } else {\n                cart.items.push({\n                    product: itemId,\n                    count: 1,\n                });\n            }\n        };\n\n        const clear = (): void => {\n            cart.items = cast([]);\n        };\n\n        interface RemoveFromCartParams {\n            itemId: string;\n            count: number;\n            shouldRemoveMention?: boolean;\n        }\n\n        const removeFromCart = ({ itemId, count, shouldRemoveMention }: RemoveFromCartParams) => {\n            const index = cart.items.findIndex((item: CartItemModel) => item.product.id === itemId);\n            const item = cart.items[index];\n\n            if (!item) {\n                return;\n            }\n\n            item.count = Math.max(0, item.count - count);\n\n            if (!item.count && shouldRemoveMention) {\n                cart.items.splice(index, 1);\n            }\n        };\n\n        const confirmPayment = (): void => {\n            window.AssistantClient.sendMessage({\n                type: 'server_action',\n                /* eslint-disable @typescript-eslint/camelcase */\n                server_action: {\n                    action_id: 'make_purchase',\n                },\n                /* eslint-enable @typescript-eslint/camelcase */\n            });\n        };\n\n        return {\n            clear,\n            addToCart,\n            removeFromCart,\n            confirmPayment,\n        };\n    });\n\nexport type CartModel = Instance<typeof Cart>;\nexport type CartSnapshotOut = SnapshotOut<typeof Cart>;\nexport type CartSnapshotIn = SnapshotIn<typeof Cart>;\n\nexport default Cart;\n","import { applySnapshot } from 'mobx-state-tree';\n\nimport { StoreType } from './types';\nimport { routes } from './ui';\n\ninterface VpsStockItem {\n    name: string;\n    clear_name: string; // eslint-disable-line camelcase\n    guid: string;\n    price: string;\n    images_urls: string[]; // eslint-disable-line camelcase\n}\n\ninterface AddItemsCommand {\n    stock: VpsStockItem[];\n}\n\nconst showItemsCast = (store: StoreType, command: AddItemsCommand): void => {\n    const stock = Object.values(command.stock);\n    const items = stock.map((item: VpsStockItem) => ({\n        id: item.guid,\n        name: item.name,\n        clearName: item.clear_name,\n        price: Number(item.price),\n        guid: item.guid,\n        imagesUrls: item.images_urls,\n    }));\n\n    applySnapshot(store.products, {\n        title: 'Попкорн',\n        items,\n    });\n    store.ui.isLoading = false;\n};\ninterface VpsAddItem extends AssistantSdkCommand {\n    item: string;\n    count: number;\n}\n\nconst addItemCast = (store: StoreType, command: VpsAddItem): void => {\n    const { item: itemName, count } = command;\n    const item = store.products.items.find(({ name }) => name === itemName);\n\n    let products = count;\n    if (item) {\n        while (products) {\n            store.cart.addToCart(item.id);\n            products -= 1;\n        }\n        store.products.selectItem(item.id);\n    }\n};\n\ninterface RemoveItemFromCartCommand extends AssistantSdkCommand {\n    item: string;\n    count: number;\n}\n\nconst removeItem = (store: StoreType, { item, count }: RemoveItemFromCartCommand) =>\n    store.cart.removeFromCart({ itemId: item, count, shouldRemoveMention: true });\n\nconst removeAll = (store: StoreType) => store.cart.clear();\n\nconst gotoCart = (store: StoreType): void => {\n    store.ui.gotoPage(routes.CART);\n};\n\ninterface GotoCatalogCommand extends AssistantSdkCommand {\n    clear: boolean;\n}\n\nconst gotoCatalog = (store: StoreType, command: GotoCatalogCommand): void => {\n    if (command.clear) {\n        store.cart.clear();\n    }\n\n    store.ui.gotoPage(routes.CATALOG);\n};\n\ninterface ValidationOkCommand extends AssistantSdkCommand {\n    order_id: string; // eslint-disable-line camelcase\n}\n\nconst success = (store: StoreType, command: ValidationOkCommand): void => {\n    store.cart.orderId = command.order_id;\n    store.ui.gotoPage(routes.STATUS);\n};\n\nconst casts: { [key: string]: Function } = {\n    SHOW_ITEMS: showItemsCast,\n    ADD_ITEM: addItemCast,\n    REMOVE_ITEM: removeItem,\n    REMOVE_ALL: removeAll,\n    GO_TO_VALIDATION: gotoCart,\n    GO_TO_CATALOG: gotoCatalog,\n    VALIDATION_OK: success,\n};\n\nexport default casts;\n","import { types, applySnapshot } from 'mobx-state-tree';\nimport { environment, isProduction } from 'configs';\nimport { USER_MOCK } from 'mocks';\n\nimport user from './user';\nimport ui, { routes } from './ui';\nimport products from './products';\nimport cart from './cart';\nimport { StoreType } from './types';\nimport casts from './casts';\n\nconst Store = types\n    .model('Store', {\n        ui: types.optional(ui, {}),\n        products: types.optional(products, {}),\n        cart: types.optional(cart, {}),\n        user: types.optional(user, {}),\n    })\n    .actions((self) => {\n        const store = self;\n\n        const afterCreate = function init() {\n            applySnapshot(store.user, {\n                address: USER_MOCK.address,\n            });\n            store.ui.isLoading = true;\n\n            if (window.AssistantHost && typeof window.AssistantHost.ready === 'function') {\n                window.AssistantHost.ready();\n            }\n\n            if (environment !== 'production') {\n                // Здесь можно восмользоваться моком для локальной разработки, напр.\n                // applySnapshot(store.products, PRODUCTS_MOCK)\n                // store.ui.isLoading = false;\n            }\n        };\n\n        const onMessage = (message: AssistantSdkCommand): void => {\n            const { command } = message.smart_app_data;\n\n            if (command in casts) {\n                const castFn = casts[command];\n\n                castFn(store, message.smart_app_data);\n            } else {\n                // eslint-disable-next-line no-underscore-dangle\n                window.__messages.push({\n                    'not-fount': message,\n                });\n            }\n        };\n\n        return { onMessage, afterCreate };\n    });\n\nconst store = Store.create({});\n\nfunction castFromStore(store: StoreType): AppStateInterface {\n    return {\n        items:\n            store.ui.page === routes.CATALOG\n                ? store.products.items.map((product) => ({\n                      number: product.index,\n                      title: product.name,\n                      visibles: product.visible,\n                      id: product.id,\n                      count_in_cart: store.cart.itemsMap[product.id] ? store.cart.itemsMap[product.id].count : 0, // eslint-disable-line\n                      action: {},\n                  }))\n                : [],\n        current_screen: store.ui.page === routes.CATALOG ? 'catalog' : 'cart', // eslint-disable-line\n        foodtech: {\n            products: Object.keys(store.cart.itemsMap).map((itemId) => ({\n                id: itemId,\n                quantity: store.cart.itemsMap[itemId].count,\n            })),\n            totalPrice: {\n                value: store.cart.totalPrice,\n                discountValue: 0,\n            },\n        },\n    };\n}\n\nif (!isProduction) {\n    window.AssistantHost = window.AssistantHost || {};\n    window.AssistantHost.sendMessage = (some) => some;\n    window.AssistantHost.updateState = (some) => some;\n}\n\nwindow.AssistantClient = window.AssistantClient || {};\n\n/**\n * Assistand SDK API implementation:\n */\nwindow.AssistantClient.onStart = function AssistantSdkOnStart(): void {\n    // eslint-disable-next-line no-underscore-dangle\n    window.__messages = window.__messages || [];\n};\n\nwindow.AssistantClient.onData = function AssistantSdkOnMessage(command: AssistantSdkCommand): void {\n    store.onMessage(command);\n};\n\n// TODO Описать схему сообщений в AssistantSDK\nwindow.AssistantClient.sendMessage = function AssistantSdkSendMessage(message: any): void {\n    window.AssistantHost.sendMessage(JSON.stringify(message));\n};\n\nwindow.AssistantClient.onRequestState = function AssistantSdkOnRequestState(): void {\n    const state = castFromStore(store);\n    window.AssistantHost.updateState(JSON.stringify(state));\n};\n\nexport default store;\n","import React from 'react';\n\nimport './Suggest.scss';\n\ninterface SuggestProps {\n    items: string[];\n}\n\nexport const Suggest: React.FC<SuggestProps> = ({ items }) => (\n    <div className=\"Suggest\">\n        {items.map((item) => (\n            <div className=\"Suggest-Item\" key={item}>\n                {item}\n            </div>\n        ))}\n    </div>\n);\n","import React from 'react';\n\nimport './style.scss';\n\ninterface ContainerProps {\n    children: React.ReactNode;\n    className?: string;\n    fluid?: boolean;\n    [key: string]: any;\n}\n\nconst Container: React.FC<ContainerProps> = ({ children, className = '', ...props }) => (\n    <div className={`sb-Container ${className}`} {...props}>\n        {children}\n    </div>\n);\n\nexport default Container;\n","import React from 'react';\n\nimport './style.scss';\n\ninterface RowProps {\n    children: React.ReactNode;\n    className?: string;\n    verticalPadding?: string | number;\n    topPadding?: string | number;\n    bottomPadding?: string | number;\n    noGutters?: boolean;\n    style?: React.CSSProperties;\n    [key: string]: any;\n}\n\nconst Row: React.FC<RowProps> = ({\n    children,\n    className = '',\n    noGutters = false,\n    verticalPadding,\n    topPadding,\n    bottomPadding,\n    style = {},\n    ...props\n}) => {\n    const styles = {\n        ...style,\n        paddingTop: `${verticalPadding || topPadding}px`,\n        paddingBottom: `${verticalPadding || bottomPadding}px`,\n    };\n\n    const elClassname = `sb-Row ${noGutters ? 'sb-Row_noGutters' : ''}`;\n\n    return (\n        <div style={styles} className={`${elClassname} ${className}`} {...props}>\n            {children}\n        </div>\n    );\n};\n\nexport default Row;\n","import config from 'configs';\n\nconst PREFIX = config.cssPrefix || '';\n\ninterface ConfitionsInterface<T> {\n    T?: boolean;\n}\n\nexport default (blockName: string, delimeter = '__', modDelimeter = '_'): BemRenderer => {\n    function renderer(...elements: string[]): string {\n        if (!elements.length) {\n            return PREFIX + blockName;\n        }\n\n        return elements.map((element) => PREFIX + blockName + delimeter + element).join(' ');\n    }\n\n    renderer.elem = (element: string, mod: string, modVal?: string): string =>\n        PREFIX + blockName + delimeter + element + modDelimeter + mod + (modVal ? modDelimeter + modVal : '');\n\n    renderer.mod = (mod: string, modVal?: string): string =>\n        PREFIX + blockName + modDelimeter + mod + (modVal ? modDelimeter + modVal : '');\n\n    renderer.modify = (conditions: ConfitionsInterface<string> = {}, elem?: string): string => {\n        const elemToModify = elem ? blockName + delimeter + elem : blockName;\n\n        return [\n            PREFIX,\n            elemToModify,\n            ' ',\n            Object.entries(conditions)\n                .map(([mod, predicate]) => Boolean(predicate) && PREFIX + elemToModify + modDelimeter + mod)\n                .filter(Boolean)\n                .join(' '),\n        ].join('');\n    };\n\n    renderer.all = (...values: string[]): string => values.join(' ');\n\n    return renderer;\n};\n","import React from 'react';\nimport Bem from 'tools/bem';\n\nexport default (Component: React.FC<any>, componentName?: string) => (props?: any, context?: any) => (\n    <Component {...props} context={context} bem={Bem(componentName || Component.name)} />\n);\n","import React from 'react';\nimport { StoreType } from 'stores/types';\nimport withBem from 'hoc/withBem';\nimport { connectToStore } from 'tools/connect';\n\nimport './Header.scss';\n\ninterface HeaderProps extends BemProps, StoreType {\n    title: string;\n    subtitle?: string;\n}\n\nconst Component: React.FC<HeaderProps> = ({ bem, ui, title, subtitle, children }) => (\n    <div className={bem()}>\n        {ui.previous ? <span className={bem('back')} /> : ''}\n        <div className={bem('section')}>\n            <div className={bem('logo')} />\n            <div className={bem('title-container')}>\n                <div className={bem('title')}>{title}</div>\n                {subtitle ? <div className={bem('subtitle')}>{subtitle}</div> : ''}\n            </div>\n        </div>\n        <div className={bem('section')}>{children}</div>\n    </div>\n);\n\nexport const Header = connectToStore(withBem(Component, 'Header'));\n","import React from 'react';\nimport { connectToStore } from 'tools/connect';\nimport { StoreType } from 'stores/types';\nimport withBem from 'hoc/withBem';\nimport { routes } from 'stores/ui';\n\nimport './HeaderAddress.scss';\n\ninterface HeaderAddressProps extends StoreType, BemProps {}\n\nconst Component: React.FC<HeaderAddressProps> = ({ user, ui, bem }) => (\n    <div className={bem()} tabIndex={0} onClick={() => ui.gotoPage(routes.MAP)}>\n        <div className={bem('icon')} />\n        <div className={bem('text')}>{user.address}</div>\n    </div>\n);\n\nexport const HeaderAddress = withBem(connectToStore(Component), 'HeaderAddress');\n","import React from 'react';\nimport { connectToStore } from 'tools/connect';\nimport { StoreType } from 'stores/types';\nimport withBem from 'hoc/withBem';\n\nimport './HeaderCart.scss';\n\ninterface HeaderCartProps extends StoreType, BemProps {}\n\nconst Component: React.FC<HeaderCartProps> = ({ cart, ui, bem }) => (\n    <div className={bem()} tabIndex={0} onClick={() => ui.goToCart()}>\n        <div className={bem('icon')}>{cart.count > 0 && <span className={bem('badge')}>{cart.count}</span>}</div>\n        <div className={bem('price')}>{cart.totalPrice} ₽</div>\n    </div>\n);\n\nexport const HeaderCart = withBem(connectToStore(Component), 'HeaderCart');\n","import React from 'react';\nimport withBem from 'hoc/withBem';\n\nimport './style.scss';\n\ninterface Card {\n    className?: string;\n    children: React.ReactNode;\n    index?: number | string | false;\n    badge: string;\n    bem: BemRenderer;\n    size?: number;\n}\n\nconst Card: React.FC<Card> = ({ children, className = '', index, badge, bem, size }) => {\n    const style = size ? { width: size, height: size } : {};\n    return (\n        <div className={bem.all(bem(), className)} style={style}>\n            {index && <span className={bem('index')}>{index}</span>}\n            {typeof badge !== 'undefined' && <span className={bem('badge')}>{badge}</span>}\n            {children}\n        </div>\n    );\n};\n\nexport default withBem(Card, 'Card');\n","import React from 'react';\nimport Card from 'components/Card';\nimport withBem from 'hoc/withBem';\nimport { ProductItemModel } from 'stores/product';\n\nimport './CatalogListItem.scss';\n\ninterface CatalogListItemProps extends ProductItemModel, BemProps {\n    countInCart: number;\n    onClick: () => void;\n}\n\nconst Component: React.FC<CatalogListItemProps> = ({ bem, imagesUrls, countInCart, name, price, index, onClick }) => (\n    <div tabIndex={0} className={bem()} onClick={onClick}>\n        <Card index={index} className={bem('card')}>\n            <img className={bem('img')} src={imagesUrls[0]} alt=\"\" />\n        </Card>\n        <div className={bem('description')}>\n            <span className={bem('callToAction')} />\n            <div className={bem('row')}>\n                <span className={bem('title', 'name')}>{name}</span>\n            </div>\n            <div className={bem('priceRow')}>\n                <span className={bem('title', 'price')}>{price} ₽</span>\n                {countInCart ? <span className={bem('title', 'badge')}>{countInCart}</span> : ''}\n            </div>\n        </div>\n    </div>\n);\n\nexport const CatalogListItem = withBem(Component, 'CatalogListItem');\n","import React from 'react';\nimport { connectToStore } from 'tools/connect';\nimport withBem from 'hoc/withBem';\nimport { StoreType } from 'stores/types';\nimport { ProductItemModel } from 'stores/product';\n\nimport { CatalogListItem } from '../ListItem/CatalogListItem';\nimport './CatalogList.scss';\n\ninterface CatalogListProps extends StoreType, BemProps {\n    childKeyPrefix: string;\n}\n\nconst Component: React.FC<CatalogListProps> = ({ bem, products, cart }) => (\n    <div className={bem()}>\n        <div className={bem('container')}>\n            {products.items.map((item: ProductItemModel, index) => (\n                <CatalogListItem\n                    {...item}\n                    countInCart={cart.itemsMap[item.id] ? cart.itemsMap[item.id].count : 0}\n                    key={item.id}\n                    index={index + 1}\n                    onClick={() => cart.addToCart(item.id)}\n                />\n            ))}\n        </div>\n    </div>\n);\n\nexport const CatalogList = withBem(connectToStore(Component), 'CatalogList');\n","import React from 'react';\nimport { environment } from 'configs';\nimport { PRODUCTS_MOCK } from 'mocks';\nimport { Suggest } from 'components/Suggest/Suggest';\nimport Container from 'components/Grids/Container';\nimport Row from 'components/Grids/Row';\nimport Skeleton from 'components/Skeleton';\nimport ContentLoader from 'components/ContentLoader';\nimport { Header } from 'components/Header/Header';\nimport { HeaderAddress } from 'components/HeaderAddress/HeaderAddress';\nimport { HeaderCart } from 'components/HeaderCart/HeaderCart';\nimport { connectToStore } from 'tools/connect';\nimport { StoreType } from 'stores/types';\n\nimport { CatalogList } from './List/CatalogList';\n\ntype CatalogProps = StoreType;\n\nconst Component: React.FC<CatalogProps> = ({ ui, cart }) => {\n    React.useEffect(() => {\n        window.AssistantClient.onData({\n            type: 'smart_app_data',\n            // eslint-disable-next-line\n            smart_app_data: {\n                command: 'SHOW_ITEMS',\n                stock: PRODUCTS_MOCK,\n            },\n        });\n\n        console.log('sme');\n\n        window.AssistantClient.onData({\n            type: 'smart_app_data',\n            // eslint-disable-next-line\n            smart_app_data: {\n                command: 'ADD_ITEM',\n                item: 'Средний черничный попкорн',\n                count: 2,\n            },\n        });\n    }, []);\n\n    React.useEffect(() => {\n        const onKeyDown = (event: any) => {\n            switch (event.code) {\n                case 'Digit1':\n                    window.AssistantClient.onData({\n                        type: 'smart_app_data',\n                        // eslint-disable-next-line\n                        smart_app_data: {\n                            command: 'SHOW_ITEMS',\n                            stock: PRODUCTS_MOCK,\n                        },\n                    });\n                    break;\n                case 'Digit2':\n                    window.AssistantClient.onData({\n                        type: 'smart_app_data',\n                        // eslint-disable-next-line\n                        smart_app_data: {\n                            command: 'REMOVE_ITEM',\n                            item: '32e5b884-fa98-11e8-80c5-0cc47a817925',\n                            count: 2,\n                        },\n                    });\n                    break;\n                case 'Digit3':\n                    window.AssistantClient.onData({\n                        type: 'smart_app_data',\n                        // eslint-disable-next-line\n                        smart_app_data: {\n                            command: 'REMOVE_ALL',\n                        },\n                    });\n                    break;\n                default:\n            }\n        };\n\n        document.addEventListener('keydown', onKeyDown);\n\n        return () => {\n            document.removeEventListener('keydown', onKeyDown);\n        };\n    }, []);\n\n    const hasItemsInCart = cart.count > 0;\n\n    const onLoading = (\n        <Container>\n            <Row>\n                <Skeleton backgroundColor=\"#262828\" foregroundColor=\"#414545\" />\n            </Row>\n        </Container>\n    );\n\n    const suggest =\n        environment !== 'production' ? (\n            <Suggest items={['1. Показать каталог', '2. Удали два средних черничных попкорна', '3. Удали все']} />\n        ) : (\n            ''\n        );\n\n    return (\n        <>\n            <Header title=\"Самокат\" subtitle=\"«Хочу еду к просмотру»\">\n                <HeaderAddress />\n                {hasItemsInCart && <HeaderCart />}\n            </Header>\n            <CatalogList />\n            {suggest}\n        </>\n    );\n    // <ContentLoader isActive={ui.isLoading} onLoading={onLoading}>\n    // </ContentLoader>\n};\n\nexport const Catalog = connectToStore(Component);\n","import React from 'react';\n\nimport './style.scss';\n\ntype SizeType = 's' | 'm' | 'l' | 'xl';\n\nconst SIZES: SizeType[] = ['s', 'm', 'l', 'xl'];\n\ninterface CellProps {\n    className?: string;\n    verticalPadding?: number | string;\n    topPadding?: number | string;\n    bottomPadding?: number | string;\n    s?: number | string;\n    m?: number | string;\n    l?: number | string;\n    xl?: number | string;\n    [key: string]: any;\n}\n\nconst Col: React.FC<CellProps> = (props) => {\n    const { children, className = '', verticalPadding, topPadding, bottomPadding, style = {} } = props;\n\n    const sizeClasses = SIZES.map((size: SizeType) => {\n        const sizeProp = props[size];\n\n        return sizeProp ? `sb-Col${(size === 's' ? '' : '-') + size}-${sizeProp}` : '';\n    }).join(' ');\n\n    const hiddenClasses = SIZES.map((size) => {\n        const sizeProp = props[`${size}Hidden`];\n        return sizeProp ? `sb-Col-${size}-hidden` : '';\n    }).join(' ');\n\n    const autoClasses = SIZES.map((size) => {\n        const sizeProp = props[`${size}Auto`];\n\n        return sizeProp ? `sb-Col${(size === 's' ? '' : '-') + size}-auto` : '';\n    }).join(' ');\n\n    const offsetClasses = SIZES.map((size) => {\n        const sizeProp = props[`${size}Offset`];\n\n        return sizeProp ? `sb-Col-offset${(size === 's' ? '' : '-') + size}-${sizeProp}` : '';\n    }).join(' ');\n\n    const styles = {\n        ...style,\n        paddingTop: `${verticalPadding || topPadding}px`,\n        paddingBottom: `${verticalPadding || bottomPadding}px`,\n    };\n\n    return (\n        <div style={styles} className={`sb-Col ${sizeClasses} ${hiddenClasses} ${autoClasses} ${offsetClasses}`}>\n            <div className={`sb-Col__content ${className}`}>{children}</div>\n            <div className=\"sb-Col__gutter\" />\n        </div>\n    );\n};\n\nexport default Col;\n","import React from 'react';\nimport withBem from 'hoc/withBem';\n\nimport './style.scss';\n\ntype TypographyType = 'header' | 'subheader' | 'body';\ntype DecorationType = 'strikeThrough' | 'underline';\ninterface TypographyProps {\n    children: React.ReactNode;\n    className?: string;\n    type: TypographyType;\n    bem: BemRenderer;\n    decoration?: DecorationType;\n}\n\nconst Typography: React.FC<TypographyProps> = ({ children, className = '', type, bem, decoration }) => {\n    const decorationClass = decoration ? bem.mod(decoration) : '';\n\n    return <span className={bem.all(bem(), bem.mod(type), className, decorationClass)}>{children}</span>;\n};\n\nexport default withBem(Typography, 'Typography');\n","import React from 'react';\nimport Typography from 'components/Typography';\nimport withBem from 'hoc/withBem';\n\nimport './CartInfo.scss';\nimport device from './device.svg';\n\ntype CartInfoProps = BemProps;\n\nconst Component: React.FC<CartInfoProps> = ({ bem }) => (\n    <div className=\"CartPage__acent\">\n        <div className=\"CartPage__visible\">\n            <img src={device} className=\"CartPage__icon\" alt=\"Иконка телефона\" />\n            <p>\n                <Typography type=\"subheaderDescription\">Мы отправили уведомление вам на телефон</Typography>\n            </p>\n            <p>\n                <Typography type=\"header\">\n                    Дополните свой адрес и укажите номер телефона, чтобы сделать заказ\n                </Typography>\n            </p>\n            <button type=\"button\" className={bem.modify({}, 'button')}>\n                <Typography type=\"subheader\">К оплате многа тыщ деняк ₽</Typography>\n            </button>\n        </div>\n    </div>\n);\n\nexport const CartInfo = withBem(Component, 'CartInfo');\n","import React from 'react';\nimport { CartItemModel } from 'stores/cart';\nimport Card from 'components/Card';\nimport Typography from 'components/Typography';\nimport withBem from 'hoc/withBem';\n\nimport './CartListItem.scss';\n\ninterface CartListItemProps extends CartItemModel, BemProps {\n    index: number;\n    onMoreClick: () => void;\n    onLessClick: () => void;\n}\n\nconst Component: React.FC<CartListItemProps> = ({\n    index,\n    onLessClick,\n    onMoreClick,\n    product: { imagesUrls, clearName, price, name },\n    count,\n    bem,\n}) => (\n    <tr className={bem()}>\n        <td className={bem('cell', 'index')}>{index}</td>\n        <td className={bem('cell', 'imgCell')}>\n            <Card>\n                <img src={imagesUrls[0]} alt={clearName} className={bem('img')} />\n            </Card>\n        </td>\n        <td className={bem('description', 'cell')}>\n            <div className={bem('row')}>\n                <Typography type=\"title\">{name}</Typography>\n            </div>\n            <div>\n                <Typography type=\"subheaderDescription\">{price}₽</Typography>\n            </div>\n        </td>\n        <td className={bem('quantity', 'cell')}>\n            <div className={bem('quantityIcons')}>\n                <div className={bem('quantitySlider')}>\n                    <div tabIndex={0} onClick={onLessClick} className={bem.modify({}, 'qtyItems')}>\n                        -\n                    </div>\n                    <div className={bem.modify({}, 'qtyItems')}>\n                        <span className={bem('qtyItem')}>{count}</span>\n                    </div>\n                    <div tabIndex={0} onClick={onMoreClick} className={bem.modify({}, 'qtyItems')}>\n                        +\n                    </div>\n                </div>\n            </div>\n        </td>\n    </tr>\n);\n\nexport const CartListItem = withBem(Component, 'CartListItem');\n","import React from 'react';\nimport { connectToStore } from 'tools/connect';\nimport { StoreType } from 'stores/types';\nimport { CART_MOCK, PRODUCTS_MOCK } from 'mocks';\nimport withBem from 'hoc/withBem';\n\nimport { CartListItem } from '../ListItem/CartListItem';\n\nimport './CartList.scss';\n\ninterface CartListProps extends StoreType, BemProps {}\n\nconst Component: React.FC<CartListProps> = ({ cart, bem }) => {\n    React.useEffect(() => {\n        window.AssistantClient.onData({\n            type: 'smart_app_data',\n            // eslint-disable-next-line\n            smart_app_data: {\n                command: 'SHOW_ITEMS',\n                stock: PRODUCTS_MOCK,\n            },\n        });\n\n        CART_MOCK.forEach((item) => {\n            window.AssistantClient.onData({\n                type: 'smart_app_data',\n                // eslint-disable-next-line\n                smart_app_data: {\n                    command: 'ADD_ITEM',\n                    item,\n                    count: 1,\n                },\n            });\n        });\n    }, []);\n\n    return (\n        <div className={bem()}>\n            <div className={bem('tableWrapper')}>\n                <table className={bem('table')}>\n                    <tbody>\n                        {cart.items.map((item, index) => (\n                            <CartListItem\n                                {...item}\n                                onLessClick={() => cart.removeFromCart({ itemId: item.product.id, count: 1 })}\n                                onMoreClick={() => cart.addToCart(item.product.id)}\n                                index={index + 1}\n                                key={item.product.id}\n                            />\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n};\n\nexport const CartList = withBem(connectToStore(Component), 'CartList');\n","import React from 'react';\nimport { applySnapshot } from 'mobx-state-tree';\nimport { USER_MOCK } from 'mocks';\nimport { isProduction } from 'configs';\nimport Container from 'components/Grids/Container';\nimport Row from 'components/Grids/Row';\nimport Col from 'components/Grids/Col';\nimport { Suggest } from 'components/Suggest/Suggest';\nimport { Header } from 'components/Header/Header';\nimport { HeaderAddress } from 'components/HeaderAddress/HeaderAddress';\nimport { connectToStore } from 'tools/connect';\nimport { StoreType } from 'stores/types';\n\nimport { CartInfo } from './Info/CartInfo';\nimport { CartList } from './List/CartList';\nimport './Cart.scss';\n\ntype CartProps = StoreType;\n\nconst Component: React.FC<CartProps> = ({ user }) => {\n    React.useEffect(() => {\n        const onKeyDown = (event: any) => {\n            switch (event.code) {\n                case 'Digit1':\n                    window.AssistantClient.onData({\n                        type: 'smart_app_data',\n                        // eslint-disable-next-line\n                        smart_app_data: {\n                            command: 'REMOVE_ITEM',\n                            item: '32e5b884-fa98-11e8-80c5-0cc47a817925',\n                            count: 2,\n                        },\n                    });\n                    break;\n                case 'Digit2':\n                    applySnapshot(user, USER_MOCK);\n                    break;\n                default:\n                    break;\n            }\n        };\n\n        document.addEventListener('keydown', onKeyDown);\n\n        return () => {\n            document.removeEventListener('keydown', onKeyDown);\n        };\n    }, [user]);\n\n    return (\n        <>\n            <Header title=\"Корзина\">\n                <HeaderAddress />\n            </Header>\n            <Container className=\"CartPage__container\">\n                <Row className=\"CartPage__row\">\n                    <Col s={2} m={3} l={4} xl={6}>\n                        <CartList />\n                    </Col>\n                    <Col s={2} m={3} l={4} xl={6} className=\"CartPage__text\">\n                        <CartInfo />\n                    </Col>\n                </Row>\n            </Container>\n            {!isProduction ? <Suggest items={['1. Удали два средних черничных попкорна', '2. Дополнить адрес']} /> : ''}\n        </>\n    );\n};\n\nexport const Cart = connectToStore(Component);\n","import React from 'react';\nimport Typography from 'components/Typography';\nimport withBem from 'hoc/withBem';\n\nimport './style.scss';\n\ninterface DeliveryTimeProps {\n    time?: string;\n}\n\nconst DeliveryTime: React.FC<DeliveryTimeProps & BemProps> = ({ bem, time }) => (\n    <div className={bem()}>\n        <div className={bem('icon')} />\n        <div className={bem('block')}>\n            <div>\n                <Typography type=\"subheader\">Доставим за</Typography>\n            </div>\n            <div>\n                <Typography type=\"subheaderDescription\">{time}</Typography>\n            </div>\n        </div>\n    </div>\n);\n\nexport default withBem(DeliveryTime, 'DeliveryTime');\n","import React from 'react';\nimport Container from 'components/Grids/Container';\nimport Row from 'components/Grids/Row';\nimport Col from 'components/Grids/Col';\nimport Typography from 'components/Typography';\nimport { Header } from 'components/Header/Header';\nimport DeliveryTime from 'containers/DeliveryTime';\nimport { StoreType } from 'stores/types';\nimport { connectToStore } from 'tools/connect';\n\nimport './Status.scss';\n\nconst Component: React.FC<StoreType> = ({ cart }) => {\n    const NavigationRightElement = (\n        <>\n            <DeliveryTime time=\"12 минут\" />\n        </>\n    );\n\n    return (\n        <>\n            <Header title=\"Самокат\" rightElement={NavigationRightElement} />\n            <Container className=\"StatusPage\">\n                <Row>\n                    <Col>\n                        <Typography type=\"header\">Заказ успешно офомлен! Номер заказа: {cart.orderId}.</Typography>\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    );\n};\n\nexport const Status = connectToStore(Component);\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { Catalog } from 'pages/Catalog/Catalog';\nimport { Cart } from 'pages/Cart/Cart';\nimport { Status } from 'pages/Status/Status';\nimport { routes } from 'stores/ui';\nimport 'style/global.scss';\nimport 'normalize.css/normalize.css';\n\nimport './style.scss';\n\nconst App: React.FC = () => {\n    const pageRef = React.useRef<HTMLDivElement>(null);\n\n    const fallback = <div>Loading</div>;\n\n    return (\n        <div className=\"AppContainer\" ref={pageRef}>\n            <React.Suspense fallback={fallback}>\n                <Switch>\n                    <Route path={routes.CATALOG}>\n                        <Catalog pageRef={pageRef} />\n                    </Route>\n                    <Route path={routes.CART}>\n                        <Cart pageRef={pageRef} />\n                    </Route>\n                    <Route path={routes.STATUS}>\n                        <Status />\n                    </Route>\n                    <Redirect to={routes.CATALOG} />\n                </Switch>\n            </React.Suspense>\n        </div>\n    );\n};\n\nexport default App;\n","import { useObserver } from 'mobx-react-lite';\n\nimport { StoreType } from '../stores/types';\n\nlet store: StoreType | null = null;\n\nexport const setStore = (newStore: StoreType): void => {\n    store = newStore;\n};\n\ntype PropsType = Record<string, any>;\n\nconst connect = (selector: Function) => (\n    baseComponent: React.FC<StoreType & PropsType>,\n): React.FC<StoreType & PropsType> => {\n    /* eslint-disable */\n    const component = (ownProps: PropsType) => {\n        if (store === null) throw new Error('Please, use setStore before your ReactDOM.render call');\n        return useObserver(() => {\n            return baseComponent({ ...ownProps, ...selector(store, ownProps) });\n        });\n    };\n    /* eslint-enable */\n    component.displayName = baseComponent.name;\n    return component;\n};\n\nexport default connect;\nexport const getStore = (): StoreType | null => store;\n\nexport const connectToStore = (component: React.FC<StoreType & any>): React.FC<StoreType & any> =>\n    connect((storeData: StoreType): StoreType => storeData)(component);\n"],"sourceRoot":""}